/* Generated by Cython 0.21.1 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_21_1"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__smo__media__CoolProp__CoolProp
#define __PYX_HAVE_API__smo__media__CoolProp__CoolProp
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "numpy/npy_math.h"
#include <vector>
#include "CoolProp/CoolProp.h"
#include "SmoFlowMediaExt.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromUString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "smo/media/CoolProp/CoolProp.pyx",
  "smo/media/CoolProp/stringsource",
  "smo/media/CoolProp/stringsource",
  "smo/media/CoolProp/stringsource",
};

/*--- Type declarations ---*/
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid;
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState;
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid;
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor;
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState;

/* "smo/media/CoolProp/CoolProp.pyx":6
 * cimport CoolProp_Imports as CP
 * 
 * cdef class Fluid:             # <<<<<<<<<<<<<<
 * 	"""
 * 	Class representing a CoolProp fluid
 */
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid {
  PyObject_HEAD
  std::string fluidName;
  long fluidIndex;
  Fluid *ptr;
};


/* "smo/media/CoolProp/CoolProp.pyx":143
 * #============================================================================
 * 
 * cdef class SaturationState:             # <<<<<<<<<<<<<<
 * 	cdef CP.CoolPropStateClassSI* ptr
 * 	cdef CP.SmoFlow_CoolPropState* parent
 */
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState {
  PyObject_HEAD
  CoolPropStateClassSI *ptr;
  SmoFlow_CoolPropState *parent;
};


/* "smo/media/CoolProp/CoolProp.pyx":182
 * 			return self.ptr.Q()
 * 
 * cdef class SaturationStateLiquid(SaturationState):             # <<<<<<<<<<<<<<
 * 	def __cinit__(self, FluidState fs):
 * 		self.parent = fs.ptr
 */
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState __pyx_base;
};


/* "smo/media/CoolProp/CoolProp.pyx":219
 * 			return self.parent.dhdp_along_sat_liquid()
 * 
 * cdef class SaturationStateVapor(SaturationState):             # <<<<<<<<<<<<<<
 * 	def __cinit__(self, FluidState fs):
 * 		self.parent = fs.ptr
 */
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState __pyx_base;
};


/* "smo/media/CoolProp/CoolProp.pyx":265
 * cdef long iQ = CP.get_param_index('Q')
 * 
 * cdef class FluidState:             # <<<<<<<<<<<<<<
 * 	cdef CP.SmoFlow_CoolPropState* ptr
 * 	cdef public SaturationStateLiquid _SatL
 */
struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState {
  PyObject_HEAD
  SmoFlow_CoolPropState *ptr;
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *_SatL;
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *_SatV;
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *fluid;
  bool updated;
};

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE int __Pyx_PySequence_Contains(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

#if PY_MAJOR_VERSION < 3
#define __Pyx_PyString_Join __Pyx_PyBytes_Join
#define __Pyx_PyBaseString_Join(s, v) (PyUnicode_CheckExact(s) ? PyUnicode_Join(s, v) : __Pyx_PyBytes_Join(s, v))
#else
#define __Pyx_PyString_Join PyUnicode_Join
#define __Pyx_PyBaseString_Join PyUnicode_Join
#endif
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION < 3
    #define __Pyx_PyBytes_Join _PyString_Join
    #else
    #define __Pyx_PyBytes_Join _PyBytes_Join
    #endif
#else
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values);
#endif

#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

#include <new>

#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static int __Pyx_check_binary_version(void);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'numpy.math' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'smo.media.CoolProp.CoolProp_Imports' */

/* Module declarations from 'smo.media.CoolProp.CoolProp' */
static PyTypeObject *__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_Fluid = 0;
static PyTypeObject *__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationState = 0;
static PyTypeObject *__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid = 0;
static PyTypeObject *__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor = 0;
static PyTypeObject *__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_FluidState = 0;
static long __pyx_v_3smo_5media_8CoolProp_8CoolProp_iP;
static long __pyx_v_3smo_5media_8CoolProp_8CoolProp_iT;
static long __pyx_v_3smo_5media_8CoolProp_8CoolProp_iD;
static long __pyx_v_3smo_5media_8CoolProp_8CoolProp_iH;
static long __pyx_v_3smo_5media_8CoolProp_8CoolProp_iS;
static long __pyx_v_3smo_5media_8CoolProp_8CoolProp_iQ;
static std::string __pyx_convert_string_from_py_std__string(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__string(std::string const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_std_3a__3a_string(const std::vector<std::string>  &); /*proto*/
#define __Pyx_MODULE_NAME "smo.media.CoolProp.CoolProp"
int __pyx_module_is_main_smo__media__CoolProp__CoolProp = 0;

/* Implementation of 'smo.media.CoolProp.CoolProp' */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_range;
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__(CYTHON_UNUSED struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_fluidName); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_2__cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, std::string __pyx_v_fluidName); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_4BibTeXKey(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_12EOSReference___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_18TransportReference___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_3CAS___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8ASHRAE34___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_4name___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_7aliases___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_9molarMass___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_15accentricFactor___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8critical___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_7tripple___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_11fluidLimits___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_6saturation_p(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, double __pyx_v_p); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8saturation_T(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, double __pyx_v_T); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_3rho___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1h___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1s___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid___cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self, struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_fs); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor___cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self, struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_fs); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__(CYTHON_UNUSED struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_fluid); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2__cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, PyObject *__pyx_v_fluid); /* proto */
static void __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4__dealloc__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6checkUpdated(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5fluid___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_3rho___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1h___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2dT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8isTwoPhase(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_10b(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_TRef); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1u___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1s___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cv___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdp_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdrho_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvds_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdv_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdp_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dhdT_p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_h___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdT_sat___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdq_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdq_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dqdT_v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4beta___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2mu___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4cond___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2Pr___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5gamma___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_12update(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, std::string __pyx_v_state1, double __pyx_v_state1Value, std::string __pyx_v_state2, double __pyx_v_state2Value); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_14update_Tp(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_p); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_16update_Trho(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_rho); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_18update_Ts(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_s); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_20update_prho(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_rho); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_22update_ph(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_h); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_24update_ps(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_s); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_26update_pq(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_q); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_28update_Tq(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_q); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatL___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatV___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_30getStateVarsAsDict(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_2__set__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_4__del__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_2__set__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_4__del__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_Fluid(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_FluidState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_[] = ", ";
static char __pyx_k_D[] = "D";
static char __pyx_k_H[] = "H";
static char __pyx_k_P[] = "P";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_S[] = "S";
static char __pyx_k_T[] = "T";
static char __pyx_k_h[] = "h";
static char __pyx_k_p[] = "p";
static char __pyx_k_q[] = "q";
static char __pyx_k_s[] = "s";
static char __pyx_k_dT[] = "dT";
static char __pyx_k_fs[] = "fs";
static char __pyx_k_CP0[] = "CP0";
static char __pyx_k_EOS[] = "EOS";
static char __pyx_k_rho[] = "rho";
static char __pyx_k_TMax[] = "TMax";
static char __pyx_k_TMin[] = "TMin";
static char __pyx_k_join[] = "join";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_pMax[] = "pMax";
static char __pyx_k_rhoL[] = "rhoL";
static char __pyx_k_rhoV[] = "rhoV";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_TsatL[] = "TsatL";
static char __pyx_k_TsatV[] = "TsatV";
static char __pyx_k_fluid[] = "fluid";
static char __pyx_k_psatL[] = "psatL";
static char __pyx_k_psatV[] = "psatV";
static char __pyx_k_range[] = "range";
static char __pyx_k_format[] = "format";
static char __pyx_k_rhoMax[] = "rhoMax";
static char __pyx_k_state1[] = "state1";
static char __pyx_k_state2[] = "state2";
static char __pyx_k_density[] = "density";
static char __pyx_k_ECS_FITS[] = "ECS_FITS";
static char __pyx_k_KeyError[] = "KeyError";
static char __pyx_k_pressure[] = "pressure";
static char __pyx_k_TypeError[] = "TypeError";
static char __pyx_k_VISCOSITY[] = "VISCOSITY";
static char __pyx_k_fluidName[] = "fluidName";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_state1Value[] = "state1Value";
static char __pyx_k_state2Value[] = "state2Value";
static char __pyx_k_temperature[] = "temperature";
static char __pyx_k_CONDUCTIVITY[] = "CONDUCTIVITY";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_checkUpdated[] = "checkUpdated";
static char __pyx_k_saturation_p[] = "saturation_p";
static char __pyx_k_name_of_fluid[] = "name of fluid";
static char __pyx_k_vapor_quality[] = "vapor quality";
static char __pyx_k_Prandtl_number[] = "Prandtl number";
static char __pyx_k_SURFACE_TENSION[] = "SURFACE_TENSION";
static char __pyx_k_specific_volume[] = "specific volume";
static char __pyx_k_specific_entropy[] = "specific entropy";
static char __pyx_k_ECS_LENNARD_JONES[] = "ECS_LENNARD_JONES";
static char __pyx_k_dynamic_viscosity[] = "dynamic viscosity";
static char __pyx_k_specific_enthalpy[] = "specific enthalpy";
static char __pyx_k_heat_capacity_ratio[] = "heat capacity ratio";
static char __pyx_k_thermal_conductivity[] = "thermal conductivity";
static char __pyx_k_Saturated_vapor_object[] = "Saturated vapor object";
static char __pyx_k_Saturated_liquid_object[] = "Saturated liquid object";
static char __pyx_k_BibTexKey_must_be_one_of[] = "BibTexKey must be one of ";
static char __pyx_k_equation_of_state_source[] = "equation of state source";
static char __pyx_k_specific_internal_energy[] = "specific internal energy";
static char __pyx_k_No_fluid_with_name_0_found[] = "No fluid with name {0} found";
static char __pyx_k_transport_properties_source[] = "transport properties source";
static char __pyx_k_isobaric_thermal_expansivity[] = "isobaric thermal expansivity";
static char __pyx_k_super_heating_or_sub_cooling[] = "super-heating or sub-cooling";
static char __pyx_k_In_order_to_read_a_property_you[] = "In order to read a property, you must first call one of the 'update' functions";
static char __pyx_k_The_argument_of_FluidState_const[] = "The argument of FluidState constructor must be either str or Fluid";
static char __pyx_k_dictionary_of_critial_point_valu[] = "dictionary of critial point values - p, T, rho, h, s";
static char __pyx_k_dictionary_of_tripple_point_valu[] = "dictionary of tripple point values - p, T, rhoV, rhoL";
static char __pyx_k_fluid_limits_TMin_TMax_pMax_rhoM[] = "fluid limits - TMin, TMax, pMax, rhoMax";
static char __pyx_k_specific_heat_capacity_at_consta[] = "specific heat capacity at constant pressure";
static char __pyx_k_specific_heat_capacity_at_consta_2[] = "specific heat capacity at constant volume";
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_kp_s_BibTexKey_must_be_one_of;
static PyObject *__pyx_n_s_CONDUCTIVITY;
static PyObject *__pyx_n_s_CP0;
static PyObject *__pyx_n_b_D;
static PyObject *__pyx_n_s_ECS_FITS;
static PyObject *__pyx_n_s_ECS_LENNARD_JONES;
static PyObject *__pyx_n_s_EOS;
static PyObject *__pyx_n_b_H;
static PyObject *__pyx_kp_s_In_order_to_read_a_property_you;
static PyObject *__pyx_n_s_KeyError;
static PyObject *__pyx_kp_s_No_fluid_with_name_0_found;
static PyObject *__pyx_n_b_P;
static PyObject *__pyx_n_b_Q;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_b_S;
static PyObject *__pyx_n_s_SURFACE_TENSION;
static PyObject *__pyx_n_b_T;
static PyObject *__pyx_n_s_T;
static PyObject *__pyx_n_s_TMax;
static PyObject *__pyx_n_s_TMin;
static PyObject *__pyx_kp_s_The_argument_of_FluidState_const;
static PyObject *__pyx_n_s_TsatL;
static PyObject *__pyx_n_s_TsatV;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_VISCOSITY;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_checkUpdated;
static PyObject *__pyx_n_b_dT;
static PyObject *__pyx_n_s_fluid;
static PyObject *__pyx_n_s_fluidName;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_fs;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_join;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_pMax;
static PyObject *__pyx_n_s_psatL;
static PyObject *__pyx_n_s_psatV;
static PyObject *__pyx_n_s_q;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rho;
static PyObject *__pyx_n_s_rhoL;
static PyObject *__pyx_n_s_rhoMax;
static PyObject *__pyx_n_s_rhoV;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_n_s_saturation_p;
static PyObject *__pyx_n_s_state1;
static PyObject *__pyx_n_s_state1Value;
static PyObject *__pyx_n_s_state2;
static PyObject *__pyx_n_s_state2Value;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_float_neg_1_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;

/* "smo/media/CoolProp/CoolProp.pyx":14
 * 	cdef CP.Fluid* ptr
 * 
 * 	def __init__(self, fluidName):             # <<<<<<<<<<<<<<
 * 		"""__init__(fluidName)
 * 		:param fluidName: name of fluid
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__[] = "__init__(fluidName)\n\t\t:param fluidName: name of fluid\n\t\t";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__;
#endif
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_fluidName = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fluidName,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fluidName)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fluidName = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self), __pyx_v_fluidName);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__(CYTHON_UNUSED struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_fluidName) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":20
 * 		pass
 * 
 * 	def __cinit__(self, string fluidName):             # <<<<<<<<<<<<<<
 * 		self.fluidName = fluidName
 * 		self.fluidIndex = CP.get_Fluid_index(fluidName)
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_fluidName;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fluidName,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fluidName)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fluidName = __pyx_convert_string_from_py_std__string(values[0]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_2__cinit__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self), __pyx_v_fluidName);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_2__cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, std::string __pyx_v_fluidName) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Fluid *__pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":21
 * 
 * 	def __cinit__(self, string fluidName):
 * 		self.fluidName = fluidName             # <<<<<<<<<<<<<<
 * 		self.fluidIndex = CP.get_Fluid_index(fluidName)
 * 		if (self.fluidIndex == -1):
 */
  __pyx_v_self->fluidName = __pyx_v_fluidName;

  /* "smo/media/CoolProp/CoolProp.pyx":22
 * 	def __cinit__(self, string fluidName):
 * 		self.fluidName = fluidName
 * 		self.fluidIndex = CP.get_Fluid_index(fluidName)             # <<<<<<<<<<<<<<
 * 		if (self.fluidIndex == -1):
 * 			raise ValueError('No fluid with name {0} found'.format(self.fluidName))
 */
  try {
    __pyx_t_1 = get_Fluid_index(__pyx_v_fluidName);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->fluidIndex = __pyx_t_1;

  /* "smo/media/CoolProp/CoolProp.pyx":23
 * 		self.fluidName = fluidName
 * 		self.fluidIndex = CP.get_Fluid_index(fluidName)
 * 		if (self.fluidIndex == -1):             # <<<<<<<<<<<<<<
 * 			raise ValueError('No fluid with name {0} found'.format(self.fluidName))
 * 		self.ptr = CP.get_fluid(self.fluidIndex)
 */
  __pyx_t_2 = ((__pyx_v_self->fluidIndex == -1) != 0);
  if (__pyx_t_2) {

    /* "smo/media/CoolProp/CoolProp.pyx":24
 * 		self.fluidIndex = CP.get_Fluid_index(fluidName)
 * 		if (self.fluidIndex == -1):
 * 			raise ValueError('No fluid with name {0} found'.format(self.fluidName))             # <<<<<<<<<<<<<<
 * 		self.ptr = CP.get_fluid(self.fluidIndex)
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_No_fluid_with_name_0_found, __pyx_n_s_format); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_v_self->fluidName); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":25
 * 		if (self.fluidIndex == -1):
 * 			raise ValueError('No fluid with name {0} found'.format(self.fluidName))
 * 		self.ptr = CP.get_fluid(self.fluidIndex)             # <<<<<<<<<<<<<<
 * 
 * 	def	BibTeXKey(self, item):
 */
  try {
    __pyx_t_8 = get_fluid(__pyx_v_self->fluidIndex);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->ptr = __pyx_t_8;

  /* "smo/media/CoolProp/CoolProp.pyx":20
 * 		pass
 * 
 * 	def __cinit__(self, string fluidName):             # <<<<<<<<<<<<<<
 * 		self.fluidName = fluidName
 * 		self.fluidIndex = CP.get_Fluid_index(fluidName)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":27
 * 		self.ptr = CP.get_fluid(self.fluidIndex)
 * 
 * 	def	BibTeXKey(self, item):             # <<<<<<<<<<<<<<
 * 		""" BibTeXKey(item)
 * 		Bibliographic info """
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_5BibTeXKey(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid_4BibTeXKey[] = " BibTeXKey(item)\n\t\tBibliographic info ";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_5BibTeXKey(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BibTeXKey (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_4BibTeXKey(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_4BibTeXKey(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_v_validKeys = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  std::string __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BibTeXKey", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":30
 * 		""" BibTeXKey(item)
 * 		Bibliographic info """
 * 		validKeys = ["EOS", "CP0", "VISCOSITY", "CONDUCTIVITY",             # <<<<<<<<<<<<<<
 * 					 "ECS_LENNARD_JONES", "ECS_FITS", "SURFACE_TENSION"]
 * 		if (item not in validKeys):
 */
  __pyx_t_1 = PyList_New(7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_EOS);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_EOS);
  __Pyx_GIVEREF(__pyx_n_s_EOS);
  __Pyx_INCREF(__pyx_n_s_CP0);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_CP0);
  __Pyx_GIVEREF(__pyx_n_s_CP0);
  __Pyx_INCREF(__pyx_n_s_VISCOSITY);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_VISCOSITY);
  __Pyx_GIVEREF(__pyx_n_s_VISCOSITY);
  __Pyx_INCREF(__pyx_n_s_CONDUCTIVITY);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_CONDUCTIVITY);
  __Pyx_GIVEREF(__pyx_n_s_CONDUCTIVITY);
  __Pyx_INCREF(__pyx_n_s_ECS_LENNARD_JONES);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_ECS_LENNARD_JONES);
  __Pyx_GIVEREF(__pyx_n_s_ECS_LENNARD_JONES);
  __Pyx_INCREF(__pyx_n_s_ECS_FITS);
  PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_s_ECS_FITS);
  __Pyx_GIVEREF(__pyx_n_s_ECS_FITS);
  __Pyx_INCREF(__pyx_n_s_SURFACE_TENSION);
  PyList_SET_ITEM(__pyx_t_1, 6, __pyx_n_s_SURFACE_TENSION);
  __Pyx_GIVEREF(__pyx_n_s_SURFACE_TENSION);
  __pyx_v_validKeys = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":32
 * 		validKeys = ["EOS", "CP0", "VISCOSITY", "CONDUCTIVITY",
 * 					 "ECS_LENNARD_JONES", "ECS_FITS", "SURFACE_TENSION"]
 * 		if (item not in validKeys):             # <<<<<<<<<<<<<<
 * 			raise KeyError('BibTexKey must be one of ' + ', '.join(validKeys))
 * 		return CP.get_BibTeXKey(self.fluidName, item)
 */
  __pyx_t_2 = (__Pyx_PySequence_Contains(__pyx_v_item, __pyx_v_validKeys, Py_NE)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "smo/media/CoolProp/CoolProp.pyx":33
 * 					 "ECS_LENNARD_JONES", "ECS_FITS", "SURFACE_TENSION"]
 * 		if (item not in validKeys):
 * 			raise KeyError('BibTexKey must be one of ' + ', '.join(validKeys))             # <<<<<<<<<<<<<<
 * 		return CP.get_BibTeXKey(self.fluidName, item)
 * 
 */
    __pyx_t_1 = __Pyx_PyString_Join(__pyx_kp_s_, __pyx_v_validKeys); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Add(__pyx_kp_s_BibTexKey_must_be_one_of, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_KeyError, __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":34
 * 		if (item not in validKeys):
 * 			raise KeyError('BibTexKey must be one of ' + ', '.join(validKeys))
 * 		return CP.get_BibTeXKey(self.fluidName, item)             # <<<<<<<<<<<<<<
 * 
 * 	property EOSReference:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __pyx_convert_string_from_py_std__string(__pyx_v_item); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_6 = get_BibTeXKey(__pyx_v_self->fluidName, __pyx_t_5);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_4 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":27
 * 		self.ptr = CP.get_fluid(self.fluidIndex)
 * 
 * 	def	BibTeXKey(self, item):             # <<<<<<<<<<<<<<
 * 		""" BibTeXKey(item)
 * 		Bibliographic info """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.BibTeXKey", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_validKeys);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":38
 * 	property EOSReference:
 * 		"""equation of state source"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.get_EOSReference()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_12EOSReference_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_12EOSReference_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_12EOSReference___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_12EOSReference___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":39
 * 		"""equation of state source"""
 * 		def __get__(self):
 * 			return self.ptr.get_EOSReference()             # <<<<<<<<<<<<<<
 * 
 * 	property TransportReference:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->ptr->get_EOSReference();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":38
 * 	property EOSReference:
 * 		"""equation of state source"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.get_EOSReference()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.EOSReference.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":43
 * 	property TransportReference:
 * 		"""transport properties source"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.get_TransportReference()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_18TransportReference_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_18TransportReference_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_18TransportReference___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_18TransportReference___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":44
 * 		"""transport properties source"""
 * 		def __get__(self):
 * 			return self.ptr.get_TransportReference()             # <<<<<<<<<<<<<<
 * 
 * 	property CAS:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->ptr->get_TransportReference();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":43
 * 	property TransportReference:
 * 		"""transport properties source"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.get_TransportReference()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.TransportReference.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":48
 * 	property CAS:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.params.CAS
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_3CAS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_3CAS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_3CAS___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_3CAS___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":49
 * 		""""""
 * 		def __get__(self):
 * 			return self.ptr.params.CAS             # <<<<<<<<<<<<<<
 * 
 * 	property ASHRAE34:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_v_self->ptr->params.CAS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":48
 * 	property CAS:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.params.CAS
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.CAS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":53
 * 	property ASHRAE34:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.environment.ASHRAE34
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_8ASHRAE34_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_8ASHRAE34_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8ASHRAE34___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8ASHRAE34___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":54
 * 		""""""
 * 		def __get__(self):
 * 			return self.ptr.environment.ASHRAE34             # <<<<<<<<<<<<<<
 * 
 * 	property name:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_v_self->ptr->environment.ASHRAE34); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":53
 * 	property ASHRAE34:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.environment.ASHRAE34
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.ASHRAE34.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":58
 * 	property name:
 * 		"""name of fluid"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.fluidName
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_4name___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_4name___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":59
 * 		"""name of fluid"""
 * 		def __get__(self):
 * 			return self.fluidName             # <<<<<<<<<<<<<<
 * 
 * 	property aliases:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_v_self->fluidName); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":58
 * 	property name:
 * 		"""name of fluid"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.fluidName
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":63
 * 	property aliases:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.get_aliases()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7aliases_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7aliases_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_7aliases___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_7aliases___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<std::string>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":64
 * 		""""""
 * 		def __get__(self):
 * 			return self.ptr.get_aliases()             # <<<<<<<<<<<<<<
 * 
 * 	property molarMass:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->ptr->get_aliases();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __pyx_convert_vector_to_py_std_3a__3a_string(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":63
 * 	property aliases:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.get_aliases()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.aliases.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":68
 * 	property molarMass:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.params.molemass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_9molarMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_9molarMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_9molarMass___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_9molarMass___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":69
 * 		""""""
 * 		def __get__(self):
 * 			return self.ptr.params.molemass             # <<<<<<<<<<<<<<
 * 
 * 	property accentricFactor:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->params.molemass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":68
 * 	property molarMass:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.params.molemass
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.molarMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":73
 * 	property accentricFactor:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.params.accentricfactor
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_15accentricFactor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_15accentricFactor_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_15accentricFactor___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_15accentricFactor___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":74
 * 		""""""
 * 		def __get__(self):
 * 			return self.ptr.params.accentricfactor             # <<<<<<<<<<<<<<
 * 
 * 	property critical:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->params.accentricfactor); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":73
 * 	property accentricFactor:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.params.accentricfactor
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.accentricFactor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":78
 * 	property critical:
 * 		"""dictionary of critial point values - p, T, rho, h, s"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return {
 * 				'p': self.ptr.crit.p.Pa,
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_8critical_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_8critical_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8critical___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8critical___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":79
 * 		"""dictionary of critial point values - p, T, rho, h, s"""
 * 		def __get__(self):
 * 			return {             # <<<<<<<<<<<<<<
 * 				'p': self.ptr.crit.p.Pa,
 * 				'T': self.ptr.crit.T,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "smo/media/CoolProp/CoolProp.pyx":80
 * 		def __get__(self):
 * 			return {
 * 				'p': self.ptr.crit.p.Pa,             # <<<<<<<<<<<<<<
 * 				'T': self.ptr.crit.T,
 * 				'rho': self.ptr.crit.rho,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->crit.p.Pa); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":81
 * 			return {
 * 				'p': self.ptr.crit.p.Pa,
 * 				'T': self.ptr.crit.T,             # <<<<<<<<<<<<<<
 * 				'rho': self.ptr.crit.rho,
 * 				'h': self.ptr.crit.h,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->crit.T); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_T, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":82
 * 				'p': self.ptr.crit.p.Pa,
 * 				'T': self.ptr.crit.T,
 * 				'rho': self.ptr.crit.rho,             # <<<<<<<<<<<<<<
 * 				'h': self.ptr.crit.h,
 * 				's': self.ptr.crit.s,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->crit.rho); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rho, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":83
 * 				'T': self.ptr.crit.T,
 * 				'rho': self.ptr.crit.rho,
 * 				'h': self.ptr.crit.h,             # <<<<<<<<<<<<<<
 * 				's': self.ptr.crit.s,
 * 				}
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->crit.h); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_h, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":84
 * 				'rho': self.ptr.crit.rho,
 * 				'h': self.ptr.crit.h,
 * 				's': self.ptr.crit.s,             # <<<<<<<<<<<<<<
 * 				}
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->crit.s); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_s, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":78
 * 	property critical:
 * 		"""dictionary of critial point values - p, T, rho, h, s"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return {
 * 				'p': self.ptr.crit.p.Pa,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.critical.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":89
 * 	property tripple:
 * 		"""dictionary of tripple point values - p, T, rhoV, rhoL"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return {
 * 				'p': self.ptr.params.ptriple,
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7tripple_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7tripple_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_7tripple___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_7tripple___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":90
 * 		"""dictionary of tripple point values - p, T, rhoV, rhoL"""
 * 		def __get__(self):
 * 			return {             # <<<<<<<<<<<<<<
 * 				'p': self.ptr.params.ptriple,
 * 				'T' : self.ptr.params.Ttriple,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "smo/media/CoolProp/CoolProp.pyx":91
 * 		def __get__(self):
 * 			return {
 * 				'p': self.ptr.params.ptriple,             # <<<<<<<<<<<<<<
 * 				'T' : self.ptr.params.Ttriple,
 * 				'rhoV': self.ptr.params.rhoVtriple,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->params.ptriple); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":92
 * 			return {
 * 				'p': self.ptr.params.ptriple,
 * 				'T' : self.ptr.params.Ttriple,             # <<<<<<<<<<<<<<
 * 				'rhoV': self.ptr.params.rhoVtriple,
 * 				'rhoL': self.ptr.params.rhoLtriple,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->params.Ttriple); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_T, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":93
 * 				'p': self.ptr.params.ptriple,
 * 				'T' : self.ptr.params.Ttriple,
 * 				'rhoV': self.ptr.params.rhoVtriple,             # <<<<<<<<<<<<<<
 * 				'rhoL': self.ptr.params.rhoLtriple,
 * 				}
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->params.rhoVtriple); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoV, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":94
 * 				'T' : self.ptr.params.Ttriple,
 * 				'rhoV': self.ptr.params.rhoVtriple,
 * 				'rhoL': self.ptr.params.rhoLtriple,             # <<<<<<<<<<<<<<
 * 				}
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->params.rhoLtriple); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":89
 * 	property tripple:
 * 		"""dictionary of tripple point values - p, T, rhoV, rhoL"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return {
 * 				'p': self.ptr.params.ptriple,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.tripple.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":99
 * 	property fluidLimits:
 * 		"""fluid limits - TMin, TMax, pMax, rhoMax"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return {
 * 				'TMin': self.ptr.limits.Tmin,
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_11fluidLimits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_11fluidLimits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_11fluidLimits___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_11fluidLimits___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":100
 * 		"""fluid limits - TMin, TMax, pMax, rhoMax"""
 * 		def __get__(self):
 * 			return {             # <<<<<<<<<<<<<<
 * 				'TMin': self.ptr.limits.Tmin,
 * 				'TMax': self.ptr.limits.Tmax,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "smo/media/CoolProp/CoolProp.pyx":101
 * 		def __get__(self):
 * 			return {
 * 				'TMin': self.ptr.limits.Tmin,             # <<<<<<<<<<<<<<
 * 				'TMax': self.ptr.limits.Tmax,
 * 				'pMax': self.ptr.limits.pmax,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->limits.Tmin); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_TMin, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":102
 * 			return {
 * 				'TMin': self.ptr.limits.Tmin,
 * 				'TMax': self.ptr.limits.Tmax,             # <<<<<<<<<<<<<<
 * 				'pMax': self.ptr.limits.pmax,
 * 				'rhoMax': self.ptr.limits.rhomax
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->limits.Tmax); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_TMax, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":103
 * 				'TMin': self.ptr.limits.Tmin,
 * 				'TMax': self.ptr.limits.Tmax,
 * 				'pMax': self.ptr.limits.pmax,             # <<<<<<<<<<<<<<
 * 				'rhoMax': self.ptr.limits.rhomax
 * 				}
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->limits.pmax); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_pMax, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":104
 * 				'TMax': self.ptr.limits.Tmax,
 * 				'pMax': self.ptr.limits.pmax,
 * 				'rhoMax': self.ptr.limits.rhomax             # <<<<<<<<<<<<<<
 * 				}
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->ptr->limits.rhomax); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoMax, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":99
 * 	property fluidLimits:
 * 		"""fluid limits - TMin, TMax, pMax, rhoMax"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return {
 * 				'TMin': self.ptr.limits.Tmin,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.fluidLimits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":107
 * 				}
 * 
 * 	def saturation_p(self, double p):             # <<<<<<<<<<<<<<
 * 		"""saturation_p(p)
 * 		Computes saturation properties at given pressure\n
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7saturation_p(PyObject *__pyx_v_self, PyObject *__pyx_arg_p); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid_6saturation_p[] = "saturation_p(p)\n\t\tComputes saturation properties at given pressure\n\n\t\tReturns dictionary of values - TsatL, TsatV, rhoL, rhoV\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7saturation_p(PyObject *__pyx_v_self, PyObject *__pyx_arg_p) {
  double __pyx_v_p;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("saturation_p (wrapper)", 0);
  assert(__pyx_arg_p); {
    __pyx_v_p = __pyx_PyFloat_AsDouble(__pyx_arg_p); if (unlikely((__pyx_v_p == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.saturation_p", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_6saturation_p(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self), ((double)__pyx_v_p));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_6saturation_p(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, double __pyx_v_p) {
  double __pyx_v_TsatLout;
  double __pyx_v_TsatVout;
  double __pyx_v_rhoLout;
  double __pyx_v_rhoVout;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturation_p", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":112
 * 		Returns dictionary of values - TsatL, TsatV, rhoL, rhoV
 * 		"""
 * 		cdef double TsatLout = 0             # <<<<<<<<<<<<<<
 * 		cdef double TsatVout = 0
 * 		cdef double rhoLout = 0
 */
  __pyx_v_TsatLout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":113
 * 		"""
 * 		cdef double TsatLout = 0
 * 		cdef double TsatVout = 0             # <<<<<<<<<<<<<<
 * 		cdef double rhoLout = 0
 * 		cdef double rhoVout = 0
 */
  __pyx_v_TsatVout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":114
 * 		cdef double TsatLout = 0
 * 		cdef double TsatVout = 0
 * 		cdef double rhoLout = 0             # <<<<<<<<<<<<<<
 * 		cdef double rhoVout = 0
 * 		self.ptr.saturation_p(p, False, TsatLout, TsatVout, rhoLout, rhoVout)
 */
  __pyx_v_rhoLout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":115
 * 		cdef double TsatVout = 0
 * 		cdef double rhoLout = 0
 * 		cdef double rhoVout = 0             # <<<<<<<<<<<<<<
 * 		self.ptr.saturation_p(p, False, TsatLout, TsatVout, rhoLout, rhoVout)
 * 		return {
 */
  __pyx_v_rhoVout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":116
 * 		cdef double rhoLout = 0
 * 		cdef double rhoVout = 0
 * 		self.ptr.saturation_p(p, False, TsatLout, TsatVout, rhoLout, rhoVout)             # <<<<<<<<<<<<<<
 * 		return {
 * 			'TsatL': TsatLout,
 */
  try {
    __pyx_v_self->ptr->saturation_p(__pyx_v_p, 0, __pyx_v_TsatLout, __pyx_v_TsatVout, __pyx_v_rhoLout, __pyx_v_rhoVout);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":117
 * 		cdef double rhoVout = 0
 * 		self.ptr.saturation_p(p, False, TsatLout, TsatVout, rhoLout, rhoVout)
 * 		return {             # <<<<<<<<<<<<<<
 * 			'TsatL': TsatLout,
 * 			'TsatV': TsatVout,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "smo/media/CoolProp/CoolProp.pyx":118
 * 		self.ptr.saturation_p(p, False, TsatLout, TsatVout, rhoLout, rhoVout)
 * 		return {
 * 			'TsatL': TsatLout,             # <<<<<<<<<<<<<<
 * 			'TsatV': TsatVout,
 * 			'rhoL': rhoLout,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_TsatLout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_TsatL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":119
 * 		return {
 * 			'TsatL': TsatLout,
 * 			'TsatV': TsatVout,             # <<<<<<<<<<<<<<
 * 			'rhoL': rhoLout,
 * 			'rhoV': rhoVout
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_TsatVout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_TsatV, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":120
 * 			'TsatL': TsatLout,
 * 			'TsatV': TsatVout,
 * 			'rhoL': rhoLout,             # <<<<<<<<<<<<<<
 * 			'rhoV': rhoVout
 * 			}
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_rhoLout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":122
 * 			'rhoL': rhoLout,
 * 			'rhoV': rhoVout
 * 			}             # <<<<<<<<<<<<<<
 * 
 * 	def saturation_T(self, double T):
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_rhoVout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoV, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":107
 * 				}
 * 
 * 	def saturation_p(self, double p):             # <<<<<<<<<<<<<<
 * 		"""saturation_p(p)
 * 		Computes saturation properties at given pressure\n
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.saturation_p", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":124
 * 			}
 * 
 * 	def saturation_T(self, double T):             # <<<<<<<<<<<<<<
 * 		"""saturation_T(T)
 * 		Computes saturation properties at given temperature\n
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_9saturation_T(PyObject *__pyx_v_self, PyObject *__pyx_arg_T); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid_8saturation_T[] = "saturation_T(T)\n\t\tComputes saturation properties at given temperature\n\n\t\tReturns dictionary of values - psatL, psatV, rhoL, rhoV\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_9saturation_T(PyObject *__pyx_v_self, PyObject *__pyx_arg_T) {
  double __pyx_v_T;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("saturation_T (wrapper)", 0);
  assert(__pyx_arg_T); {
    __pyx_v_T = __pyx_PyFloat_AsDouble(__pyx_arg_T); if (unlikely((__pyx_v_T == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.saturation_T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8saturation_T(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_self), ((double)__pyx_v_T));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_5Fluid_8saturation_T(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *__pyx_v_self, double __pyx_v_T) {
  double __pyx_v_psatLout;
  double __pyx_v_psatVout;
  double __pyx_v_rhoLout;
  double __pyx_v_rhoVout;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturation_T", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":129
 * 		Returns dictionary of values - psatL, psatV, rhoL, rhoV
 * 		"""
 * 		cdef double psatLout = 0             # <<<<<<<<<<<<<<
 * 		cdef double psatVout = 0
 * 		cdef double rhoLout = 0
 */
  __pyx_v_psatLout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":130
 * 		"""
 * 		cdef double psatLout = 0
 * 		cdef double psatVout = 0             # <<<<<<<<<<<<<<
 * 		cdef double rhoLout = 0
 * 		cdef double rhoVout = 0
 */
  __pyx_v_psatVout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":131
 * 		cdef double psatLout = 0
 * 		cdef double psatVout = 0
 * 		cdef double rhoLout = 0             # <<<<<<<<<<<<<<
 * 		cdef double rhoVout = 0
 * 		self.ptr.saturation_T(T, False, psatLout, psatVout, rhoLout, rhoVout)
 */
  __pyx_v_rhoLout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":132
 * 		cdef double psatVout = 0
 * 		cdef double rhoLout = 0
 * 		cdef double rhoVout = 0             # <<<<<<<<<<<<<<
 * 		self.ptr.saturation_T(T, False, psatLout, psatVout, rhoLout, rhoVout)
 * 		return {
 */
  __pyx_v_rhoVout = 0.0;

  /* "smo/media/CoolProp/CoolProp.pyx":133
 * 		cdef double rhoLout = 0
 * 		cdef double rhoVout = 0
 * 		self.ptr.saturation_T(T, False, psatLout, psatVout, rhoLout, rhoVout)             # <<<<<<<<<<<<<<
 * 		return {
 * 			'psatL': psatLout,
 */
  try {
    __pyx_v_self->ptr->saturation_T(__pyx_v_T, 0, __pyx_v_psatLout, __pyx_v_psatVout, __pyx_v_rhoLout, __pyx_v_rhoVout);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":134
 * 		cdef double rhoVout = 0
 * 		self.ptr.saturation_T(T, False, psatLout, psatVout, rhoLout, rhoVout)
 * 		return {             # <<<<<<<<<<<<<<
 * 			'psatL': psatLout,
 * 			'psatV': psatVout,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "smo/media/CoolProp/CoolProp.pyx":135
 * 		self.ptr.saturation_T(T, False, psatLout, psatVout, rhoLout, rhoVout)
 * 		return {
 * 			'psatL': psatLout,             # <<<<<<<<<<<<<<
 * 			'psatV': psatVout,
 * 			'rhoL': rhoLout,
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_psatLout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_psatL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":136
 * 		return {
 * 			'psatL': psatLout,
 * 			'psatV': psatVout,             # <<<<<<<<<<<<<<
 * 			'rhoL': rhoLout,
 * 			'rhoV': rhoVout
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_psatVout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_psatV, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":137
 * 			'psatL': psatLout,
 * 			'psatV': psatVout,
 * 			'rhoL': rhoLout,             # <<<<<<<<<<<<<<
 * 			'rhoV': rhoVout
 * 			}
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_rhoLout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoL, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":139
 * 			'rhoL': rhoLout,
 * 			'rhoV': rhoVout
 * 			}             # <<<<<<<<<<<<<<
 * 
 * #============================================================================
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_rhoVout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rhoV, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":124
 * 			}
 * 
 * 	def saturation_T(self, double T):             # <<<<<<<<<<<<<<
 * 		"""saturation_T(T)
 * 		Computes saturation properties at given temperature\n
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.Fluid.saturation_T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":149
 * 	property T:
 * 		"""temperature"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.T()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":150
 * 		"""temperature"""
 * 		def __get__(self):
 * 			return self.ptr.T()             # <<<<<<<<<<<<<<
 * 
 * 	property p:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->T()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":149
 * 	property T:
 * 		"""temperature"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.T()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":154
 * 	property p:
 * 		"""pressure"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.p()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1p_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1p_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1p___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":155
 * 		"""pressure"""
 * 		def __get__(self):
 * 			return self.ptr.p()             # <<<<<<<<<<<<<<
 * 
 * 	property rho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->p()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":154
 * 	property p:
 * 		"""pressure"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.p()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.p.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":159
 * 	property rho:
 * 		"""density"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.rho()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_3rho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_3rho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_3rho___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_3rho___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":160
 * 		"""density"""
 * 		def __get__(self):
 * 			return self.ptr.rho()             # <<<<<<<<<<<<<<
 * 
 * 	property v:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->rho()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":159
 * 	property rho:
 * 		"""density"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.rho()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.rho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":164
 * 	property v:
 * 		"""specific volume"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return 1./self.ptr.rho()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1v_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1v_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1v___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":165
 * 		"""specific volume"""
 * 		def __get__(self):
 * 			return 1./self.ptr.rho()             # <<<<<<<<<<<<<<
 * 
 * 	property h:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->ptr->rho();
  if (unlikely(__pyx_t_1 == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = PyFloat_FromDouble((1. / __pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":164
 * 	property v:
 * 		"""specific volume"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return 1./self.ptr.rho()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.v.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":169
 * 	property h:
 * 		"""specific enthalpy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.h()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1h_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1h_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1h___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1h___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":170
 * 		"""specific enthalpy"""
 * 		def __get__(self):
 * 			return self.ptr.h()             # <<<<<<<<<<<<<<
 * 
 * 	property s:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->h()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":169
 * 	property h:
 * 		"""specific enthalpy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.h()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.h.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":174
 * 	property s:
 * 		"""specific enthalpy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.s()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1s_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1s_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1s___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1s___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":175
 * 		"""specific enthalpy"""
 * 		def __get__(self):
 * 			return self.ptr.s()             # <<<<<<<<<<<<<<
 * 
 * 	property q:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->s()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":174
 * 	property s:
 * 		"""specific enthalpy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.s()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.s.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":179
 * 	property q:
 * 		"""vapor quality"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.Q()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1q_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1q_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1q___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":180
 * 		"""vapor quality"""
 * 		def __get__(self):
 * 			return self.ptr.Q()             # <<<<<<<<<<<<<<
 * 
 * cdef class SaturationStateLiquid(SaturationState):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->Q()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":179
 * 	property q:
 * 		"""vapor quality"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.ptr.Q()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationState.q.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":183
 * 
 * cdef class SaturationStateLiquid(SaturationState):
 * 	def __cinit__(self, FluidState fs):             # <<<<<<<<<<<<<<
 * 		self.parent = fs.ptr
 * 		self.ptr = fs.ptr.getSatL()
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_fs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fs,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fs = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_fs), __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_FluidState, 1, "fs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid___cinit__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self), __pyx_v_fs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid___cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self, struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_fs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  SmoFlow_CoolPropState *__pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":184
 * cdef class SaturationStateLiquid(SaturationState):
 * 	def __cinit__(self, FluidState fs):
 * 		self.parent = fs.ptr             # <<<<<<<<<<<<<<
 * 		self.ptr = fs.ptr.getSatL()
 * 
 */
  __pyx_t_1 = __pyx_v_fs->ptr;
  __pyx_v_self->__pyx_base.parent = __pyx_t_1;

  /* "smo/media/CoolProp/CoolProp.pyx":185
 * 	def __cinit__(self, FluidState fs):
 * 		self.parent = fs.ptr
 * 		self.ptr = fs.ptr.getSatL()             # <<<<<<<<<<<<<<
 * 
 * 	property drhodT:
 */
  __pyx_v_self->__pyx_base.ptr = __pyx_v_fs->ptr->getSatL();

  /* "smo/media/CoolProp/CoolProp.pyx":183
 * 
 * cdef class SaturationStateLiquid(SaturationState):
 * 	def __cinit__(self, FluidState fs):             # <<<<<<<<<<<<<<
 * 		self.parent = fs.ptr
 * 		self.ptr = fs.ptr.getSatL()
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":188
 * 
 * 	property drhodT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodT_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":189
 * 	property drhodT:
 * 		def __get__(self):
 * 			return self.parent.drhodT_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property drhodp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodT_along_sat_liquid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":188
 * 
 * 	property drhodT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodT_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.drhodT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":192
 * 
 * 	property drhodp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodp_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":193
 * 	property drhodp:
 * 		def __get__(self):
 * 			return self.parent.drhodp_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodp_along_sat_liquid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":192
 * 
 * 	property drhodp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodp_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.drhodp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":196
 * 
 * 	property dvdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodT_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":197
 * 	property dvdT:
 * 		def __get__(self):
 * 			return -1./(self.rho * self.rho) * self.parent.drhodT_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_float_neg_1_, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodT_along_sat_liquid()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":196
 * 
 * 	property dvdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodT_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.dvdT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":200
 * 
 * 	property dvdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodp_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":201
 * 	property dvdp:
 * 		def __get__(self):
 * 			return -1./(self.rho * self.rho) * self.parent.drhodp_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_float_neg_1_, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodp_along_sat_liquid()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":200
 * 
 * 	property dvdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodp_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.dvdp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":204
 * 
 * 	property dsdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdT_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":205
 * 	property dsdT:
 * 		def __get__(self):
 * 			return self.parent.dsdT_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dsdT_along_sat_liquid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":204
 * 
 * 	property dsdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdT_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.dsdT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":208
 * 
 * 	property dsdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdp_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":209
 * 	property dsdp:
 * 		def __get__(self):
 * 			return self.parent.dsdp_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property dhdT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dsdp_along_sat_liquid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":208
 * 
 * 	property dsdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdp_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.dsdp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":212
 * 
 * 	property dhdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdT_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":213
 * 	property dhdT:
 * 		def __get__(self):
 * 			return self.parent.dhdT_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * 	property dhdp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dhdT_along_sat_liquid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":212
 * 
 * 	property dhdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdT_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.dhdT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":216
 * 
 * 	property dhdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdp_along_sat_liquid()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":217
 * 	property dhdp:
 * 		def __get__(self):
 * 			return self.parent.dhdp_along_sat_liquid()             # <<<<<<<<<<<<<<
 * 
 * cdef class SaturationStateVapor(SaturationState):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dhdp_along_sat_liquid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":216
 * 
 * 	property dhdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdp_along_sat_liquid()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateLiquid.dhdp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":220
 * 
 * cdef class SaturationStateVapor(SaturationState):
 * 	def __cinit__(self, FluidState fs):             # <<<<<<<<<<<<<<
 * 		self.parent = fs.ptr
 * 		self.ptr = fs.ptr.getSatV()
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_fs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fs,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fs = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_fs), __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_FluidState, 1, "fs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor___cinit__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self), __pyx_v_fs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor___cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self, struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_fs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  SmoFlow_CoolPropState *__pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":221
 * cdef class SaturationStateVapor(SaturationState):
 * 	def __cinit__(self, FluidState fs):
 * 		self.parent = fs.ptr             # <<<<<<<<<<<<<<
 * 		self.ptr = fs.ptr.getSatV()
 * 
 */
  __pyx_t_1 = __pyx_v_fs->ptr;
  __pyx_v_self->__pyx_base.parent = __pyx_t_1;

  /* "smo/media/CoolProp/CoolProp.pyx":222
 * 	def __cinit__(self, FluidState fs):
 * 		self.parent = fs.ptr
 * 		self.ptr = fs.ptr.getSatV()             # <<<<<<<<<<<<<<
 * 
 * 	property drhodT:
 */
  __pyx_v_self->__pyx_base.ptr = __pyx_v_fs->ptr->getSatV();

  /* "smo/media/CoolProp/CoolProp.pyx":220
 * 
 * cdef class SaturationStateVapor(SaturationState):
 * 	def __cinit__(self, FluidState fs):             # <<<<<<<<<<<<<<
 * 		self.parent = fs.ptr
 * 		self.ptr = fs.ptr.getSatV()
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":225
 * 
 * 	property drhodT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodT_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":226
 * 	property drhodT:
 * 		def __get__(self):
 * 			return self.parent.drhodT_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property drhodp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodT_along_sat_vapor()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":225
 * 
 * 	property drhodT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodT_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.drhodT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":229
 * 
 * 	property drhodp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodp_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":230
 * 	property drhodp:
 * 		def __get__(self):
 * 			return self.parent.drhodp_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodp_along_sat_vapor()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":229
 * 
 * 	property drhodp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.drhodp_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.drhodp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":233
 * 
 * 	property dvdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodT_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":234
 * 	property dvdT:
 * 		def __get__(self):
 * 			return -1./(self.rho * self.rho) * self.parent.drhodT_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_float_neg_1_, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodT_along_sat_vapor()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":233
 * 
 * 	property dvdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodT_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.dvdT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":237
 * 
 * 	property dvdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodp_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":238
 * 	property dvdp:
 * 		def __get__(self):
 * 			return -1./(self.rho * self.rho) * self.parent.drhodp_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_float_neg_1_, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->drhodp_along_sat_vapor()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":237
 * 
 * 	property dvdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return -1./(self.rho * self.rho) * self.parent.drhodp_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.dvdp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":241
 * 
 * 	property dsdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdT_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":242
 * 	property dsdT:
 * 		def __get__(self):
 * 			return self.parent.dsdT_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dsdT_along_sat_vapor()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":241
 * 
 * 	property dsdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdT_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.dsdT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":245
 * 
 * 	property dsdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdp_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":246
 * 	property dsdp:
 * 		def __get__(self):
 * 			return self.parent.dsdp_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property dhdT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dsdp_along_sat_vapor()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":245
 * 
 * 	property dsdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dsdp_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.dsdp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":249
 * 
 * 	property dhdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdT_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":250
 * 	property dhdT:
 * 		def __get__(self):
 * 			return self.parent.dhdT_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * 	property dhdp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dhdT_along_sat_vapor()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":249
 * 
 * 	property dhdT:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdT_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.dhdT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":253
 * 
 * 	property dhdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdp_along_sat_vapor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":254
 * 	property dhdp:
 * 		def __get__(self):
 * 			return self.parent.dhdp_along_sat_vapor()             # <<<<<<<<<<<<<<
 * 
 * #============================================================================
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->__pyx_base.parent->dhdp_along_sat_vapor()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":253
 * 
 * 	property dhdp:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.parent.dhdp_along_sat_vapor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.SaturationStateVapor.dhdp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":272
 * 	cdef bool updated
 * 
 * 	def __init__(self, fluid):             # <<<<<<<<<<<<<<
 * 		"""__init__(fluid)
 * 		:param fluid: name of fluid or :class:`Fluid` object
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__[] = "__init__(fluid)\n\t\t:param fluid: name of fluid or :class:`Fluid` object\n\t\t";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__;
#endif
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_fluid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fluid,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fluid)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fluid = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_fluid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__(CYTHON_UNUSED struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_fluid) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":278
 * 		pass
 * 
 * 	def __cinit__(self, fluid):             # <<<<<<<<<<<<<<
 * 		cdef string fluidName
 * 		# From fluid name
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fluid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fluid,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fluid)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_fluid = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2__cinit__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_fluid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2__cinit__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, PyObject *__pyx_v_fluid) {
  std::string __pyx_v_fluidName;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  std::string __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  SmoFlow_CoolPropState *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":281
 * 		cdef string fluidName
 * 		# From fluid name
 * 		if (isinstance(fluid, str) or isinstance(fluid, unicode)):             # <<<<<<<<<<<<<<
 * 			fluidName = fluid
 * 			self.fluid = Fluid(fluid)
 */
  __pyx_t_2 = PyString_Check(__pyx_v_fluid); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = PyUnicode_Check(__pyx_v_fluid); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "smo/media/CoolProp/CoolProp.pyx":282
 * 		# From fluid name
 * 		if (isinstance(fluid, str) or isinstance(fluid, unicode)):
 * 			fluidName = fluid             # <<<<<<<<<<<<<<
 * 			self.fluid = Fluid(fluid)
 * 			self.ptr = new CP.SmoFlow_CoolPropState(fluidName)
 */
    __pyx_t_4 = __pyx_convert_string_from_py_std__string(__pyx_v_fluid); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_fluidName = __pyx_t_4;

    /* "smo/media/CoolProp/CoolProp.pyx":283
 * 		if (isinstance(fluid, str) or isinstance(fluid, unicode)):
 * 			fluidName = fluid
 * 			self.fluid = Fluid(fluid)             # <<<<<<<<<<<<<<
 * 			self.ptr = new CP.SmoFlow_CoolPropState(fluidName)
 * 		# From fluid object
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_fluid);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_fluid);
    __Pyx_GIVEREF(__pyx_v_fluid);
    __pyx_t_6 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_Fluid)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_6);
    __Pyx_GOTREF(__pyx_v_self->fluid);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->fluid));
    __pyx_v_self->fluid = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "smo/media/CoolProp/CoolProp.pyx":284
 * 			fluidName = fluid
 * 			self.fluid = Fluid(fluid)
 * 			self.ptr = new CP.SmoFlow_CoolPropState(fluidName)             # <<<<<<<<<<<<<<
 * 		# From fluid object
 * 		elif (isinstance(fluid, Fluid)):
 */
    try {
      __pyx_t_7 = new SmoFlow_CoolPropState(__pyx_v_fluidName);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_self->ptr = __pyx_t_7;
    goto __pyx_L3;
  }

  /* "smo/media/CoolProp/CoolProp.pyx":286
 * 			self.ptr = new CP.SmoFlow_CoolPropState(fluidName)
 * 		# From fluid object
 * 		elif (isinstance(fluid, Fluid)):             # <<<<<<<<<<<<<<
 * 			self.fluid = fluid
 * 			self.ptr = new CP.SmoFlow_CoolPropState((<Fluid>fluid).ptr)
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_fluid, ((PyObject*)__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_Fluid)); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "smo/media/CoolProp/CoolProp.pyx":287
 * 		# From fluid object
 * 		elif (isinstance(fluid, Fluid)):
 * 			self.fluid = fluid             # <<<<<<<<<<<<<<
 * 			self.ptr = new CP.SmoFlow_CoolPropState((<Fluid>fluid).ptr)
 * 		else:
 */
    if (!(likely(((__pyx_v_fluid) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_fluid, __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_Fluid))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = __pyx_v_fluid;
    __Pyx_INCREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __Pyx_GOTREF(__pyx_v_self->fluid);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->fluid));
    __pyx_v_self->fluid = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "smo/media/CoolProp/CoolProp.pyx":288
 * 		elif (isinstance(fluid, Fluid)):
 * 			self.fluid = fluid
 * 			self.ptr = new CP.SmoFlow_CoolPropState((<Fluid>fluid).ptr)             # <<<<<<<<<<<<<<
 * 		else:
 * 			raise TypeError('The argument of FluidState constructor must be either str or Fluid')
 */
    try {
      __pyx_t_7 = new SmoFlow_CoolPropState(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)__pyx_v_fluid)->ptr);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_self->ptr = __pyx_t_7;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "smo/media/CoolProp/CoolProp.pyx":290
 * 			self.ptr = new CP.SmoFlow_CoolPropState((<Fluid>fluid).ptr)
 * 		else:
 * 			raise TypeError('The argument of FluidState constructor must be either str or Fluid')             # <<<<<<<<<<<<<<
 * 
 * 		self._SatL = SaturationStateLiquid(self)
 */
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "smo/media/CoolProp/CoolProp.pyx":292
 * 			raise TypeError('The argument of FluidState constructor must be either str or Fluid')
 * 
 * 		self._SatL = SaturationStateLiquid(self)             # <<<<<<<<<<<<<<
 * 		self._SatV = SaturationStateVapor(self)
 * 		self.updated = False
 */
  __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid)), __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GIVEREF(__pyx_t_5);
  __Pyx_GOTREF(__pyx_v_self->_SatL);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_SatL));
  __pyx_v_self->_SatL = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":293
 * 
 * 		self._SatL = SaturationStateLiquid(self)
 * 		self._SatV = SaturationStateVapor(self)             # <<<<<<<<<<<<<<
 * 		self.updated = False
 * 
 */
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_6 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GIVEREF(__pyx_t_6);
  __Pyx_GOTREF(__pyx_v_self->_SatV);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_SatV));
  __pyx_v_self->_SatV = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":294
 * 		self._SatL = SaturationStateLiquid(self)
 * 		self._SatV = SaturationStateVapor(self)
 * 		self.updated = False             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->updated = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":278
 * 		pass
 * 
 * 	def __cinit__(self, fluid):             # <<<<<<<<<<<<<<
 * 		cdef string fluidName
 * 		# From fluid name
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":296
 * 		self.updated = False
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.ptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4__dealloc__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4__dealloc__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":297
 * 
 * 	def __dealloc__(self):
 * 		del self.ptr             # <<<<<<<<<<<<<<
 * 
 * 	def checkUpdated(self):
 */
  delete __pyx_v_self->ptr;

  /* "smo/media/CoolProp/CoolProp.pyx":296
 * 		self.updated = False
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.ptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "smo/media/CoolProp/CoolProp.pyx":299
 * 		del self.ptr
 * 
 * 	def checkUpdated(self):             # <<<<<<<<<<<<<<
 * 		if (not self.updated):
 * 			raise RuntimeError("In order to read a property, you must first call one of the 'update' functions")
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_7checkUpdated(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_7checkUpdated(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkUpdated (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6checkUpdated(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6checkUpdated(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkUpdated", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":300
 * 
 * 	def checkUpdated(self):
 * 		if (not self.updated):             # <<<<<<<<<<<<<<
 * 			raise RuntimeError("In order to read a property, you must first call one of the 'update' functions")
 * 
 */
  __pyx_t_1 = ((!(__pyx_v_self->updated != 0)) != 0);
  if (__pyx_t_1) {

    /* "smo/media/CoolProp/CoolProp.pyx":301
 * 	def checkUpdated(self):
 * 		if (not self.updated):
 * 			raise RuntimeError("In order to read a property, you must first call one of the 'update' functions")             # <<<<<<<<<<<<<<
 * 
 * 	property fluid:
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":299
 * 		del self.ptr
 * 
 * 	def checkUpdated(self):             # <<<<<<<<<<<<<<
 * 		if (not self.updated):
 * 			raise RuntimeError("In order to read a property, you must first call one of the 'update' functions")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.checkUpdated", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":305
 * 	property fluid:
 * 		"""fluid"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.fluid
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5fluid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5fluid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5fluid___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5fluid___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":306
 * 		"""fluid"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.fluid
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":307
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.fluid             # <<<<<<<<<<<<<<
 * 
 * 	property T:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->fluid));
  __pyx_r = ((PyObject *)__pyx_v_self->fluid);
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":305
 * 	property fluid:
 * 		"""fluid"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.fluid
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.fluid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":311
 * 	property T:
 * 		"""temperature"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.T()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":312
 * 		"""temperature"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.T()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":313
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.T()             # <<<<<<<<<<<<<<
 * 
 * 	property p:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->T()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":311
 * 	property T:
 * 		"""temperature"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.T()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":317
 * 	property p:
 * 		"""pressure"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.p()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1p_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1p_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1p___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":318
 * 		"""pressure"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.p()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":319
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.p()             # <<<<<<<<<<<<<<
 * 
 * 	property rho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->p()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":317
 * 	property p:
 * 		"""pressure"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.p()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.p.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":323
 * 	property rho:
 * 		"""density"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.rho()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_3rho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_3rho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_3rho___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_3rho___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":324
 * 		"""density"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.rho()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":325
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.rho()             # <<<<<<<<<<<<<<
 * 
 * 	property v:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->rho()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":323
 * 	property rho:
 * 		"""density"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.rho()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.rho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":329
 * 	property v:
 * 		"""specific volume"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return 1./self.ptr.rho()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1v_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1v_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1v___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":330
 * 		"""specific volume"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return 1./self.ptr.rho()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":331
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return 1./self.ptr.rho()             # <<<<<<<<<<<<<<
 * 
 * 	property h:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __pyx_v_self->ptr->rho();
  if (unlikely(__pyx_t_4 == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = PyFloat_FromDouble((1. / __pyx_t_4)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":329
 * 	property v:
 * 		"""specific volume"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return 1./self.ptr.rho()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.v.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":335
 * 	property h:
 * 		"""specific enthalpy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.h()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1h_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1h_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1h___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1h___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":336
 * 		"""specific enthalpy"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.h()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":337
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.h()             # <<<<<<<<<<<<<<
 * 
 * 	property q:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->h()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":335
 * 	property h:
 * 		"""specific enthalpy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.h()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.h.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":341
 * 	property q:
 * 		"""vapor quality"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.q()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1q_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1q_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1q___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":342
 * 		"""vapor quality"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.q()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":343
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.q()             # <<<<<<<<<<<<<<
 * 
 * 	property dT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->q()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":341
 * 	property q:
 * 		"""vapor quality"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.q()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.q.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":347
 * 	property dT:
 * 		"""super-heating or sub-cooling"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2dT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2dT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2dT___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2dT___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":348
 * 		"""super-heating or sub-cooling"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":349
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dT()             # <<<<<<<<<<<<<<
 * 
 * 	def isTwoPhase(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":347
 * 	property dT:
 * 		"""super-heating or sub-cooling"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":351
 * 			return self.ptr.dT()
 * 
 * 	def isTwoPhase(self):             # <<<<<<<<<<<<<<
 * 		"""Checks if state is in the two-phase region\n
 * 		Returns bool"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_9isTwoPhase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_8isTwoPhase[] = "Checks if state is in the two-phase region\n\n\t\tReturns bool";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_9isTwoPhase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isTwoPhase (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8isTwoPhase(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8isTwoPhase(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isTwoPhase", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":354
 * 		"""Checks if state is in the two-phase region\n
 * 		Returns bool"""
 * 		self.checkUpdated()             # <<<<<<<<<<<<<<
 * 		return self.ptr.TwoPhase
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":355
 * 		Returns bool"""
 * 		self.checkUpdated()
 * 		return self.ptr.TwoPhase             # <<<<<<<<<<<<<<
 * 
 * 	def b(self, double TRef):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->ptr->TwoPhase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":351
 * 			return self.ptr.dT()
 * 
 * 	def isTwoPhase(self):             # <<<<<<<<<<<<<<
 * 		"""Checks if state is in the two-phase region\n
 * 		Returns bool"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.isTwoPhase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":357
 * 		return self.ptr.TwoPhase
 * 
 * 	def b(self, double TRef):             # <<<<<<<<<<<<<<
 * 		"""exergy"""
 * 		self.checkUpdated()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_11b(PyObject *__pyx_v_self, PyObject *__pyx_arg_TRef); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_10b[] = "exergy";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_11b(PyObject *__pyx_v_self, PyObject *__pyx_arg_TRef) {
  double __pyx_v_TRef;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("b (wrapper)", 0);
  assert(__pyx_arg_TRef); {
    __pyx_v_TRef = __pyx_PyFloat_AsDouble(__pyx_arg_TRef); if (unlikely((__pyx_v_TRef == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.b", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_10b(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), ((double)__pyx_v_TRef));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_10b(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_TRef) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("b", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":359
 * 	def b(self, double TRef):
 * 		"""exergy"""
 * 		self.checkUpdated()             # <<<<<<<<<<<<<<
 * 		return self.ptr.b(TRef)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":360
 * 		"""exergy"""
 * 		self.checkUpdated()
 * 		return self.ptr.b(TRef)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->b(__pyx_v_TRef)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":357
 * 		return self.ptr.TwoPhase
 * 
 * 	def b(self, double TRef):             # <<<<<<<<<<<<<<
 * 		"""exergy"""
 * 		self.checkUpdated()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.b", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":365
 * 	property u:
 * 		"""specific internal energy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.u()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1u_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1u_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1u___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1u___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":366
 * 		"""specific internal energy"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.u()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":367
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.u()             # <<<<<<<<<<<<<<
 * 
 * 	property s:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->u()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":365
 * 	property u:
 * 		"""specific internal energy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.u()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.u.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":371
 * 	property s:
 * 		"""specific entropy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.s()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1s_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1s_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1s___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_1s___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":372
 * 		"""specific entropy"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.s()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":373
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.s()             # <<<<<<<<<<<<<<
 * 
 * 	property cp:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->s()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":371
 * 	property s:
 * 		"""specific entropy"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.s()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.s.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":377
 * 	property cp:
 * 		"""specific heat capacity at constant pressure"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.cp()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cp___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cp___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":378
 * 		"""specific heat capacity at constant pressure"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.cp()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":379
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.cp()             # <<<<<<<<<<<<<<
 * 
 * 	property cv:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->cp()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":377
 * 	property cp:
 * 		"""specific heat capacity at constant pressure"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.cp()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.cp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":383
 * 	property cv:
 * 		"""specific heat capacity at constant volume"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.cv()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cv_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cv_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cv___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cv___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":384
 * 		"""specific heat capacity at constant volume"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.cv()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":385
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.cv()             # <<<<<<<<<<<<<<
 * 
 * ####################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->cv()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":383
 * 	property cv:
 * 		"""specific heat capacity at constant volume"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.cv()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.cv.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":391
 * 	property dvdp_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdp_constT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdp_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdp_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdp_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdp_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":392
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dvdp_constT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":393
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dvdp_constT()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdT_p:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dvdp_constT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":391
 * 	property dvdp_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdp_constT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dvdp_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":397
 * 	property dvdT_p:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdT_constp()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_p_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_p_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_p___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":398
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dvdT_constp()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":399
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dvdT_constp()             # <<<<<<<<<<<<<<
 * 
 * 	property dpdrho_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dvdT_constp()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":397
 * 	property dvdT_p:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdT_constp()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dvdT_p.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":403
 * 	property dpdrho_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdrho_constT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdrho_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdrho_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdrho_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdrho_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":404
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dpdrho_constT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":405
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dpdrho_constT()             # <<<<<<<<<<<<<<
 * 
 * 	property dpdT_v:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dpdrho_constT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":403
 * 	property dpdrho_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdrho_constT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dpdrho_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":409
 * 	property dpdT_v:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdT_constv()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_v_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_v_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_v___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":410
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dpdT_constv()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":411
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dpdT_constv()             # <<<<<<<<<<<<<<
 * 
 * 	property dvds_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dpdT_constv()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":409
 * 	property dpdT_v:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdT_constv()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dpdT_v.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":415
 * 	property dvds_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return 1. / self.ptr.dpdT_constv()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvds_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvds_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvds_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvds_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":416
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return 1. / self.ptr.dpdT_constv()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":417
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return 1. / self.ptr.dpdT_constv()             # <<<<<<<<<<<<<<
 * 
 * 	property dpdv_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __pyx_v_self->ptr->dpdT_constv();
  if (unlikely(__pyx_t_4 == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = PyFloat_FromDouble((1. / __pyx_t_4)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":415
 * 	property dvds_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return 1. / self.ptr.dpdT_constv()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dvds_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":421
 * 	property dpdv_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdv_constT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdv_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdv_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdv_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdv_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":422
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dpdv_constT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":423
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dpdv_constT()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdp_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dpdv_constT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":421
 * 	property dpdv_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdv_constT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dpdv_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":427
 * 	property dsdp_T:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dsdp_constT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdp_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdp_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdp_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdp_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":428
 * 			""""""
 * 			def __get__(self):
 * 				self.checkUpdated()             # <<<<<<<<<<<<<<
 * 				return self.ptr.dsdp_constT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":429
 * 			def __get__(self):
 * 				self.checkUpdated()
 * 				return self.ptr.dsdp_constT()             # <<<<<<<<<<<<<<
 * 
 * 	property dhdT_p:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dsdp_constT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":427
 * 	property dsdp_T:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dsdp_constT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dsdp_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":433
 * 	property dhdT_p:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dhdT_constp()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dhdT_p_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dhdT_p_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dhdT_p___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dhdT_p___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":434
 * 			""""""
 * 			def __get__(self):
 * 				self.checkUpdated()             # <<<<<<<<<<<<<<
 * 				return self.ptr.dhdT_constp()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":435
 * 			def __get__(self):
 * 				self.checkUpdated()
 * 				return self.ptr.dhdT_constp()             # <<<<<<<<<<<<<<
 * 
 * 	property dpdT_h:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dhdT_constp()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":433
 * 	property dhdT_p:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dhdT_constp()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dhdT_p.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":439
 * 	property dpdT_h:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dpdT_consth()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_h_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_h_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_h___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_h___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":440
 * 			""""""
 * 			def __get__(self):
 * 				self.checkUpdated()             # <<<<<<<<<<<<<<
 * 				return self.ptr.dpdT_consth()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":441
 * 			def __get__(self):
 * 				self.checkUpdated()
 * 				return self.ptr.dpdT_consth()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdT_v:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dpdT_consth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":439
 * 	property dpdT_h:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dpdT_consth()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dpdT_h.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":445
 * 	property dsdT_v:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dsdT_constv()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_v_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_v_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_v___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":446
 * 			""""""
 * 			def __get__(self):
 * 				self.checkUpdated()             # <<<<<<<<<<<<<<
 * 				return self.ptr.dsdT_constv()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":447
 * 			def __get__(self):
 * 				self.checkUpdated()
 * 				return self.ptr.dsdT_constv()             # <<<<<<<<<<<<<<
 * 
 * ####################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dsdT_constv()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":445
 * 	property dsdT_v:
 * 			""""""
 * 			def __get__(self):             # <<<<<<<<<<<<<<
 * 				self.checkUpdated()
 * 				return self.ptr.dsdT_constv()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dsdT_v.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":453
 * 	property dpdT_sat:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdT_sat()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdT_sat_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdT_sat_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdT_sat___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdT_sat___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":454
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dpdT_sat()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":455
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dpdT_sat()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdq_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dpdT_sat()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":453
 * 	property dpdT_sat:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dpdT_sat()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dpdT_sat.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":459
 * 	property dsdq_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dsdq_constT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdq_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdq_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdq_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdq_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":460
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dsdq_constT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":461
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dsdq_constT()             # <<<<<<<<<<<<<<
 * 
 * 	property dsdT_q:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dsdq_constT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":459
 * 	property dsdq_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dsdq_constT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dsdq_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":465
 * 	property dsdT_q:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dsdT_constq()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_q_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_q_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_q___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":466
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dsdT_constq()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":467
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dsdT_constq()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdT_q:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dsdT_constq()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":465
 * 	property dsdT_q:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dsdT_constq()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dsdT_q.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":471
 * 	property dvdT_q:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdT_constq()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_q_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_q_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_q___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_q___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":472
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dvdT_constq()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":473
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dvdT_constq()             # <<<<<<<<<<<<<<
 * 
 * 	property dvdq_T:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dvdT_constq()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":471
 * 	property dvdT_q:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdT_constq()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dvdT_q.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":477
 * 	property dvdq_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdq_constT()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdq_T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdq_T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdq_T___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdq_T___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":478
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dvdq_constT()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":479
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dvdq_constT()             # <<<<<<<<<<<<<<
 * 
 * 	property dqdT_v:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dvdq_constT()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":477
 * 	property dvdq_T:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dvdq_constT()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dvdq_T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":483
 * 	property dqdT_v:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dqdT_constv()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dqdT_v_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dqdT_v_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dqdT_v___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dqdT_v___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":484
 * 		""""""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.dqdT_constv()
 * ####################################################################
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":485
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.dqdT_constv()             # <<<<<<<<<<<<<<
 * ####################################################################
 * ####################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->dqdT_constv()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":483
 * 	property dqdT_v:
 * 		""""""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.dqdT_constv()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.dqdT_v.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":491
 * 	property beta:
 * 		"""isobaric thermal expansivity"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.beta()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4beta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4beta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4beta___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4beta___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":492
 * 		"""isobaric thermal expansivity"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.beta()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":493
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.beta()             # <<<<<<<<<<<<<<
 * 
 * 	property mu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->beta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":491
 * 	property beta:
 * 		"""isobaric thermal expansivity"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.beta()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.beta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":497
 * 	property mu:
 * 		"""dynamic viscosity"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.viscosity()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2mu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2mu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2mu___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2mu___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":498
 * 		"""dynamic viscosity"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.viscosity()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":499
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.viscosity()             # <<<<<<<<<<<<<<
 * 
 * 	property cond:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->viscosity()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":497
 * 	property mu:
 * 		"""dynamic viscosity"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.viscosity()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.mu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":503
 * 	property cond:
 * 		"""thermal conductivity"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.conductivity()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4cond_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4cond_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4cond___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4cond___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":504
 * 		"""thermal conductivity"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.conductivity()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":505
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.conductivity()             # <<<<<<<<<<<<<<
 * 
 * 	property Pr:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->conductivity()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":503
 * 	property cond:
 * 		"""thermal conductivity"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.conductivity()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.cond.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":509
 * 	property Pr:
 * 		"""Prandtl number"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.Prandtl()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2Pr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2Pr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2Pr___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_2Pr___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":510
 * 		"""Prandtl number"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.Prandtl()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":511
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.Prandtl()             # <<<<<<<<<<<<<<
 * 
 * 	property gamma:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->Prandtl()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":509
 * 	property Pr:
 * 		"""Prandtl number"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.Prandtl()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.Pr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":515
 * 	property gamma:
 * 		"""heat capacity ratio"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.gamma()
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5gamma_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5gamma_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5gamma___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5gamma___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":516
 * 		"""heat capacity ratio"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self.ptr.gamma()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":517
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self.ptr.gamma()             # <<<<<<<<<<<<<<
 * 
 * 	#########################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->ptr->gamma()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":515
 * 	property gamma:
 * 		"""heat capacity ratio"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self.ptr.gamma()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.gamma.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":522
 * 	# Update methods
 * 
 * 	def update(self,             # <<<<<<<<<<<<<<
 * 			string state1, double state1Value,
 * 			string state2, double state2Value):
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_13update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_12update[] = "update(state1, state1Value, state2, state2Value)\n\t\t:param state1: name of first state variable\n\t\t:param state1Value: value of first state variable\n\t\t:param state2: name of second state variable\n\t\t:param state2Value: value of second state variable\n\t\t\n\t\tUpdates fluid state by two state variables.\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_13update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_state1;
  double __pyx_v_state1Value;
  std::string __pyx_v_state2;
  double __pyx_v_state2Value;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_state1,&__pyx_n_s_state1Value,&__pyx_n_s_state2,&__pyx_n_s_state2Value,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state1Value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state2Value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_state1 = __pyx_convert_string_from_py_std__string(values[0]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_state1Value = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_state1Value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_state2 = __pyx_convert_string_from_py_std__string(values[2]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_state2Value = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_state2Value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_12update(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_state1, __pyx_v_state1Value, __pyx_v_state2, __pyx_v_state2Value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_12update(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, std::string __pyx_v_state1, double __pyx_v_state1Value, std::string __pyx_v_state2, double __pyx_v_state2Value) {
  long __pyx_v_p1Index;
  long __pyx_v_p2Index;
  double __pyx_v_TSat;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  std::string __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  double __pyx_t_9;
  long __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":537
 * 		cdef double TSat
 * 
 * 		if (state1.compare("dT") == 0 and state2.compare("P") == 0):             # <<<<<<<<<<<<<<
 * 			TSat = self.fluid.saturation_p(state2Value)['TsatL']
 * 			self.ptr.update(iT, TSat + state1Value, iP, state2Value, -1, -1)
 */
  __pyx_t_2 = __pyx_convert_string_from_py_std__string(__pyx_n_b_dT); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((__pyx_v_state1.compare(__pyx_t_2) == 0) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = __pyx_convert_string_from_py_std__string(__pyx_n_b_P); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((__pyx_v_state2.compare(__pyx_t_2) == 0) != 0);
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "smo/media/CoolProp/CoolProp.pyx":538
 * 
 * 		if (state1.compare("dT") == 0 and state2.compare("P") == 0):
 * 			TSat = self.fluid.saturation_p(state2Value)['TsatL']             # <<<<<<<<<<<<<<
 * 			self.ptr.update(iT, TSat + state1Value, iP, state2Value, -1, -1)
 * 		elif (state1.compare("P") == 0 and state2.compare("dT") == 0):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->fluid), __pyx_n_s_saturation_p); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_state2Value); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_GetItem(__pyx_t_4, __pyx_n_s_TsatL); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_TSat = __pyx_t_9;

    /* "smo/media/CoolProp/CoolProp.pyx":539
 * 		if (state1.compare("dT") == 0 and state2.compare("P") == 0):
 * 			TSat = self.fluid.saturation_p(state2Value)['TsatL']
 * 			self.ptr.update(iT, TSat + state1Value, iP, state2Value, -1, -1)             # <<<<<<<<<<<<<<
 * 		elif (state1.compare("P") == 0 and state2.compare("dT") == 0):
 * 			TSat = self.fluid.saturation_p(state1Value)['TsatL']
 */
    try {
      __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iT, (__pyx_v_TSat + __pyx_v_state1Value), __pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_state2Value, -1.0, -1.0);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    goto __pyx_L3;
  }

  /* "smo/media/CoolProp/CoolProp.pyx":540
 * 			TSat = self.fluid.saturation_p(state2Value)['TsatL']
 * 			self.ptr.update(iT, TSat + state1Value, iP, state2Value, -1, -1)
 * 		elif (state1.compare("P") == 0 and state2.compare("dT") == 0):             # <<<<<<<<<<<<<<
 * 			TSat = self.fluid.saturation_p(state1Value)['TsatL']
 * 			self.ptr.update(iT, TSat + state2Value, iP, state1Value, -1, -1)
 */
  __pyx_t_2 = __pyx_convert_string_from_py_std__string(__pyx_n_b_P); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((__pyx_v_state1.compare(__pyx_t_2) == 0) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_2 = __pyx_convert_string_from_py_std__string(__pyx_n_b_dT); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = ((__pyx_v_state2.compare(__pyx_t_2) == 0) != 0);
  __pyx_t_1 = __pyx_t_3;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "smo/media/CoolProp/CoolProp.pyx":541
 * 			self.ptr.update(iT, TSat + state1Value, iP, state2Value, -1, -1)
 * 		elif (state1.compare("P") == 0 and state2.compare("dT") == 0):
 * 			TSat = self.fluid.saturation_p(state1Value)['TsatL']             # <<<<<<<<<<<<<<
 * 			self.ptr.update(iT, TSat + state2Value, iP, state1Value, -1, -1)
 * 		else:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->fluid), __pyx_n_s_saturation_p); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_state1Value); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_8); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetItem(__pyx_t_5, __pyx_n_s_TsatL); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_TSat = __pyx_t_9;

    /* "smo/media/CoolProp/CoolProp.pyx":542
 * 		elif (state1.compare("P") == 0 and state2.compare("dT") == 0):
 * 			TSat = self.fluid.saturation_p(state1Value)['TsatL']
 * 			self.ptr.update(iT, TSat + state2Value, iP, state1Value, -1, -1)             # <<<<<<<<<<<<<<
 * 		else:
 * 			p1Index = CP.get_param_index(state1)
 */
    try {
      __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iT, (__pyx_v_TSat + __pyx_v_state2Value), __pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_state1Value, -1.0, -1.0);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    goto __pyx_L3;
  }
  /*else*/ {

    /* "smo/media/CoolProp/CoolProp.pyx":544
 * 			self.ptr.update(iT, TSat + state2Value, iP, state1Value, -1, -1)
 * 		else:
 * 			p1Index = CP.get_param_index(state1)             # <<<<<<<<<<<<<<
 * 			p2Index = CP.get_param_index(state2)
 * 			self.ptr.update(p1Index, state1Value, p2Index, state2Value, -1, -1)
 */
    try {
      __pyx_t_10 = get_param_index(__pyx_v_state1);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_p1Index = __pyx_t_10;

    /* "smo/media/CoolProp/CoolProp.pyx":545
 * 		else:
 * 			p1Index = CP.get_param_index(state1)
 * 			p2Index = CP.get_param_index(state2)             # <<<<<<<<<<<<<<
 * 			self.ptr.update(p1Index, state1Value, p2Index, state2Value, -1, -1)
 * 
 */
    try {
      __pyx_t_10 = get_param_index(__pyx_v_state2);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_p2Index = __pyx_t_10;

    /* "smo/media/CoolProp/CoolProp.pyx":546
 * 			p1Index = CP.get_param_index(state1)
 * 			p2Index = CP.get_param_index(state2)
 * 			self.ptr.update(p1Index, state1Value, p2Index, state2Value, -1, -1)             # <<<<<<<<<<<<<<
 * 
 * 		self.updated = True
 */
    try {
      __pyx_v_self->ptr->update(__pyx_v_p1Index, __pyx_v_state1Value, __pyx_v_p2Index, __pyx_v_state2Value, -1.0, -1.0);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  __pyx_L3:;

  /* "smo/media/CoolProp/CoolProp.pyx":548
 * 			self.ptr.update(p1Index, state1Value, p2Index, state2Value, -1, -1)
 * 
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_Tp(self, double T, double p):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":522
 * 	# Update methods
 * 
 * 	def update(self,             # <<<<<<<<<<<<<<
 * 			string state1, double state1Value,
 * 			string state2, double state2Value):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":550
 * 		self.updated = True
 * 
 * 	def update_Tp(self, double T, double p):             # <<<<<<<<<<<<<<
 * 		"""update_Tp(T, p)
 * 		:param T: temperature
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_15update_Tp(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_14update_Tp[] = "update_Tp(T, p)\n\t\t:param T: temperature\n\t\t:param p: pressure\n\t\t\n\t\tUpdates fluid state by temperature and presure\n\t\t\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_15update_Tp(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_T;
  double __pyx_v_p;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_Tp (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_p,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_Tp", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_Tp") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_T = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_T == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_p = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_p == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_Tp", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Tp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_14update_Tp(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_T, __pyx_v_p);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_14update_Tp(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_Tp", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":558
 * 
 * 		"""
 * 		self.ptr.update(iT, T, iP, p, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iT, __pyx_v_T, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_p, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":559
 * 		"""
 * 		self.ptr.update(iT, T, iP, p, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_Trho(self, double T, double rho):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":550
 * 		self.updated = True
 * 
 * 	def update_Tp(self, double T, double p):             # <<<<<<<<<<<<<<
 * 		"""update_Tp(T, p)
 * 		:param T: temperature
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Tp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":561
 * 		self.updated = True
 * 
 * 	def update_Trho(self, double T, double rho):             # <<<<<<<<<<<<<<
 * 		"""update_Trho(T, rho)
 * 		:param T: temperature
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_17update_Trho(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_16update_Trho[] = "update_Trho(T, rho)\n\t\t:param T: temperature\n\t\t:param rho: density\n\t\t\n\t\tUpdates fluid state by temperature and density\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_17update_Trho(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_T;
  double __pyx_v_rho;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_Trho (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_rho,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rho)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_Trho", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_Trho") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_T = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_T == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rho = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_rho == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_Trho", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Trho", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_16update_Trho(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_T, __pyx_v_rho);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_16update_Trho(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_rho) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_Trho", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":568
 * 		Updates fluid state by temperature and density
 * 		"""
 * 		self.ptr.update(iT, T, iD, rho, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iT, __pyx_v_T, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iD, __pyx_v_rho, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":569
 * 		"""
 * 		self.ptr.update(iT, T, iD, rho, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_Ts(self, double T, double s):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":561
 * 		self.updated = True
 * 
 * 	def update_Trho(self, double T, double rho):             # <<<<<<<<<<<<<<
 * 		"""update_Trho(T, rho)
 * 		:param T: temperature
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Trho", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":571
 * 		self.updated = True
 * 
 * 	def update_Ts(self, double T, double s):             # <<<<<<<<<<<<<<
 * 		"""update_Ts(T, s)
 * 		:param T: temperature
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_19update_Ts(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_18update_Ts[] = "update_Ts(T, s)\n\t\t:param T: temperature\n\t\t:param s: specific entropy\n\t\t\n\t\tUpdates fluid state by temperature and specific entropy\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_19update_Ts(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_T;
  double __pyx_v_s;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_Ts (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_s,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_Ts", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_Ts") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_T = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_T == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_s = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_s == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_Ts", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Ts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_18update_Ts(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_T, __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_18update_Ts(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_Ts", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":578
 * 		Updates fluid state by temperature and specific entropy
 * 		"""
 * 		self.ptr.update(iT, T, iS, s, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iT, __pyx_v_T, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iS, __pyx_v_s, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":579
 * 		"""
 * 		self.ptr.update(iT, T, iS, s, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_prho(self, double p, double rho):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":571
 * 		self.updated = True
 * 
 * 	def update_Ts(self, double T, double s):             # <<<<<<<<<<<<<<
 * 		"""update_Ts(T, s)
 * 		:param T: temperature
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Ts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":581
 * 		self.updated = True
 * 
 * 	def update_prho(self, double p, double rho):             # <<<<<<<<<<<<<<
 * 		"""update_prho(p, rho)
 * 		:param p: pressure
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_21update_prho(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_20update_prho[] = "update_prho(p, rho)\n\t\t:param p: pressure\n\t\t:param rho: density\n\t\t\n\t\tUpdates fluid state by pressure and density\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_21update_prho(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_p;
  double __pyx_v_rho;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_prho (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_rho,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rho)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_prho", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_prho") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_p = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_p == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rho = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_rho == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_prho", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_prho", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_20update_prho(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_p, __pyx_v_rho);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_20update_prho(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_rho) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_prho", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":588
 * 		Updates fluid state by pressure and density
 * 		"""
 * 		self.ptr.update(iP, p, iD, rho, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_p, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iD, __pyx_v_rho, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":589
 * 		"""
 * 		self.ptr.update(iP, p, iD, rho, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_ph(self, double p, double h):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":581
 * 		self.updated = True
 * 
 * 	def update_prho(self, double p, double rho):             # <<<<<<<<<<<<<<
 * 		"""update_prho(p, rho)
 * 		:param p: pressure
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_prho", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":591
 * 		self.updated = True
 * 
 * 	def update_ph(self, double p, double h):             # <<<<<<<<<<<<<<
 * 		"""update_ph(p, h)
 * 		:param p: pressure
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_23update_ph(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_22update_ph[] = "update_ph(p, h)\n\t\t:param p: pressure\n\t\t:param h: specific enthalpy\n\t\t\n\t\tUpdates fluid state by pressure and specific enthalpy\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_23update_ph(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_p;
  double __pyx_v_h;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_ph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_h,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_h)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_ph", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_ph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_p = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_p == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_h = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_h == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_ph", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_ph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_22update_ph(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_p, __pyx_v_h);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_22update_ph(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_h) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_ph", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":598
 * 		Updates fluid state by pressure and specific enthalpy
 * 		"""
 * 		self.ptr.update(iP, p, iH, h, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_p, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iH, __pyx_v_h, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":599
 * 		"""
 * 		self.ptr.update(iP, p, iH, h, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_ps(self, double p, double s):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":591
 * 		self.updated = True
 * 
 * 	def update_ph(self, double p, double h):             # <<<<<<<<<<<<<<
 * 		"""update_ph(p, h)
 * 		:param p: pressure
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_ph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":601
 * 		self.updated = True
 * 
 * 	def update_ps(self, double p, double s):             # <<<<<<<<<<<<<<
 * 		"""update_ps(p, s)
 * 		:param p: pressure
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_25update_ps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_24update_ps[] = "update_ps(p, s)\n\t\t:param p: pressure\n\t\t:param s: specific entropy\n\t\t\n\t\tUpdates fluid state by pressure and specific entropy\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_25update_ps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_p;
  double __pyx_v_s;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_ps (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_s,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_ps", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_ps") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_p = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_p == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_s = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_s == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_ps", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_ps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_24update_ps(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_p, __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_24update_ps(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_ps", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":608
 * 		Updates fluid state by pressure and specific entropy
 * 		"""
 * 		self.ptr.update(iP, p, iS, s, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_p, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iS, __pyx_v_s, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":609
 * 		"""
 * 		self.ptr.update(iP, p, iS, s, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_pq(self, double p, double q):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":601
 * 		self.updated = True
 * 
 * 	def update_ps(self, double p, double s):             # <<<<<<<<<<<<<<
 * 		"""update_ps(p, s)
 * 		:param p: pressure
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_ps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":611
 * 		self.updated = True
 * 
 * 	def update_pq(self, double p, double q):             # <<<<<<<<<<<<<<
 * 		"""update_pq(p, q)
 * 		:param p: pressure
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_27update_pq(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_26update_pq[] = "update_pq(p, q)\n\t\t:param p: pressure\n\t\t:param q: vapor quality\n\t\t\n\t\tUpdates fluid state by pressure and vapor quality\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_27update_pq(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_p;
  double __pyx_v_q;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_pq (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_q,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_pq", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_pq") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_p = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_p == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_q = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_q == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_pq", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_pq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_26update_pq(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_p, __pyx_v_q);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_26update_pq(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_p, double __pyx_v_q) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_pq", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":618
 * 		Updates fluid state by pressure and vapor quality
 * 		"""
 * 		self.ptr.update(iP, p, iQ, q, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iP, __pyx_v_p, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iQ, __pyx_v_q, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":619
 * 		"""
 * 		self.ptr.update(iP, p, iQ, q, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	def update_Tq(self, double T, double q):
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":611
 * 		self.updated = True
 * 
 * 	def update_pq(self, double p, double q):             # <<<<<<<<<<<<<<
 * 		"""update_pq(p, q)
 * 		:param p: pressure
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_pq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":621
 * 		self.updated = True
 * 
 * 	def update_Tq(self, double T, double q):             # <<<<<<<<<<<<<<
 * 		"""update_Tq(T, q)
 * 		:param T: temperature
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_29update_Tq(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_28update_Tq[] = "update_Tq(T, q)\n\t\t:param T: temperature\n\t\t:param q: vapor quality\n\t\t\n\t\tUpdates fluid state by temperature and vapor quality\n\t\t";
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_29update_Tq(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_T;
  double __pyx_v_q;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_Tq (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,&__pyx_n_s_q,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_T)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_Tq", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_Tq") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_T = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_T == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_q = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_q == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_Tq", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Tq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_28update_Tq(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), __pyx_v_T, __pyx_v_q);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_28update_Tq(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, double __pyx_v_T, double __pyx_v_q) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_Tq", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":628
 * 		Updates fluid state by temperature and vapor quality
 * 		"""
 * 		self.ptr.update(iT, T, iQ, q, -1, -1)             # <<<<<<<<<<<<<<
 * 		self.updated = True
 * 
 */
  try {
    __pyx_v_self->ptr->update(__pyx_v_3smo_5media_8CoolProp_8CoolProp_iT, __pyx_v_T, __pyx_v_3smo_5media_8CoolProp_8CoolProp_iQ, __pyx_v_q, -1.0, -1.0);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp/CoolProp.pyx":629
 * 		"""
 * 		self.ptr.update(iT, T, iQ, q, -1, -1)
 * 		self.updated = True             # <<<<<<<<<<<<<<
 * 
 * 	property SatL:
 */
  __pyx_v_self->updated = 1;

  /* "smo/media/CoolProp/CoolProp.pyx":621
 * 		self.updated = True
 * 
 * 	def update_Tq(self, double T, double q):             # <<<<<<<<<<<<<<
 * 		"""update_Tq(T, q)
 * 		:param T: temperature
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.update_Tq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":633
 * 	property SatL:
 * 		"""Saturated liquid object"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self._SatL
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatL_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatL_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatL___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatL___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":634
 * 		"""Saturated liquid object"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self._SatL
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":635
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self._SatL             # <<<<<<<<<<<<<<
 * 
 * 	property SatV:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_SatL));
  __pyx_r = ((PyObject *)__pyx_v_self->_SatL);
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":633
 * 	property SatL:
 * 		"""Saturated liquid object"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self._SatL
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.SatL.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":639
 * 	property SatV:
 * 		"""Saturated vapor object"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self._SatV
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatV_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatV_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatV___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatV___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":640
 * 		"""Saturated vapor object"""
 * 		def __get__(self):
 * 			self.checkUpdated()             # <<<<<<<<<<<<<<
 * 			return self._SatV
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":641
 * 		def __get__(self):
 * 			self.checkUpdated()
 * 			return self._SatV             # <<<<<<<<<<<<<<
 * 
 * 	def getStateVarsAsDict(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_SatV));
  __pyx_r = ((PyObject *)__pyx_v_self->_SatV);
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":639
 * 	property SatV:
 * 		"""Saturated vapor object"""
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			self.checkUpdated()
 * 			return self._SatV
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.SatV.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":643
 * 			return self._SatV
 * 
 * 	def getStateVarsAsDict(self):             # <<<<<<<<<<<<<<
 * 		self.checkUpdated()
 * 		return {
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_31getStateVarsAsDict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_31getStateVarsAsDict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getStateVarsAsDict (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_30getStateVarsAsDict(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_30getStateVarsAsDict(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getStateVarsAsDict", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":644
 * 
 * 	def getStateVarsAsDict(self):
 * 		self.checkUpdated()             # <<<<<<<<<<<<<<
 * 		return {
 * 			'T': self.T,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_checkUpdated); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":645
 * 	def getStateVarsAsDict(self):
 * 		self.checkUpdated()
 * 		return {             # <<<<<<<<<<<<<<
 * 			'T': self.T,
 * 			'p': self.p,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "smo/media/CoolProp/CoolProp.pyx":646
 * 		self.checkUpdated()
 * 		return {
 * 			'T': self.T,             # <<<<<<<<<<<<<<
 * 			'p': self.p,
 * 			'rho': self.rho,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_T); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_T, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":647
 * 		return {
 * 			'T': self.T,
 * 			'p': self.p,             # <<<<<<<<<<<<<<
 * 			'rho': self.rho,
 * 			'h': self.h,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_p); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_p, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":648
 * 			'T': self.T,
 * 			'p': self.p,
 * 			'rho': self.rho,             # <<<<<<<<<<<<<<
 * 			'h': self.h,
 * 			's': self.s,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rho); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_rho, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":649
 * 			'p': self.p,
 * 			'rho': self.rho,
 * 			'h': self.h,             # <<<<<<<<<<<<<<
 * 			's': self.s,
 * 			'q': self.q
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_h); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_h, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":650
 * 			'rho': self.rho,
 * 			'h': self.h,
 * 			's': self.s,             # <<<<<<<<<<<<<<
 * 			'q': self.q
 * 		}
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_s); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_s, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "smo/media/CoolProp/CoolProp.pyx":651
 * 			'h': self.h,
 * 			's': self.s,
 * 			'q': self.q             # <<<<<<<<<<<<<<
 * 		}
 * # 	def getSatL(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_q); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_q, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp/CoolProp.pyx":643
 * 			return self._SatV
 * 
 * 	def getStateVarsAsDict(self):             # <<<<<<<<<<<<<<
 * 		self.checkUpdated()
 * 		return {
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState.getStateVarsAsDict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":267
 * cdef class FluidState:
 * 	cdef CP.SmoFlow_CoolPropState* ptr
 * 	cdef public SaturationStateLiquid _SatL             # <<<<<<<<<<<<<<
 * 	cdef public SaturationStateVapor _SatV
 * 	cdef Fluid fluid
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_SatL));
  __pyx_r = ((PyObject *)__pyx_v_self->_SatL);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_2__set__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_2__set__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_SatL);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_SatL));
  __pyx_v_self->_SatL = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState._SatL.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_4__del__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_4__del__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_SatL);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_SatL));
  __pyx_v_self->_SatL = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp/CoolProp.pyx":268
 * 	cdef CP.SmoFlow_CoolPropState* ptr
 * 	cdef public SaturationStateLiquid _SatL
 * 	cdef public SaturationStateVapor _SatV             # <<<<<<<<<<<<<<
 * 	cdef Fluid fluid
 * 	cdef bool updated
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV___get__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV___get__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_SatV));
  __pyx_r = ((PyObject *)__pyx_v_self->_SatV);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_2__set__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_2__set__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_SatV);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_SatV));
  __pyx_v_self->_SatV = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp.CoolProp.FluidState._SatV.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_4__del__(((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_4__del__(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_SatV);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_SatV));
  __pyx_v_self->_SatV = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__string")
 * cdef string __pyx_convert_string_from_py_std__string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__string")
 * cdef string __pyx_convert_string_from_py_std__string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":33
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__string", 0);

  /* "string.to_py":34
 * @cname("__pyx_convert_PyObject_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":33
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":41
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__string", 0);

  /* "string.to_py":42
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":41
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":45
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__string", 0);

  /* "string.to_py":46
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":45
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_std_3a__3a_string(const std::vector<std::string>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_std_3a__3a_string", 0);

  /* "vector.to_py":79
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = __pyx_convert_PyObject_string_to_py_std__string((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_std_3a__3a_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_Fluid(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)o);
  new((void*)&(p->fluidName)) std::string();
  if (unlikely(__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_Fluid(PyObject *o) {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *p = (struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(&p->fluidName);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_EOSReference(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_12EOSReference_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_TransportReference(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_18TransportReference_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_CAS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_3CAS_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_ASHRAE34(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_8ASHRAE34_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_4name_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_aliases(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7aliases_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_molarMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_9molarMass_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_accentricFactor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_15accentricFactor_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_critical(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_8critical_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_tripple(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7tripple_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_fluidLimits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_11fluidLimits_1__get__(o);
}

static PyMethodDef __pyx_methods_3smo_5media_8CoolProp_8CoolProp_Fluid[] = {
  {"BibTeXKey", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_5BibTeXKey, METH_O, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid_4BibTeXKey},
  {"saturation_p", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_7saturation_p, METH_O, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid_6saturation_p},
  {"saturation_T", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_9saturation_T, METH_O, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid_8saturation_T},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_Fluid[] = {
  {(char *)"EOSReference", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_EOSReference, 0, __pyx_k_equation_of_state_source, 0},
  {(char *)"TransportReference", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_TransportReference, 0, __pyx_k_transport_properties_source, 0},
  {(char *)"CAS", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_CAS, 0, 0, 0},
  {(char *)"ASHRAE34", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_ASHRAE34, 0, 0, 0},
  {(char *)"name", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_name, 0, __pyx_k_name_of_fluid, 0},
  {(char *)"aliases", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_aliases, 0, 0, 0},
  {(char *)"molarMass", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_molarMass, 0, 0, 0},
  {(char *)"accentricFactor", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_accentricFactor, 0, 0, 0},
  {(char *)"critical", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_critical, 0, __pyx_k_dictionary_of_critial_point_valu, 0},
  {(char *)"tripple", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_tripple, 0, __pyx_k_dictionary_of_tripple_point_valu, 0},
  {(char *)"fluidLimits", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_5Fluid_fluidLimits, 0, __pyx_k_fluid_limits_TMin_TMax_pMax_rhoM, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_8CoolProp_8CoolProp_Fluid = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp.CoolProp.Fluid", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_Fluid, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  " \n\tClass representing a CoolProp fluid\n\t", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3smo_5media_8CoolProp_8CoolProp_Fluid, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_Fluid, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_3smo_5media_8CoolProp_8CoolProp_5Fluid_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_Fluid, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationState(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_SaturationState(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_p(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1p_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_rho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_3rho_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_v(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1v_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_h(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1h_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_s(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1s_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_q(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_15SaturationState_1q_1__get__(o);
}

static struct PyGetSetDef __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_SaturationState[] = {
  {(char *)"T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_T, 0, __pyx_k_temperature, 0},
  {(char *)"p", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_p, 0, __pyx_k_pressure, 0},
  {(char *)"rho", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_rho, 0, __pyx_k_density, 0},
  {(char *)"v", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_v, 0, __pyx_k_specific_volume, 0},
  {(char *)"h", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_h, 0, __pyx_k_specific_enthalpy, 0},
  {(char *)"s", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_s, 0, __pyx_k_specific_enthalpy, 0},
  {(char *)"q", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_15SaturationState_q, 0, __pyx_k_vapor_quality, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationState = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp.CoolProp.SaturationState", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_SaturationState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_SaturationState, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationState(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_drhodT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_drhodp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_6drhodp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dvdT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dvdp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dvdp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dsdT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dsdp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dsdp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dhdT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dhdp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_4dhdp_1__get__(o);
}

static PyMethodDef __pyx_methods_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid[] = {
  {(char *)"drhodT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_drhodT, 0, 0, 0},
  {(char *)"drhodp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_drhodp, 0, 0, 0},
  {(char *)"dvdT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dvdT, 0, 0, 0},
  {(char *)"dvdp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dvdp, 0, 0, 0},
  {(char *)"dsdT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dsdT, 0, 0, 0},
  {(char *)"dsdp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dsdp, 0, 0, 0},
  {(char *)"dhdT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dhdT, 0, 0, 0},
  {(char *)"dhdp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_21SaturationStateLiquid_dhdp, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp.CoolProp.SaturationStateLiquid", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_SaturationState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationState(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_drhodT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_drhodp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_6drhodp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dvdT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dvdp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dvdp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dsdT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dsdp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dsdp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dhdT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dhdp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_4dhdp_1__get__(o);
}

static PyMethodDef __pyx_methods_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor[] = {
  {(char *)"drhodT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_drhodT, 0, 0, 0},
  {(char *)"drhodp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_drhodp, 0, 0, 0},
  {(char *)"dvdT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dvdT, 0, 0, 0},
  {(char *)"dvdp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dvdp, 0, 0, 0},
  {(char *)"dsdT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dsdT, 0, 0, 0},
  {(char *)"dsdp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dsdp, 0, 0, 0},
  {(char *)"dhdT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dhdT, 0, 0, 0},
  {(char *)"dhdp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_20SaturationStateVapor_dhdp, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp.CoolProp.SaturationStateVapor", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_SaturationState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_FluidState(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)o);
  p->_SatL = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)Py_None); Py_INCREF(Py_None);
  p->_SatV = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)Py_None); Py_INCREF(Py_None);
  p->fluid = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_3__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_FluidState(PyObject *o) {
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *p = (struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_SatL);
  Py_CLEAR(p->_SatV);
  Py_CLEAR(p->fluid);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3smo_5media_8CoolProp_8CoolProp_FluidState(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *p = (struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)o;
  if (p->_SatL) {
    e = (*v)(((PyObject*)p->_SatL), a); if (e) return e;
  }
  if (p->_SatV) {
    e = (*v)(((PyObject*)p->_SatV), a); if (e) return e;
  }
  if (p->fluid) {
    e = (*v)(((PyObject*)p->fluid), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3smo_5media_8CoolProp_8CoolProp_FluidState(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *p = (struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState *)o;
  tmp = ((PyObject*)p->_SatL);
  p->_SatL = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_SatV);
  p->_SatV = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->fluid);
  p->fluid = ((struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_Fluid *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_fluid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5fluid_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_p(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1p_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_rho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_3rho_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_v(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1v_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_h(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1h_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_q(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1q_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2dT_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_u(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1u_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_s(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1s_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_cp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cp_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_cv(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2cv_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdp_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdp_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdT_p(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_p_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdrho_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdrho_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdT_v(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_v_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvds_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvds_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdv_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdv_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdp_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdp_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dhdT_p(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dhdT_p_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdT_h(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dpdT_h_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdT_v(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_v_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdT_sat(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_8dpdT_sat_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdq_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdq_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdT_q(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dsdT_q_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdT_q(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdT_q_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdq_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dvdq_T_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dqdT_v(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_6dqdT_v_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_beta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4beta_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_mu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2mu_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_cond(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4cond_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_Pr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_2Pr_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_gamma(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5gamma_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_SatL(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatL_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_SatV(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_4SatV_1__get__(o);
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatL(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_1__get__(o);
}

static int __pyx_setprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatL(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatL_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatV(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_1__get__(o);
}

static int __pyx_setprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatV(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_5_SatV_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_3smo_5media_8CoolProp_8CoolProp_FluidState[] = {
  {"checkUpdated", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_7checkUpdated, METH_NOARGS, 0},
  {"isTwoPhase", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_9isTwoPhase, METH_NOARGS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_8isTwoPhase},
  {"b", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_11b, METH_O, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_10b},
  {"update", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_13update, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_12update},
  {"update_Tp", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_15update_Tp, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_14update_Tp},
  {"update_Trho", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_17update_Trho, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_16update_Trho},
  {"update_Ts", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_19update_Ts, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_18update_Ts},
  {"update_prho", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_21update_prho, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_20update_prho},
  {"update_ph", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_23update_ph, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_22update_ph},
  {"update_ps", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_25update_ps, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_24update_ps},
  {"update_pq", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_27update_pq, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_26update_pq},
  {"update_Tq", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_29update_Tq, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState_28update_Tq},
  {"getStateVarsAsDict", (PyCFunction)__pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_31getStateVarsAsDict, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_FluidState[] = {
  {(char *)"fluid", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_fluid, 0, __pyx_k_fluid, 0},
  {(char *)"T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_T, 0, __pyx_k_temperature, 0},
  {(char *)"p", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_p, 0, __pyx_k_pressure, 0},
  {(char *)"rho", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_rho, 0, __pyx_k_density, 0},
  {(char *)"v", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_v, 0, __pyx_k_specific_volume, 0},
  {(char *)"h", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_h, 0, __pyx_k_specific_enthalpy, 0},
  {(char *)"q", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_q, 0, __pyx_k_vapor_quality, 0},
  {(char *)"dT", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dT, 0, __pyx_k_super_heating_or_sub_cooling, 0},
  {(char *)"u", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_u, 0, __pyx_k_specific_internal_energy, 0},
  {(char *)"s", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_s, 0, __pyx_k_specific_entropy, 0},
  {(char *)"cp", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_cp, 0, __pyx_k_specific_heat_capacity_at_consta, 0},
  {(char *)"cv", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_cv, 0, __pyx_k_specific_heat_capacity_at_consta_2, 0},
  {(char *)"dvdp_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdp_T, 0, 0, 0},
  {(char *)"dvdT_p", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdT_p, 0, 0, 0},
  {(char *)"dpdrho_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdrho_T, 0, 0, 0},
  {(char *)"dpdT_v", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdT_v, 0, 0, 0},
  {(char *)"dvds_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvds_T, 0, 0, 0},
  {(char *)"dpdv_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdv_T, 0, 0, 0},
  {(char *)"dsdp_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdp_T, 0, 0, 0},
  {(char *)"dhdT_p", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dhdT_p, 0, 0, 0},
  {(char *)"dpdT_h", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdT_h, 0, 0, 0},
  {(char *)"dsdT_v", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdT_v, 0, 0, 0},
  {(char *)"dpdT_sat", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dpdT_sat, 0, 0, 0},
  {(char *)"dsdq_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdq_T, 0, 0, 0},
  {(char *)"dsdT_q", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dsdT_q, 0, 0, 0},
  {(char *)"dvdT_q", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdT_q, 0, 0, 0},
  {(char *)"dvdq_T", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dvdq_T, 0, 0, 0},
  {(char *)"dqdT_v", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_dqdT_v, 0, 0, 0},
  {(char *)"beta", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_beta, 0, __pyx_k_isobaric_thermal_expansivity, 0},
  {(char *)"mu", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_mu, 0, __pyx_k_dynamic_viscosity, 0},
  {(char *)"cond", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_cond, 0, __pyx_k_thermal_conductivity, 0},
  {(char *)"Pr", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_Pr, 0, __pyx_k_Prandtl_number, 0},
  {(char *)"gamma", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_gamma, 0, __pyx_k_heat_capacity_ratio, 0},
  {(char *)"SatL", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_SatL, 0, __pyx_k_Saturated_liquid_object, 0},
  {(char *)"SatV", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState_SatV, 0, __pyx_k_Saturated_vapor_object, 0},
  {(char *)"_SatL", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatL, __pyx_setprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatL, 0, 0},
  {(char *)"_SatV", __pyx_getprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatV, __pyx_setprop_3smo_5media_8CoolProp_8CoolProp_10FluidState__SatV, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_8CoolProp_8CoolProp_FluidState = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp.CoolProp.FluidState", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_8CoolProp_8CoolProp_FluidState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_8CoolProp_8CoolProp_FluidState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_3smo_5media_8CoolProp_8CoolProp_FluidState, /*tp_traverse*/
  __pyx_tp_clear_3smo_5media_8CoolProp_8CoolProp_FluidState, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3smo_5media_8CoolProp_8CoolProp_FluidState, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_8CoolProp_8CoolProp_FluidState, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_3smo_5media_8CoolProp_8CoolProp_10FluidState_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_8CoolProp_8CoolProp_FluidState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "CoolProp",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_kp_s_BibTexKey_must_be_one_of, __pyx_k_BibTexKey_must_be_one_of, sizeof(__pyx_k_BibTexKey_must_be_one_of), 0, 0, 1, 0},
  {&__pyx_n_s_CONDUCTIVITY, __pyx_k_CONDUCTIVITY, sizeof(__pyx_k_CONDUCTIVITY), 0, 0, 1, 1},
  {&__pyx_n_s_CP0, __pyx_k_CP0, sizeof(__pyx_k_CP0), 0, 0, 1, 1},
  {&__pyx_n_b_D, __pyx_k_D, sizeof(__pyx_k_D), 0, 0, 0, 1},
  {&__pyx_n_s_ECS_FITS, __pyx_k_ECS_FITS, sizeof(__pyx_k_ECS_FITS), 0, 0, 1, 1},
  {&__pyx_n_s_ECS_LENNARD_JONES, __pyx_k_ECS_LENNARD_JONES, sizeof(__pyx_k_ECS_LENNARD_JONES), 0, 0, 1, 1},
  {&__pyx_n_s_EOS, __pyx_k_EOS, sizeof(__pyx_k_EOS), 0, 0, 1, 1},
  {&__pyx_n_b_H, __pyx_k_H, sizeof(__pyx_k_H), 0, 0, 0, 1},
  {&__pyx_kp_s_In_order_to_read_a_property_you, __pyx_k_In_order_to_read_a_property_you, sizeof(__pyx_k_In_order_to_read_a_property_you), 0, 0, 1, 0},
  {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
  {&__pyx_kp_s_No_fluid_with_name_0_found, __pyx_k_No_fluid_with_name_0_found, sizeof(__pyx_k_No_fluid_with_name_0_found), 0, 0, 1, 0},
  {&__pyx_n_b_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 0, 1},
  {&__pyx_n_b_Q, __pyx_k_Q, sizeof(__pyx_k_Q), 0, 0, 0, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_b_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 0, 1},
  {&__pyx_n_s_SURFACE_TENSION, __pyx_k_SURFACE_TENSION, sizeof(__pyx_k_SURFACE_TENSION), 0, 0, 1, 1},
  {&__pyx_n_b_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 0, 1},
  {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
  {&__pyx_n_s_TMax, __pyx_k_TMax, sizeof(__pyx_k_TMax), 0, 0, 1, 1},
  {&__pyx_n_s_TMin, __pyx_k_TMin, sizeof(__pyx_k_TMin), 0, 0, 1, 1},
  {&__pyx_kp_s_The_argument_of_FluidState_const, __pyx_k_The_argument_of_FluidState_const, sizeof(__pyx_k_The_argument_of_FluidState_const), 0, 0, 1, 0},
  {&__pyx_n_s_TsatL, __pyx_k_TsatL, sizeof(__pyx_k_TsatL), 0, 0, 1, 1},
  {&__pyx_n_s_TsatV, __pyx_k_TsatV, sizeof(__pyx_k_TsatV), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_VISCOSITY, __pyx_k_VISCOSITY, sizeof(__pyx_k_VISCOSITY), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_checkUpdated, __pyx_k_checkUpdated, sizeof(__pyx_k_checkUpdated), 0, 0, 1, 1},
  {&__pyx_n_b_dT, __pyx_k_dT, sizeof(__pyx_k_dT), 0, 0, 0, 1},
  {&__pyx_n_s_fluid, __pyx_k_fluid, sizeof(__pyx_k_fluid), 0, 0, 1, 1},
  {&__pyx_n_s_fluidName, __pyx_k_fluidName, sizeof(__pyx_k_fluidName), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_fs, __pyx_k_fs, sizeof(__pyx_k_fs), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_pMax, __pyx_k_pMax, sizeof(__pyx_k_pMax), 0, 0, 1, 1},
  {&__pyx_n_s_psatL, __pyx_k_psatL, sizeof(__pyx_k_psatL), 0, 0, 1, 1},
  {&__pyx_n_s_psatV, __pyx_k_psatV, sizeof(__pyx_k_psatV), 0, 0, 1, 1},
  {&__pyx_n_s_q, __pyx_k_q, sizeof(__pyx_k_q), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rho, __pyx_k_rho, sizeof(__pyx_k_rho), 0, 0, 1, 1},
  {&__pyx_n_s_rhoL, __pyx_k_rhoL, sizeof(__pyx_k_rhoL), 0, 0, 1, 1},
  {&__pyx_n_s_rhoMax, __pyx_k_rhoMax, sizeof(__pyx_k_rhoMax), 0, 0, 1, 1},
  {&__pyx_n_s_rhoV, __pyx_k_rhoV, sizeof(__pyx_k_rhoV), 0, 0, 1, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_n_s_saturation_p, __pyx_k_saturation_p, sizeof(__pyx_k_saturation_p), 0, 0, 1, 1},
  {&__pyx_n_s_state1, __pyx_k_state1, sizeof(__pyx_k_state1), 0, 0, 1, 1},
  {&__pyx_n_s_state1Value, __pyx_k_state1Value, sizeof(__pyx_k_state1Value), 0, 0, 1, 1},
  {&__pyx_n_s_state2, __pyx_k_state2, sizeof(__pyx_k_state2), 0, 0, 1, 1},
  {&__pyx_n_s_state2Value, __pyx_k_state2Value, sizeof(__pyx_k_state2Value), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "smo/media/CoolProp/CoolProp.pyx":290
 * 			self.ptr = new CP.SmoFlow_CoolPropState((<Fluid>fluid).ptr)
 * 		else:
 * 			raise TypeError('The argument of FluidState constructor must be either str or Fluid')             # <<<<<<<<<<<<<<
 * 
 * 		self._SatL = SaturationStateLiquid(self)
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_The_argument_of_FluidState_const); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "smo/media/CoolProp/CoolProp.pyx":301
 * 	def checkUpdated(self):
 * 		if (not self.updated):
 * 			raise RuntimeError("In order to read a property, you must first call one of the 'update' functions")             # <<<<<<<<<<<<<<
 * 
 * 	property fluid:
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_In_order_to_read_a_property_you); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_float_neg_1_ = PyFloat_FromDouble(-1.); if (unlikely(!__pyx_float_neg_1_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initCoolProp(void); /*proto*/
PyMODINIT_FUNC initCoolProp(void)
#else
PyMODINIT_FUNC PyInit_CoolProp(void); /*proto*/
PyMODINIT_FUNC PyInit_CoolProp(void)
#endif
{
  std::string __pyx_t_1;
  long __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_CoolProp(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("CoolProp", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_smo__media__CoolProp__CoolProp) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "smo.media.CoolProp.CoolProp")) {
      if (unlikely(PyDict_SetItemString(modules, "smo.media.CoolProp.CoolProp", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_3smo_5media_8CoolProp_8CoolProp_Fluid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_Fluid.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_Fluid, "__init__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__.doc = __pyx_doc_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_5Fluid___init__;
    }
  }
  #endif
  if (PyObject_SetAttrString(__pyx_m, "Fluid", (PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_Fluid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_Fluid = &__pyx_type_3smo_5media_8CoolProp_8CoolProp_Fluid;
  if (PyType_Ready(&__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationState.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SaturationState", (PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationState = &__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationState;
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid.tp_base = __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationState;
  if (PyType_Ready(&__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SaturationStateLiquid", (PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid = &__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateLiquid;
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor.tp_base = __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationState;
  if (PyType_Ready(&__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SaturationStateVapor", (PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor = &__pyx_type_3smo_5media_8CoolProp_8CoolProp_SaturationStateVapor;
  if (PyType_Ready(&__pyx_type_3smo_5media_8CoolProp_8CoolProp_FluidState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_8CoolProp_8CoolProp_FluidState.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_FluidState, "__init__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__.doc = __pyx_doc_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_3smo_5media_8CoolProp_8CoolProp_10FluidState___init__;
    }
  }
  #endif
  if (PyObject_SetAttrString(__pyx_m, "FluidState", (PyObject *)&__pyx_type_3smo_5media_8CoolProp_8CoolProp_FluidState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_8CoolProp_8CoolProp_FluidState = &__pyx_type_3smo_5media_8CoolProp_8CoolProp_FluidState;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "smo/media/CoolProp/CoolProp.pyx":258
 * #============================================================================
 * 
 * cdef long iP = CP.get_param_index('P')             # <<<<<<<<<<<<<<
 * cdef long iT = CP.get_param_index('T')
 * cdef long iD = CP.get_param_index('D')
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__string(__pyx_n_b_P); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_2 = get_param_index(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_3smo_5media_8CoolProp_8CoolProp_iP = __pyx_t_2;

  /* "smo/media/CoolProp/CoolProp.pyx":259
 * 
 * cdef long iP = CP.get_param_index('P')
 * cdef long iT = CP.get_param_index('T')             # <<<<<<<<<<<<<<
 * cdef long iD = CP.get_param_index('D')
 * cdef long iH = CP.get_param_index('H')
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__string(__pyx_n_b_T); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_2 = get_param_index(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_3smo_5media_8CoolProp_8CoolProp_iT = __pyx_t_2;

  /* "smo/media/CoolProp/CoolProp.pyx":260
 * cdef long iP = CP.get_param_index('P')
 * cdef long iT = CP.get_param_index('T')
 * cdef long iD = CP.get_param_index('D')             # <<<<<<<<<<<<<<
 * cdef long iH = CP.get_param_index('H')
 * cdef long iS = CP.get_param_index('S')
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__string(__pyx_n_b_D); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_2 = get_param_index(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_3smo_5media_8CoolProp_8CoolProp_iD = __pyx_t_2;

  /* "smo/media/CoolProp/CoolProp.pyx":261
 * cdef long iT = CP.get_param_index('T')
 * cdef long iD = CP.get_param_index('D')
 * cdef long iH = CP.get_param_index('H')             # <<<<<<<<<<<<<<
 * cdef long iS = CP.get_param_index('S')
 * cdef long iQ = CP.get_param_index('Q')
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__string(__pyx_n_b_H); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_2 = get_param_index(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_3smo_5media_8CoolProp_8CoolProp_iH = __pyx_t_2;

  /* "smo/media/CoolProp/CoolProp.pyx":262
 * cdef long iD = CP.get_param_index('D')
 * cdef long iH = CP.get_param_index('H')
 * cdef long iS = CP.get_param_index('S')             # <<<<<<<<<<<<<<
 * cdef long iQ = CP.get_param_index('Q')
 * 
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__string(__pyx_n_b_S); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_2 = get_param_index(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_3smo_5media_8CoolProp_8CoolProp_iS = __pyx_t_2;

  /* "smo/media/CoolProp/CoolProp.pyx":263
 * cdef long iH = CP.get_param_index('H')
 * cdef long iS = CP.get_param_index('S')
 * cdef long iQ = CP.get_param_index('Q')             # <<<<<<<<<<<<<<
 * 
 * cdef class FluidState:
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__string(__pyx_n_b_Q); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  try {
    __pyx_t_2 = get_param_index(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_3smo_5media_8CoolProp_8CoolProp_iQ = __pyx_t_2;

  /* "smo/media/CoolProp/CoolProp.pyx":1
 * from libcpp.string cimport string             # <<<<<<<<<<<<<<
 * from libcpp cimport bool
 * from numpy.math cimport INFINITY
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_std_3a__3a_string")
 * cdef object __pyx_convert_vector_to_py_std_3a__3a_string(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init smo.media.CoolProp.CoolProp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init smo.media.CoolProp.CoolProp");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(tmp_type, tmp_value, tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

#if !CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {
    return PyObject_CallMethodObjArgs(sep, __pyx_n_s_join, values, NULL);
}
#endif

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
