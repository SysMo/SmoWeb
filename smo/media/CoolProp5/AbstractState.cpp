/* Generated by Cython 0.21.1 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_21_1"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__smo__media__CoolProp5__AbstractState
#define __PYX_HAVE_API__smo__media__CoolProp5__AbstractState
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include "DataStructures.h"
#include "PhaseEnvelope.h"
#include "AbstractState.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromUString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "smo/media/CoolProp5/AbstractState.pxd",
  "smo/media/CoolProp5/AbstractState.pyx",
  "smo/media/CoolProp5/stringsource",
  "smo/media/CoolProp5/stringsource",
  "smo/media/CoolProp5/stringsource",
  "smo/media/CoolProp5/stringsource",
  "smo/media/CoolProp5/stringsource",
  "smo/media/CoolProp5/stringsource",
};

/*--- Type declarations ---*/
struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData;
struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure;
struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState;

/* "smo/media/CoolProp5/AbstractState.pxd":9
 * cimport constants_header
 * 
 * cdef class PyPhaseEnvelopeData:             # <<<<<<<<<<<<<<
 *     cpdef public bool TypeI
 *     cpdef public size_t iTsat_max, ipsat_max, icrit
 */
struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData {
  PyObject_HEAD
  bool TypeI;
  size_t iTsat_max;
  size_t ipsat_max;
  size_t icrit;
  PyObject *T;
  PyObject *p;
  PyObject *lnT;
  PyObject *lnp;
  PyObject *rhomolar_liq;
  PyObject *rhomolar_vap;
  PyObject *lnrhomolar_liq;
  PyObject *lnrhomolar_vap;
  PyObject *hmolar_liq;
  PyObject *hmolar_vap;
  PyObject *smolar_liq;
  PyObject *smolar_vap;
  PyObject *Q;
};


/* "smo/media/CoolProp5/AbstractState.pxd":14
 *     cpdef public list T, p, lnT, lnp, rhomolar_liq, rhomolar_vap, lnrhomolar_liq, lnrhomolar_vap, hmolar_liq, hmolar_vap, smolar_liq, smolar_vap, Q
 * 
 * cdef class PyGuessesStructure:             # <<<<<<<<<<<<<<
 *     cpdef public long double T, p, rhomolar, hmolar, smolar
 *     cpdef public long double rhomolar_liq, rhomolar_vap
 */
struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure {
  PyObject_HEAD
  long double T;
  long double p;
  long double rhomolar;
  long double hmolar;
  long double smolar;
  long double rhomolar_liq;
  long double rhomolar_vap;
  std::vector<long double>  x;
  std::vector<long double>  y;
};


/* "smo/media/CoolProp5/AbstractState.pxd":19
 *     cpdef public vector[long double] x, y
 * 
 * cdef class AbstractState:             # <<<<<<<<<<<<<<
 *     cdef cAbstractState.AbstractState *thisptr     # hold a C++ instance which we're wrapping
 *     cpdef update(self, constants_header.input_pairs iInput1, double Value1, double Value2)
 */
struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState {
  PyObject_HEAD
  struct __pyx_vtabstruct_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_vtab;
  CoolProp::AbstractState *thisptr;
};



/* "smo/media/CoolProp5/AbstractState.pyx":16
 *     pass
 * 
 * cdef class AbstractState:             # <<<<<<<<<<<<<<
 *     """
 *     This class is a one-to-one python wrapper of the :cpapi:`AbstractState` class
 */

struct __pyx_vtabstruct_3smo_5media_9CoolProp5_13AbstractState_AbstractState {
  PyObject *(*update)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::input_pairs, double, double, int __pyx_skip_dispatch);
  PyObject *(*update_with_guesses)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::input_pairs, double, double, struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *, int __pyx_skip_dispatch);
  PyObject *(*set_mole_fractions)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::vector<double> , int __pyx_skip_dispatch);
  PyObject *(*set_mass_fractions)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::vector<double> , int __pyx_skip_dispatch);
  PyObject *(*set_volu_fractions)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::vector<double> , int __pyx_skip_dispatch);
  PyObject *(*name)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  CoolProp::phases (*phase)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  PyObject *(*specify_phase)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::phases, int __pyx_skip_dispatch);
  PyObject *(*unspecify_phase)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*Tmin)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*Tmax)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*pmax)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*Ttriple)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*T)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*p)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*Q)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*rhomolar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*hmolar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*smolar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*umolar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*cpmolar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*cp0molar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*cvmolar)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*rhomass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*hmass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*smass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*umass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*cpmass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*cp0mass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*cvmass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*speed_sound)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*gas_constant)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*tau)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*delta)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*viscosity)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*conductivity)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*surface_tension)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*Prandtl)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*molar_mass)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*acentric_factor)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*keyed_output)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch);
  double (*trivial_keyed_output)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch);
  double (*saturated_liquid_keyed_output)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch);
  double (*saturated_vapor_keyed_output)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch);
  long double (*first_partial_deriv)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch);
  long double (*second_partial_deriv)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch);
  long double (*first_saturation_deriv)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch);
  long double (*second_saturation_deriv)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch);
  double (*first_two_phase_deriv)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch);
  double (*second_two_phase_deriv)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch);
  double (*first_two_phase_deriv_splined)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, double, int __pyx_skip_dispatch);
  double (*melting_line)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int, int, double, int __pyx_skip_dispatch);
  bool (*has_melting_line)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  double (*saturation_ancillary)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int, CoolProp::parameters, double, int __pyx_skip_dispatch);
  PyObject *(*build_phase_envelope)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::string, int __pyx_skip_dispatch);
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *(*get_phase_envelope_data)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  PyObject *(*mole_fractions_liquid)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
  PyObject *(*mole_fractions_vapor)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_vtabptr_3smo_5media_9CoolProp5_13AbstractState_AbstractState;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

#include <new>

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static int __Pyx_check_binary_version(void);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_name(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static CoolProp::phases __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_specify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::phases __pyx_v_phase, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_unspecify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update_with_guesses(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2, struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_guesses, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mole_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mass_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_volu_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmin(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_pmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Ttriple(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_trivial_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_liquid_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_vapor_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_T(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_p(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Q(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0molar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_tau(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_delta(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_speed_sound(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_molar_mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_acentric_factor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_gas_constant(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_viscosity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_conductivity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_surface_tension(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Prandtl(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_liquid(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_vapor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT, CoolProp::parameters __pyx_v_CONSTANT, int __pyx_skip_dispatch); /* proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_CONSTANT1, CoolProp::parameters __pyx_v_WRT2, CoolProp::parameters __pyx_v_CONSTANT2, int __pyx_skip_dispatch); /* proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT, int __pyx_skip_dispatch); /* proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF1, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_OF2, CoolProp::parameters __pyx_v_WRT2, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of1, CoolProp::parameters __pyx_v_Wrt1, CoolProp::parameters __pyx_v_Constant1, CoolProp::parameters __pyx_v_Wrt2, CoolProp::parameters __pyx_v_Constant2, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv_splined(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant, double __pyx_v_x_end, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_has_melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_v_param, int __pyx_v_given, double __pyx_v_value, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturation_ancillary(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_param, int __pyx_v_Q, CoolProp::parameters __pyx_v_given, double __pyx_v_value, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_build_phase_envelope(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::string __pyx_v_type, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_get_phase_envelope_data(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'smo.media.CoolProp5.constants_header' */

/* Module declarations from 'smo.media.CoolProp5.cAbstractState' */

/* Module declarations from 'cython' */

/* Module declarations from 'smo.media.CoolProp5.AbstractState' */
static PyTypeObject *__pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData = 0;
static PyTypeObject *__pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure = 0;
static PyTypeObject *__pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_AbstractState = 0;
static PyObject *__pyx_convert_vector_to_py_long__double(const std::vector<long double>  &); /*proto*/
static std::vector<long double>  __pyx_convert_vector_from_py_long__double(PyObject *); /*proto*/
static std::string __pyx_convert_string_from_py_std__string(PyObject *); /*proto*/
static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__string(std::string const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &); /*proto*/
#define __Pyx_MODULE_NAME "smo.media.CoolProp5.AbstractState"
int __pyx_module_is_main_smo__media__CoolProp5__AbstractState = 0;

/* Implementation of 'smo.media.CoolProp5.AbstractState' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState___cinit__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::string __pyx_v_backend, std::string __pyx_v_fluid); /* proto */
static void __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_2__dealloc__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_4name(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_6phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_8specify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::phases __pyx_v_phase); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_10unspecify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_12update(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_14update_with_guesses(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2, struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_guesses); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_16set_mole_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_18set_mass_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_20set_volu_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_22Tmin(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_24Tmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_26pmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_28Ttriple(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_30keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_32trivial_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_34saturated_liquid_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_36saturated_vapor_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_38T(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_40p(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_42Q(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_44rhomolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_46rhomass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_48hmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_50hmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_52umolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_54umass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_56smolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_58smass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_60cpmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_62cpmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_64cp0molar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_66cp0mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_68cvmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_70cvmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_72tau(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_74delta(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_76speed_sound(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_78molar_mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_80acentric_factor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_82gas_constant(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_84viscosity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_86conductivity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_88surface_tension(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_90Prandtl(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_92mole_fractions_liquid(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_94mole_fractions_vapor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_96first_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT, CoolProp::parameters __pyx_v_CONSTANT); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_98second_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_CONSTANT1, CoolProp::parameters __pyx_v_WRT2, CoolProp::parameters __pyx_v_CONSTANT2); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_100first_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_102second_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF1, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_OF2, CoolProp::parameters __pyx_v_WRT2); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_104first_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_106second_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of1, CoolProp::parameters __pyx_v_Wrt1, CoolProp::parameters __pyx_v_Constant1, CoolProp::parameters __pyx_v_Wrt2, CoolProp::parameters __pyx_v_Constant2); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_108first_two_phase_deriv_splined(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant, double __pyx_v_x_end); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_110has_melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_112melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_v_param, int __pyx_v_given, double __pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_114saturation_ancillary(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_param, int __pyx_v_Q, CoolProp::parameters __pyx_v_given, double __pyx_v_value); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_116build_phase_envelope(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::string __pyx_v_type); /* proto */
static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_118get_phase_envelope_data(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_AbstractState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_Q[] = "Q";
static char __pyx_k_T[] = "T";
static char __pyx_k_p[] = "p";
static char __pyx_k_OF[] = "OF";
static char __pyx_k_Of[] = "Of";
static char __pyx_k_OF1[] = "OF1";
static char __pyx_k_OF2[] = "OF2";
static char __pyx_k_Of1[] = "Of1";
static char __pyx_k_WRT[] = "WRT";
static char __pyx_k_Wrt[] = "Wrt";
static char __pyx_k_tau[] = "tau";
static char __pyx_k_Tmax[] = "Tmax";
static char __pyx_k_Tmin[] = "Tmin";
static char __pyx_k_WRT1[] = "WRT1";
static char __pyx_k_WRT2[] = "WRT2";
static char __pyx_k_Wrt1[] = "Wrt1";
static char __pyx_k_Wrt2[] = "Wrt2";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_name[] = "name";
static char __pyx_k_pmax[] = "pmax";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_delta[] = "delta";
static char __pyx_k_fluid[] = "fluid";
static char __pyx_k_given[] = "given";
static char __pyx_k_hmass[] = "hmass";
static char __pyx_k_ipair[] = "ipair";
static char __pyx_k_param[] = "param";
static char __pyx_k_phase[] = "phase";
static char __pyx_k_range[] = "range";
static char __pyx_k_smass[] = "smass";
static char __pyx_k_umass[] = "umass";
static char __pyx_k_value[] = "value";
static char __pyx_k_x_end[] = "x_end";
static char __pyx_k_Value1[] = "Value1";
static char __pyx_k_Value2[] = "Value2";
static char __pyx_k_cpmass[] = "cpmass";
static char __pyx_k_cvmass[] = "cvmass";
static char __pyx_k_hmolar[] = "hmolar";
static char __pyx_k_smolar[] = "smolar";
static char __pyx_k_umolar[] = "umolar";
static char __pyx_k_update[] = "update";
static char __pyx_k_Prandtl[] = "Prandtl";
static char __pyx_k_Ttriple[] = "Ttriple";
static char __pyx_k_backend[] = "backend";
static char __pyx_k_cp0mass[] = "cp0mass";
static char __pyx_k_cpmolar[] = "cpmolar";
static char __pyx_k_cvmolar[] = "cvmolar";
static char __pyx_k_guesses[] = "guesses";
static char __pyx_k_rhomass[] = "rhomass";
static char __pyx_k_CONSTANT[] = "CONSTANT";
static char __pyx_k_Constant[] = "Constant";
static char __pyx_k_cp0molar[] = "cp0molar";
static char __pyx_k_rhomolar[] = "rhomolar";
static char __pyx_k_CONSTANT1[] = "CONSTANT1";
static char __pyx_k_CONSTANT2[] = "CONSTANT2";
static char __pyx_k_Constant1[] = "Constant1";
static char __pyx_k_Constant2[] = "Constant2";
static char __pyx_k_viscosity[] = "viscosity";
static char __pyx_k_molar_mass[] = "molar_mass";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_speed_sound[] = "speed_sound";
static char __pyx_k_conductivity[] = "conductivity";
static char __pyx_k_gas_constant[] = "gas_constant";
static char __pyx_k_keyed_output[] = "keyed_output";
static char __pyx_k_melting_line[] = "melting_line";
static char __pyx_k_specify_phase[] = "specify_phase";
static char __pyx_k_acentric_factor[] = "acentric_factor";
static char __pyx_k_surface_tension[] = "surface_tension";
static char __pyx_k_unspecify_phase[] = "unspecify_phase";
static char __pyx_k_has_melting_line[] = "has_melting_line";
static char __pyx_k_set_mass_fractions[] = "set_mass_fractions";
static char __pyx_k_set_mole_fractions[] = "set_mole_fractions";
static char __pyx_k_set_volu_fractions[] = "set_volu_fractions";
static char __pyx_k_first_partial_deriv[] = "first_partial_deriv";
static char __pyx_k_update_with_guesses[] = "update_with_guesses";
static char __pyx_k_build_phase_envelope[] = "build_phase_envelope";
static char __pyx_k_mole_fractions_vapor[] = "mole_fractions_vapor";
static char __pyx_k_saturation_ancillary[] = "saturation_ancillary";
static char __pyx_k_second_partial_deriv[] = "second_partial_deriv";
static char __pyx_k_trivial_keyed_output[] = "trivial_keyed_output";
static char __pyx_k_first_two_phase_deriv[] = "first_two_phase_deriv";
static char __pyx_k_mole_fractions_liquid[] = "mole_fractions_liquid";
static char __pyx_k_first_saturation_deriv[] = "first_saturation_deriv";
static char __pyx_k_second_two_phase_deriv[] = "second_two_phase_deriv";
static char __pyx_k_get_phase_envelope_data[] = "get_phase_envelope_data";
static char __pyx_k_second_saturation_deriv[] = "second_saturation_deriv";
static char __pyx_k_saturated_vapor_keyed_output[] = "saturated_vapor_keyed_output";
static char __pyx_k_first_two_phase_deriv_splined[] = "first_two_phase_deriv_splined";
static char __pyx_k_saturated_liquid_keyed_output[] = "saturated_liquid_keyed_output";
static PyObject *__pyx_n_s_CONSTANT;
static PyObject *__pyx_n_s_CONSTANT1;
static PyObject *__pyx_n_s_CONSTANT2;
static PyObject *__pyx_n_s_Constant;
static PyObject *__pyx_n_s_Constant1;
static PyObject *__pyx_n_s_Constant2;
static PyObject *__pyx_n_s_OF;
static PyObject *__pyx_n_s_OF1;
static PyObject *__pyx_n_s_OF2;
static PyObject *__pyx_n_s_Of;
static PyObject *__pyx_n_s_Of1;
static PyObject *__pyx_n_s_Prandtl;
static PyObject *__pyx_n_s_Q;
static PyObject *__pyx_n_s_T;
static PyObject *__pyx_n_s_Tmax;
static PyObject *__pyx_n_s_Tmin;
static PyObject *__pyx_n_s_Ttriple;
static PyObject *__pyx_n_s_Value1;
static PyObject *__pyx_n_s_Value2;
static PyObject *__pyx_n_s_WRT;
static PyObject *__pyx_n_s_WRT1;
static PyObject *__pyx_n_s_WRT2;
static PyObject *__pyx_n_s_Wrt;
static PyObject *__pyx_n_s_Wrt1;
static PyObject *__pyx_n_s_Wrt2;
static PyObject *__pyx_n_s_acentric_factor;
static PyObject *__pyx_n_s_backend;
static PyObject *__pyx_n_s_build_phase_envelope;
static PyObject *__pyx_n_s_conductivity;
static PyObject *__pyx_n_s_cp0mass;
static PyObject *__pyx_n_s_cp0molar;
static PyObject *__pyx_n_s_cpmass;
static PyObject *__pyx_n_s_cpmolar;
static PyObject *__pyx_n_s_cvmass;
static PyObject *__pyx_n_s_cvmolar;
static PyObject *__pyx_n_s_delta;
static PyObject *__pyx_n_s_first_partial_deriv;
static PyObject *__pyx_n_s_first_saturation_deriv;
static PyObject *__pyx_n_s_first_two_phase_deriv;
static PyObject *__pyx_n_s_first_two_phase_deriv_splined;
static PyObject *__pyx_n_s_fluid;
static PyObject *__pyx_n_s_gas_constant;
static PyObject *__pyx_n_s_get_phase_envelope_data;
static PyObject *__pyx_n_s_given;
static PyObject *__pyx_n_s_guesses;
static PyObject *__pyx_n_s_has_melting_line;
static PyObject *__pyx_n_s_hmass;
static PyObject *__pyx_n_s_hmolar;
static PyObject *__pyx_n_s_ipair;
static PyObject *__pyx_n_s_keyed_output;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_melting_line;
static PyObject *__pyx_n_s_molar_mass;
static PyObject *__pyx_n_s_mole_fractions_liquid;
static PyObject *__pyx_n_s_mole_fractions_vapor;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_param;
static PyObject *__pyx_n_s_phase;
static PyObject *__pyx_n_s_pmax;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rhomass;
static PyObject *__pyx_n_s_rhomolar;
static PyObject *__pyx_n_s_saturated_liquid_keyed_output;
static PyObject *__pyx_n_s_saturated_vapor_keyed_output;
static PyObject *__pyx_n_s_saturation_ancillary;
static PyObject *__pyx_n_s_second_partial_deriv;
static PyObject *__pyx_n_s_second_saturation_deriv;
static PyObject *__pyx_n_s_second_two_phase_deriv;
static PyObject *__pyx_n_s_set_mass_fractions;
static PyObject *__pyx_n_s_set_mole_fractions;
static PyObject *__pyx_n_s_set_volu_fractions;
static PyObject *__pyx_n_s_smass;
static PyObject *__pyx_n_s_smolar;
static PyObject *__pyx_n_s_specify_phase;
static PyObject *__pyx_n_s_speed_sound;
static PyObject *__pyx_n_s_surface_tension;
static PyObject *__pyx_n_s_tau;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_trivial_keyed_output;
static PyObject *__pyx_n_s_umass;
static PyObject *__pyx_n_s_umolar;
static PyObject *__pyx_n_s_unspecify_phase;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_update_with_guesses;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_viscosity;
static PyObject *__pyx_n_s_x_end;

/* "smo/media/CoolProp5/AbstractState.pxd":10
 * 
 * cdef class PyPhaseEnvelopeData:
 *     cpdef public bool TypeI             # <<<<<<<<<<<<<<
 *     cpdef public size_t iTsat_max, ipsat_max, icrit
 *     cpdef public list T, p, lnT, lnp, rhomolar_liq, rhomolar_vap, lnrhomolar_liq, lnrhomolar_vap, hmolar_liq, hmolar_vap, smolar_liq, smolar_vap, Q
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->TypeI); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.TypeI.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->TypeI = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.TypeI.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pxd":11
 * cdef class PyPhaseEnvelopeData:
 *     cpdef public bool TypeI
 *     cpdef public size_t iTsat_max, ipsat_max, icrit             # <<<<<<<<<<<<<<
 *     cpdef public list T, p, lnT, lnp, rhomolar_liq, rhomolar_vap, lnrhomolar_liq, lnrhomolar_vap, hmolar_liq, hmolar_vap, smolar_liq, smolar_vap, Q
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->iTsat_max); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.iTsat_max.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_value); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->iTsat_max = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.iTsat_max.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->ipsat_max); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.ipsat_max.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_value); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->ipsat_max = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.ipsat_max.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->icrit); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.icrit.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_value); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 11; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->icrit = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.icrit.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pxd":12
 *     cpdef public bool TypeI
 *     cpdef public size_t iTsat_max, ipsat_max, icrit
 *     cpdef public list T, p, lnT, lnp, rhomolar_liq, rhomolar_vap, lnrhomolar_liq, lnrhomolar_vap, hmolar_liq, hmolar_vap, smolar_liq, smolar_vap, Q             # <<<<<<<<<<<<<<
 * 
 * cdef class PyGuessesStructure:
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->T);
  __pyx_r = __pyx_v_self->T;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->T);
  __Pyx_DECREF(__pyx_v_self->T);
  __pyx_v_self->T = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.T.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->T);
  __Pyx_DECREF(__pyx_v_self->T);
  __pyx_v_self->T = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->p);
  __pyx_r = __pyx_v_self->p;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->p);
  __Pyx_DECREF(__pyx_v_self->p);
  __pyx_v_self->p = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.p.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->p);
  __Pyx_DECREF(__pyx_v_self->p);
  __pyx_v_self->p = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lnT);
  __pyx_r = __pyx_v_self->lnT;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lnT);
  __Pyx_DECREF(__pyx_v_self->lnT);
  __pyx_v_self->lnT = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.lnT.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lnT);
  __Pyx_DECREF(__pyx_v_self->lnT);
  __pyx_v_self->lnT = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lnp);
  __pyx_r = __pyx_v_self->lnp;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lnp);
  __Pyx_DECREF(__pyx_v_self->lnp);
  __pyx_v_self->lnp = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.lnp.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lnp);
  __Pyx_DECREF(__pyx_v_self->lnp);
  __pyx_v_self->lnp = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->rhomolar_liq);
  __pyx_r = __pyx_v_self->rhomolar_liq;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->rhomolar_liq);
  __Pyx_DECREF(__pyx_v_self->rhomolar_liq);
  __pyx_v_self->rhomolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.rhomolar_liq.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->rhomolar_liq);
  __Pyx_DECREF(__pyx_v_self->rhomolar_liq);
  __pyx_v_self->rhomolar_liq = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->rhomolar_vap);
  __pyx_r = __pyx_v_self->rhomolar_vap;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->rhomolar_vap);
  __Pyx_DECREF(__pyx_v_self->rhomolar_vap);
  __pyx_v_self->rhomolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.rhomolar_vap.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->rhomolar_vap);
  __Pyx_DECREF(__pyx_v_self->rhomolar_vap);
  __pyx_v_self->rhomolar_vap = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lnrhomolar_liq);
  __pyx_r = __pyx_v_self->lnrhomolar_liq;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lnrhomolar_liq);
  __Pyx_DECREF(__pyx_v_self->lnrhomolar_liq);
  __pyx_v_self->lnrhomolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.lnrhomolar_liq.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lnrhomolar_liq);
  __Pyx_DECREF(__pyx_v_self->lnrhomolar_liq);
  __pyx_v_self->lnrhomolar_liq = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lnrhomolar_vap);
  __pyx_r = __pyx_v_self->lnrhomolar_vap;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lnrhomolar_vap);
  __Pyx_DECREF(__pyx_v_self->lnrhomolar_vap);
  __pyx_v_self->lnrhomolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.lnrhomolar_vap.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lnrhomolar_vap);
  __Pyx_DECREF(__pyx_v_self->lnrhomolar_vap);
  __pyx_v_self->lnrhomolar_vap = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->hmolar_liq);
  __pyx_r = __pyx_v_self->hmolar_liq;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->hmolar_liq);
  __Pyx_DECREF(__pyx_v_self->hmolar_liq);
  __pyx_v_self->hmolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.hmolar_liq.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->hmolar_liq);
  __Pyx_DECREF(__pyx_v_self->hmolar_liq);
  __pyx_v_self->hmolar_liq = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->hmolar_vap);
  __pyx_r = __pyx_v_self->hmolar_vap;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->hmolar_vap);
  __Pyx_DECREF(__pyx_v_self->hmolar_vap);
  __pyx_v_self->hmolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.hmolar_vap.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->hmolar_vap);
  __Pyx_DECREF(__pyx_v_self->hmolar_vap);
  __pyx_v_self->hmolar_vap = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->smolar_liq);
  __pyx_r = __pyx_v_self->smolar_liq;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->smolar_liq);
  __Pyx_DECREF(__pyx_v_self->smolar_liq);
  __pyx_v_self->smolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.smolar_liq.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->smolar_liq);
  __Pyx_DECREF(__pyx_v_self->smolar_liq);
  __pyx_v_self->smolar_liq = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->smolar_vap);
  __pyx_r = __pyx_v_self->smolar_vap;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->smolar_vap);
  __Pyx_DECREF(__pyx_v_self->smolar_vap);
  __pyx_v_self->smolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.smolar_vap.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->smolar_vap);
  __Pyx_DECREF(__pyx_v_self->smolar_vap);
  __pyx_v_self->smolar_vap = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->Q);
  __pyx_r = __pyx_v_self->Q;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->Q);
  __Pyx_DECREF(__pyx_v_self->Q);
  __pyx_v_self->Q = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData.Q.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_4__del__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_4__del__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->Q);
  __Pyx_DECREF(__pyx_v_self->Q);
  __pyx_v_self->Q = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pxd":15
 * 
 * cdef class PyGuessesStructure:
 *     cpdef public long double T, p, rhomolar, hmolar, smolar             # <<<<<<<<<<<<<<
 *     cpdef public long double rhomolar_liq, rhomolar_vap
 *     cpdef public vector[long double] x, y
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->T = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.T.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.p.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->p = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.p.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rhomolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.rhomolar.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->rhomolar = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.rhomolar.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->hmolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.hmolar.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->hmolar = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.hmolar.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->smolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.smolar.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->smolar = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.smolar.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pxd":16
 * cdef class PyGuessesStructure:
 *     cpdef public long double T, p, rhomolar, hmolar, smolar
 *     cpdef public long double rhomolar_liq, rhomolar_vap             # <<<<<<<<<<<<<<
 *     cpdef public vector[long double] x, y
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rhomolar_liq); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.rhomolar_liq.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->rhomolar_liq = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.rhomolar_liq.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rhomolar_vap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.rhomolar_vap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->rhomolar_vap = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.rhomolar_vap.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pxd":17
 *     cpdef public long double T, p, rhomolar, hmolar, smolar
 *     cpdef public long double rhomolar_liq, rhomolar_vap
 *     cpdef public vector[long double] x, y             # <<<<<<<<<<<<<<
 * 
 * cdef class AbstractState:
 */

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::vector<long double>  __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_convert_vector_from_py_long__double(__pyx_v_value); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->x = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y___get__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y___get__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_2__set__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_2__set__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::vector<long double>  __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_convert_vector_from_py_long__double(__pyx_v_value); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 17; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->y = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.PyGuessesStructure.y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":21
 *     """
 * 
 *     def __cinit__(self, string backend, string fluid):             # <<<<<<<<<<<<<<
 *         self.thisptr = cAbstractState.factory(backend, fluid)
 * 
 */

/* Python wrapper */
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  std::string __pyx_v_backend;
  std::string __pyx_v_fluid;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_backend,&__pyx_n_s_fluid,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_backend)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fluid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_backend = __pyx_convert_string_from_py_std__string(values[0]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_fluid = __pyx_convert_string_from_py_std__string(values[1]); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 21; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState___cinit__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_backend, __pyx_v_fluid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState___cinit__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::string __pyx_v_backend, std::string __pyx_v_fluid) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  CoolProp::AbstractState *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "smo/media/CoolProp5/AbstractState.pyx":22
 * 
 *     def __cinit__(self, string backend, string fluid):
 *         self.thisptr = cAbstractState.factory(backend, fluid)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  try {
    __pyx_t_1 = CoolProp::AbstractState::factory(__pyx_v_backend, __pyx_v_fluid);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->thisptr = __pyx_t_1;

  /* "smo/media/CoolProp5/AbstractState.pyx":21
 *     """
 * 
 *     def __cinit__(self, string backend, string fluid):             # <<<<<<<<<<<<<<
 *         self.thisptr = cAbstractState.factory(backend, fluid)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":24
 *         self.thisptr = cAbstractState.factory(backend, fluid)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_2__dealloc__(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_2__dealloc__(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "smo/media/CoolProp5/AbstractState.pyx":25
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cpdef name(self):
 */
  delete __pyx_v_self->thisptr;

  /* "smo/media/CoolProp5/AbstractState.pyx":24
 *         self.thisptr = cAbstractState.factory(backend, fluid)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "smo/media/CoolProp5/AbstractState.pyx":27
 *         del self.thisptr
 * 
 *     cpdef name(self):             # <<<<<<<<<<<<<<
 *         """ Get the backend name - wrapper of c++ function :cpapi:`CoolProp::AbstractState::name` """
 *         return self.thisptr.name()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_5name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_name(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("name", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_name); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_5name)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":29
 *     cpdef name(self):
 *         """ Get the backend name - wrapper of c++ function :cpapi:`CoolProp::AbstractState::name` """
 *         return self.thisptr.name()             # <<<<<<<<<<<<<<
 * 
 *     cpdef constants_header.phases phase(self) except *:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->name();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 29; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":27
 *         del self.thisptr
 * 
 *     cpdef name(self):             # <<<<<<<<<<<<<<
 *         """ Get the backend name - wrapper of c++ function :cpapi:`CoolProp::AbstractState::name` """
 *         return self.thisptr.name()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_5name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_4name[] = " Get the backend name - wrapper of c++ function :cpapi:`CoolProp::AbstractState::name` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_5name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("name (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_4name(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_4name(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("name", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_name(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":31
 *         return self.thisptr.name()
 * 
 *     cpdef constants_header.phases phase(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the phase as key value- wrapper of c++ function :cpapi:`CoolProp::AbstractState::phase` """
 *         return self.thisptr.phase()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_7phase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static CoolProp::phases __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  CoolProp::phases __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  CoolProp::phases __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("phase", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_phase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_7phase)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = ((CoolProp::phases)PyInt_AsLong(__pyx_t_2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":33
 *     cpdef constants_header.phases phase(self) except *:
 *         """ Get the phase as key value- wrapper of c++ function :cpapi:`CoolProp::AbstractState::phase` """
 *         return self.thisptr.phase()             # <<<<<<<<<<<<<<
 * 
 *     cpdef specify_phase(self, constants_header.phases phase):
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->phase();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 33; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":31
 *         return self.thisptr.name()
 * 
 *     cpdef constants_header.phases phase(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the phase as key value- wrapper of c++ function :cpapi:`CoolProp::AbstractState::phase` """
 *         return self.thisptr.phase()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_7phase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_6phase[] = " Get the phase as key value- wrapper of c++ function :cpapi:`CoolProp::AbstractState::phase` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_7phase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("phase (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_6phase(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_6phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  CoolProp::phases __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("phase", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_phase(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":35
 *         return self.thisptr.phase()
 * 
 *     cpdef specify_phase(self, constants_header.phases phase):             # <<<<<<<<<<<<<<
 *         """ Specify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::specify_phase` """
 *         self.thisptr.specify_phase(phase)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_9specify_phase(PyObject *__pyx_v_self, PyObject *__pyx_arg_phase); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_specify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::phases __pyx_v_phase, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("specify_phase", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_specify_phase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_9specify_phase)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromLong(__pyx_v_phase); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":37
 *     cpdef specify_phase(self, constants_header.phases phase):
 *         """ Specify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::specify_phase` """
 *         self.thisptr.specify_phase(phase)             # <<<<<<<<<<<<<<
 *     cpdef unspecify_phase(self):
 *         """ Unspecify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::unspecify_phase` """
 */
  try {
    __pyx_v_self->thisptr->specify_phase(__pyx_v_phase);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":35
 *         return self.thisptr.phase()
 * 
 *     cpdef specify_phase(self, constants_header.phases phase):             # <<<<<<<<<<<<<<
 *         """ Specify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::specify_phase` """
 *         self.thisptr.specify_phase(phase)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.specify_phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_9specify_phase(PyObject *__pyx_v_self, PyObject *__pyx_arg_phase); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_8specify_phase[] = " Specify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::specify_phase` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_9specify_phase(PyObject *__pyx_v_self, PyObject *__pyx_arg_phase) {
  CoolProp::phases __pyx_v_phase;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("specify_phase (wrapper)", 0);
  assert(__pyx_arg_phase); {
    __pyx_v_phase = ((CoolProp::phases)PyInt_AsLong(__pyx_arg_phase)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.specify_phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_8specify_phase(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((CoolProp::phases)__pyx_v_phase));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_8specify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::phases __pyx_v_phase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("specify_phase", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_specify_phase(__pyx_v_self, __pyx_v_phase, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 35; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.specify_phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":38
 *         """ Specify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::specify_phase` """
 *         self.thisptr.specify_phase(phase)
 *     cpdef unspecify_phase(self):             # <<<<<<<<<<<<<<
 *         """ Unspecify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::unspecify_phase` """
 *         self.thisptr.unspecify_phase()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_11unspecify_phase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_unspecify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("unspecify_phase", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_unspecify_phase); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_11unspecify_phase)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":40
 *     cpdef unspecify_phase(self):
 *         """ Unspecify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::unspecify_phase` """
 *         self.thisptr.unspecify_phase()             # <<<<<<<<<<<<<<
 * 
 *     cpdef update(self, constants_header.input_pairs ipair, double Value1, double Value2):
 */
  try {
    __pyx_v_self->thisptr->unspecify_phase();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":38
 *         """ Specify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::specify_phase` """
 *         self.thisptr.specify_phase(phase)
 *     cpdef unspecify_phase(self):             # <<<<<<<<<<<<<<
 *         """ Unspecify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::unspecify_phase` """
 *         self.thisptr.unspecify_phase()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.unspecify_phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_11unspecify_phase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_10unspecify_phase[] = " Unspecify the phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::unspecify_phase` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_11unspecify_phase(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unspecify_phase (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_10unspecify_phase(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_10unspecify_phase(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("unspecify_phase", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_unspecify_phase(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.unspecify_phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":42
 *         self.thisptr.unspecify_phase()
 * 
 *     cpdef update(self, constants_header.input_pairs ipair, double Value1, double Value2):             # <<<<<<<<<<<<<<
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         self.thisptr.update(ipair, Value1, Value2)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_13update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_13update)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromLong(__pyx_v_ipair); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_Value1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyFloat_FromDouble(__pyx_v_Value2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_6 = __pyx_t_1; __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":44
 *     cpdef update(self, constants_header.input_pairs ipair, double Value1, double Value2):
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         self.thisptr.update(ipair, Value1, Value2)             # <<<<<<<<<<<<<<
 *     cpdef update_with_guesses(self, constants_header.input_pairs ipair, double Value1, double Value2, PyGuessesStructure guesses):
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 */
  try {
    __pyx_v_self->thisptr->update(__pyx_v_ipair, __pyx_v_Value1, __pyx_v_Value2);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 44; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":42
 *         self.thisptr.unspecify_phase()
 * 
 *     cpdef update(self, constants_header.input_pairs ipair, double Value1, double Value2):             # <<<<<<<<<<<<<<
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         self.thisptr.update(ipair, Value1, Value2)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_13update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_12update[] = " Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_13update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::input_pairs __pyx_v_ipair;
  double __pyx_v_Value1;
  double __pyx_v_Value2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ipair,&__pyx_n_s_Value1,&__pyx_n_s_Value2,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ipair)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Value1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update", 1, 3, 3, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Value2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update", 1, 3, 3, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_ipair = ((CoolProp::input_pairs)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Value1 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_Value1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Value2 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_Value2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_12update(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_ipair, __pyx_v_Value1, __pyx_v_Value2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_12update(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update(__pyx_v_self, __pyx_v_ipair, __pyx_v_Value1, __pyx_v_Value2, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":45
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         self.thisptr.update(ipair, Value1, Value2)
 *     cpdef update_with_guesses(self, constants_header.input_pairs ipair, double Value1, double Value2, PyGuessesStructure guesses):             # <<<<<<<<<<<<<<
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         cdef cAbstractState.GuessesStructure _guesses
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_15update_with_guesses(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update_with_guesses(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2, struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_guesses, int __pyx_skip_dispatch) {
  CoolProp::GuessesStructure __pyx_v__guesses;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  long double __pyx_t_10;
  std::vector<long double>  __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_with_guesses", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_with_guesses); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_15update_with_guesses)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyInt_FromLong(__pyx_v_ipair); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_Value1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyFloat_FromDouble(__pyx_v_Value2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_6 = __pyx_t_1; __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __Pyx_INCREF(((PyObject *)__pyx_v_guesses));
      PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, ((PyObject *)__pyx_v_guesses));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_guesses));
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":48
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         cdef cAbstractState.GuessesStructure _guesses
 *         _guesses.T = guesses.T             # <<<<<<<<<<<<<<
 *         _guesses.p = guesses.p
 *         _guesses.rhomolar_liq = guesses.rhomolar_liq
 */
  __pyx_t_10 = __pyx_v_guesses->T;
  __pyx_v__guesses.T = __pyx_t_10;

  /* "smo/media/CoolProp5/AbstractState.pyx":49
 *         cdef cAbstractState.GuessesStructure _guesses
 *         _guesses.T = guesses.T
 *         _guesses.p = guesses.p             # <<<<<<<<<<<<<<
 *         _guesses.rhomolar_liq = guesses.rhomolar_liq
 *         _guesses.rhomolar_vap = guesses.rhomolar_vap
 */
  __pyx_t_10 = __pyx_v_guesses->p;
  __pyx_v__guesses.p = __pyx_t_10;

  /* "smo/media/CoolProp5/AbstractState.pyx":50
 *         _guesses.T = guesses.T
 *         _guesses.p = guesses.p
 *         _guesses.rhomolar_liq = guesses.rhomolar_liq             # <<<<<<<<<<<<<<
 *         _guesses.rhomolar_vap = guesses.rhomolar_vap
 *         _guesses.x = guesses.x
 */
  __pyx_t_10 = __pyx_v_guesses->rhomolar_liq;
  __pyx_v__guesses.rhomolar_liq = __pyx_t_10;

  /* "smo/media/CoolProp5/AbstractState.pyx":51
 *         _guesses.p = guesses.p
 *         _guesses.rhomolar_liq = guesses.rhomolar_liq
 *         _guesses.rhomolar_vap = guesses.rhomolar_vap             # <<<<<<<<<<<<<<
 *         _guesses.x = guesses.x
 *         _guesses.y = guesses.y
 */
  __pyx_t_10 = __pyx_v_guesses->rhomolar_vap;
  __pyx_v__guesses.rhomolar_vap = __pyx_t_10;

  /* "smo/media/CoolProp5/AbstractState.pyx":52
 *         _guesses.rhomolar_liq = guesses.rhomolar_liq
 *         _guesses.rhomolar_vap = guesses.rhomolar_vap
 *         _guesses.x = guesses.x             # <<<<<<<<<<<<<<
 *         _guesses.y = guesses.y
 *         self.thisptr.update_with_guesses(ipair, Value1, Value2, _guesses)
 */
  __pyx_t_11 = __pyx_v_guesses->x;
  __pyx_v__guesses.x = __pyx_t_11;

  /* "smo/media/CoolProp5/AbstractState.pyx":53
 *         _guesses.rhomolar_vap = guesses.rhomolar_vap
 *         _guesses.x = guesses.x
 *         _guesses.y = guesses.y             # <<<<<<<<<<<<<<
 *         self.thisptr.update_with_guesses(ipair, Value1, Value2, _guesses)
 * 
 */
  __pyx_t_11 = __pyx_v_guesses->y;
  __pyx_v__guesses.y = __pyx_t_11;

  /* "smo/media/CoolProp5/AbstractState.pyx":54
 *         _guesses.x = guesses.x
 *         _guesses.y = guesses.y
 *         self.thisptr.update_with_guesses(ipair, Value1, Value2, _guesses)             # <<<<<<<<<<<<<<
 * 
 *     cpdef set_mole_fractions(self, vector[double] z):
 */
  try {
    __pyx_v_self->thisptr->update_with_guesses(__pyx_v_ipair, __pyx_v_Value1, __pyx_v_Value2, __pyx_v__guesses);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":45
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         self.thisptr.update(ipair, Value1, Value2)
 *     cpdef update_with_guesses(self, constants_header.input_pairs ipair, double Value1, double Value2, PyGuessesStructure guesses):             # <<<<<<<<<<<<<<
 *         """ Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` """
 *         cdef cAbstractState.GuessesStructure _guesses
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.update_with_guesses", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_15update_with_guesses(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_14update_with_guesses[] = " Update function - wrapper of c++ function :cpapi:`CoolProp::AbstractState::update` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_15update_with_guesses(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::input_pairs __pyx_v_ipair;
  double __pyx_v_Value1;
  double __pyx_v_Value2;
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_guesses = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_with_guesses (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ipair,&__pyx_n_s_Value1,&__pyx_n_s_Value2,&__pyx_n_s_guesses,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ipair)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Value1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_with_guesses", 1, 4, 4, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Value2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_with_guesses", 1, 4, 4, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_guesses)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("update_with_guesses", 1, 4, 4, 3); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_with_guesses") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_ipair = ((CoolProp::input_pairs)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Value1 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_Value1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Value2 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_Value2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_guesses = ((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_with_guesses", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.update_with_guesses", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_guesses), __pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure, 1, "guesses", 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_14update_with_guesses(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_ipair, __pyx_v_Value1, __pyx_v_Value2, __pyx_v_guesses);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_14update_with_guesses(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::input_pairs __pyx_v_ipair, double __pyx_v_Value1, double __pyx_v_Value2, struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *__pyx_v_guesses) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_with_guesses", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update_with_guesses(__pyx_v_self, __pyx_v_ipair, __pyx_v_Value1, __pyx_v_Value2, __pyx_v_guesses, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.update_with_guesses", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":56
 *         self.thisptr.update_with_guesses(ipair, Value1, Value2, _guesses)
 * 
 *     cpdef set_mole_fractions(self, vector[double] z):             # <<<<<<<<<<<<<<
 *         """ Set the mole fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mole_fractions` """
 *         self.thisptr.set_mole_fractions(z)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_17set_mole_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mole_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_mole_fractions", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_mole_fractions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_17set_mole_fractions)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __pyx_convert_vector_to_py_double(__pyx_v_z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":58
 *     cpdef set_mole_fractions(self, vector[double] z):
 *         """ Set the mole fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mole_fractions` """
 *         self.thisptr.set_mole_fractions(z)             # <<<<<<<<<<<<<<
 *     cpdef set_mass_fractions(self, vector[double] z):
 *         """ Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` """
 */
  try {
    __pyx_v_self->thisptr->set_mole_fractions(__pyx_v_z);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":56
 *         self.thisptr.update_with_guesses(ipair, Value1, Value2, _guesses)
 * 
 *     cpdef set_mole_fractions(self, vector[double] z):             # <<<<<<<<<<<<<<
 *         """ Set the mole fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mole_fractions` """
 *         self.thisptr.set_mole_fractions(z)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_mole_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_17set_mole_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_16set_mole_fractions[] = " Set the mole fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mole_fractions` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_17set_mole_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z) {
  std::vector<double>  __pyx_v_z;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mole_fractions (wrapper)", 0);
  assert(__pyx_arg_z); {
    __pyx_v_z = __pyx_convert_vector_from_py_double(__pyx_arg_z); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_mole_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_16set_mole_fractions(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((std::vector<double> )__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_16set_mole_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_mole_fractions", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mole_fractions(__pyx_v_self, __pyx_v_z, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_mole_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":59
 *         """ Set the mole fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mole_fractions` """
 *         self.thisptr.set_mole_fractions(z)
 *     cpdef set_mass_fractions(self, vector[double] z):             # <<<<<<<<<<<<<<
 *         """ Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` """
 *         self.thisptr.set_mass_fractions(z)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_19set_mass_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mass_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_mass_fractions", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_mass_fractions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_19set_mass_fractions)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __pyx_convert_vector_to_py_double(__pyx_v_z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":61
 *     cpdef set_mass_fractions(self, vector[double] z):
 *         """ Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` """
 *         self.thisptr.set_mass_fractions(z)             # <<<<<<<<<<<<<<
 *     cpdef set_volu_fractions(self, vector[double] z):
 *         """ Set the volume fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_volu_fractions` """
 */
  try {
    __pyx_v_self->thisptr->set_mass_fractions(__pyx_v_z);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":59
 *         """ Set the mole fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mole_fractions` """
 *         self.thisptr.set_mole_fractions(z)
 *     cpdef set_mass_fractions(self, vector[double] z):             # <<<<<<<<<<<<<<
 *         """ Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` """
 *         self.thisptr.set_mass_fractions(z)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_mass_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_19set_mass_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_18set_mass_fractions[] = " Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_19set_mass_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z) {
  std::vector<double>  __pyx_v_z;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mass_fractions (wrapper)", 0);
  assert(__pyx_arg_z); {
    __pyx_v_z = __pyx_convert_vector_from_py_double(__pyx_arg_z); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_mass_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_18set_mass_fractions(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((std::vector<double> )__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_18set_mass_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_mass_fractions", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mass_fractions(__pyx_v_self, __pyx_v_z, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_mass_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":62
 *         """ Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` """
 *         self.thisptr.set_mass_fractions(z)
 *     cpdef set_volu_fractions(self, vector[double] z):             # <<<<<<<<<<<<<<
 *         """ Set the volume fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_volu_fractions` """
 *         self.thisptr.set_volu_fractions(z)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_21set_volu_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_volu_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_volu_fractions", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_volu_fractions); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_21set_volu_fractions)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __pyx_convert_vector_to_py_double(__pyx_v_z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":64
 *     cpdef set_volu_fractions(self, vector[double] z):
 *         """ Set the volume fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_volu_fractions` """
 *         self.thisptr.set_volu_fractions(z)             # <<<<<<<<<<<<<<
 * 
 *     ## ----------------------------------------
 */
  try {
    __pyx_v_self->thisptr->set_volu_fractions(__pyx_v_z);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":62
 *         """ Set the mass fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_mass_fractions` """
 *         self.thisptr.set_mass_fractions(z)
 *     cpdef set_volu_fractions(self, vector[double] z):             # <<<<<<<<<<<<<<
 *         """ Set the volume fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_volu_fractions` """
 *         self.thisptr.set_volu_fractions(z)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_volu_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_21set_volu_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_20set_volu_fractions[] = " Set the volume fractions - wrapper of c++ function :cpapi:`CoolProp::AbstractState::set_volu_fractions` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_21set_volu_fractions(PyObject *__pyx_v_self, PyObject *__pyx_arg_z) {
  std::vector<double>  __pyx_v_z;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_volu_fractions (wrapper)", 0);
  assert(__pyx_arg_z); {
    __pyx_v_z = __pyx_convert_vector_from_py_double(__pyx_arg_z); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_volu_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_20set_volu_fractions(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((std::vector<double> )__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_20set_volu_fractions(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::vector<double>  __pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_volu_fractions", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_volu_fractions(__pyx_v_self, __pyx_v_z, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.set_volu_fractions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":69
 *     ##        Limits
 *     ## ----------------------------------------
 *     cpdef double Tmin(self):             # <<<<<<<<<<<<<<
 *         """ Set the minimum temperature in K- wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmin` """
 *         return self.thisptr.Tmin()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_23Tmin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmin(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Tmin", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Tmin); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_23Tmin)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":71
 *     cpdef double Tmin(self):
 *         """ Set the minimum temperature in K- wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmin` """
 *         return self.thisptr.Tmin()             # <<<<<<<<<<<<<<
 *     cpdef double Tmax(self):
 *         """ Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` """
 */
  __pyx_r = __pyx_v_self->thisptr->Tmin();
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":69
 *     ##        Limits
 *     ## ----------------------------------------
 *     cpdef double Tmin(self):             # <<<<<<<<<<<<<<
 *         """ Set the minimum temperature in K- wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmin` """
 *         return self.thisptr.Tmin()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("smo.media.CoolProp5.AbstractState.AbstractState.Tmin", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_23Tmin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_22Tmin[] = " Set the minimum temperature in K- wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmin` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_23Tmin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Tmin (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_22Tmin(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_22Tmin(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Tmin", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmin(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Tmin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":72
 *         """ Set the minimum temperature in K- wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmin` """
 *         return self.thisptr.Tmin()
 *     cpdef double Tmax(self):             # <<<<<<<<<<<<<<
 *         """ Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` """
 *         return self.thisptr.Tmax()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_25Tmax(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Tmax", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Tmax); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_25Tmax)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":74
 *     cpdef double Tmax(self):
 *         """ Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` """
 *         return self.thisptr.Tmax()             # <<<<<<<<<<<<<<
 *     cpdef double pmax(self):
 *         """ Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` """
 */
  __pyx_r = __pyx_v_self->thisptr->Tmax();
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":72
 *         """ Set the minimum temperature in K- wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmin` """
 *         return self.thisptr.Tmin()
 *     cpdef double Tmax(self):             # <<<<<<<<<<<<<<
 *         """ Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` """
 *         return self.thisptr.Tmax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("smo.media.CoolProp5.AbstractState.AbstractState.Tmax", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_25Tmax(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_24Tmax[] = " Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_25Tmax(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Tmax (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_24Tmax(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_24Tmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Tmax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmax(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Tmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":75
 *         """ Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` """
 *         return self.thisptr.Tmax()
 *     cpdef double pmax(self):             # <<<<<<<<<<<<<<
 *         """ Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` """
 *         return self.thisptr.pmax()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_27pmax(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_pmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pmax", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pmax); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_27pmax)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":77
 *     cpdef double pmax(self):
 *         """ Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` """
 *         return self.thisptr.pmax()             # <<<<<<<<<<<<<<
 *     cpdef double Ttriple(self):
 *         """ Set the triple point temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Ttriple` """
 */
  __pyx_r = __pyx_v_self->thisptr->pmax();
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":75
 *         """ Set the maximum temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Tmax` """
 *         return self.thisptr.Tmax()
 *     cpdef double pmax(self):             # <<<<<<<<<<<<<<
 *         """ Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` """
 *         return self.thisptr.pmax()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("smo.media.CoolProp5.AbstractState.AbstractState.pmax", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_27pmax(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_26pmax[] = " Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_27pmax(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pmax (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_26pmax(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_26pmax(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pmax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_pmax(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.pmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":78
 *         """ Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` """
 *         return self.thisptr.pmax()
 *     cpdef double Ttriple(self):             # <<<<<<<<<<<<<<
 *         """ Set the triple point temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Ttriple` """
 *         return self.thisptr.Ttriple()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_29Ttriple(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Ttriple(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Ttriple", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Ttriple); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_29Ttriple)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":80
 *     cpdef double Ttriple(self):
 *         """ Set the triple point temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Ttriple` """
 *         return self.thisptr.Ttriple()             # <<<<<<<<<<<<<<
 * 
 *     ## ----------------------------------------
 */
  __pyx_r = __pyx_v_self->thisptr->Ttriple();
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":78
 *         """ Set the maximum pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::pmax` """
 *         return self.thisptr.pmax()
 *     cpdef double Ttriple(self):             # <<<<<<<<<<<<<<
 *         """ Set the triple point temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Ttriple` """
 *         return self.thisptr.Ttriple()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("smo.media.CoolProp5.AbstractState.AbstractState.Ttriple", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_29Ttriple(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_28Ttriple[] = " Set the triple point temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Ttriple` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_29Ttriple(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Ttriple (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_28Ttriple(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_28Ttriple(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Ttriple", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Ttriple(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Ttriple", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":86
 *     ## ----------------------------------------
 * 
 *     cpdef double keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::keyed_output(parameters key)` """
 *         return self.thisptr.keyed_output(iOutput)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_31keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keyed_output", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_keyed_output); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_31keyed_output)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_iOutput); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_7;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":88
 *     cpdef double keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::keyed_output(parameters key)` """
 *         return self.thisptr.keyed_output(iOutput)             # <<<<<<<<<<<<<<
 *     cpdef double trivial_keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` """
 */
  try {
    __pyx_t_7 = __pyx_v_self->thisptr->keyed_output(__pyx_v_iOutput);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_7;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":86
 *     ## ----------------------------------------
 * 
 *     cpdef double keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::keyed_output(parameters key)` """
 *         return self.thisptr.keyed_output(iOutput)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_31keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_30keyed_output[] = " Update :cpapi:`CoolProp::AbstractState::keyed_output(parameters key)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_31keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput) {
  CoolProp::parameters __pyx_v_iOutput;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keyed_output (wrapper)", 0);
  assert(__pyx_arg_iOutput); {
    __pyx_v_iOutput = ((CoolProp::parameters)PyInt_AsLong(__pyx_arg_iOutput)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_30keyed_output(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((CoolProp::parameters)__pyx_v_iOutput));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_30keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keyed_output", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_keyed_output(__pyx_v_self, __pyx_v_iOutput, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":89
 *         """ Update :cpapi:`CoolProp::AbstractState::keyed_output(parameters key)` """
 *         return self.thisptr.keyed_output(iOutput)
 *     cpdef double trivial_keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` """
 *         return self.thisptr.trivial_keyed_output(iOutput)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_33trivial_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_trivial_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("trivial_keyed_output", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_trivial_keyed_output); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_33trivial_keyed_output)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_iOutput); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_7;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":91
 *     cpdef double trivial_keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` """
 *         return self.thisptr.trivial_keyed_output(iOutput)             # <<<<<<<<<<<<<<
 *     cpdef double saturated_liquid_keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` """
 */
  try {
    __pyx_t_7 = __pyx_v_self->thisptr->trivial_keyed_output(__pyx_v_iOutput);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_7;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":89
 *         """ Update :cpapi:`CoolProp::AbstractState::keyed_output(parameters key)` """
 *         return self.thisptr.keyed_output(iOutput)
 *     cpdef double trivial_keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` """
 *         return self.thisptr.trivial_keyed_output(iOutput)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.trivial_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_33trivial_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_32trivial_keyed_output[] = " Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_33trivial_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput) {
  CoolProp::parameters __pyx_v_iOutput;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("trivial_keyed_output (wrapper)", 0);
  assert(__pyx_arg_iOutput); {
    __pyx_v_iOutput = ((CoolProp::parameters)PyInt_AsLong(__pyx_arg_iOutput)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.trivial_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_32trivial_keyed_output(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((CoolProp::parameters)__pyx_v_iOutput));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_32trivial_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("trivial_keyed_output", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_trivial_keyed_output(__pyx_v_self, __pyx_v_iOutput, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.trivial_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":92
 *         """ Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` """
 *         return self.thisptr.trivial_keyed_output(iOutput)
 *     cpdef double saturated_liquid_keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_liquid_keyed_output(iOutput)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_35saturated_liquid_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_liquid_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturated_liquid_keyed_output", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_saturated_liquid_keyed_output); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_35saturated_liquid_keyed_output)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_iOutput); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_7;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":94
 *     cpdef double saturated_liquid_keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_liquid_keyed_output(iOutput)             # <<<<<<<<<<<<<<
 *     cpdef double saturated_vapor_keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_vapor_keyed_output(parameters key)` """
 */
  try {
    __pyx_t_7 = __pyx_v_self->thisptr->saturated_liquid_keyed_output(__pyx_v_iOutput);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_7;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":92
 *         """ Update :cpapi:`CoolProp::AbstractState::trivial_keyed_output(parameters key)` """
 *         return self.thisptr.trivial_keyed_output(iOutput)
 *     cpdef double saturated_liquid_keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_liquid_keyed_output(iOutput)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturated_liquid_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_35saturated_liquid_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_34saturated_liquid_keyed_output[] = " Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_35saturated_liquid_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput) {
  CoolProp::parameters __pyx_v_iOutput;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("saturated_liquid_keyed_output (wrapper)", 0);
  assert(__pyx_arg_iOutput); {
    __pyx_v_iOutput = ((CoolProp::parameters)PyInt_AsLong(__pyx_arg_iOutput)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturated_liquid_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_34saturated_liquid_keyed_output(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((CoolProp::parameters)__pyx_v_iOutput));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_34saturated_liquid_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturated_liquid_keyed_output", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_liquid_keyed_output(__pyx_v_self, __pyx_v_iOutput, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturated_liquid_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":95
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_liquid_keyed_output(iOutput)
 *     cpdef double saturated_vapor_keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_vapor_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_vapor_keyed_output(iOutput)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_37saturated_vapor_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_vapor_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturated_vapor_keyed_output", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_saturated_vapor_keyed_output); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_37saturated_vapor_keyed_output)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_iOutput); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_7;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":97
 *     cpdef double saturated_vapor_keyed_output(self, parameters iOutput) except *:
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_vapor_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_vapor_keyed_output(iOutput)             # <<<<<<<<<<<<<<
 * 
 *     cpdef double T(self) except *:
 */
  try {
    __pyx_t_7 = __pyx_v_self->thisptr->saturated_vapor_keyed_output(__pyx_v_iOutput);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_7;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":95
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_liquid_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_liquid_keyed_output(iOutput)
 *     cpdef double saturated_vapor_keyed_output(self, parameters iOutput) except *:             # <<<<<<<<<<<<<<
 *         """ Update :cpapi:`CoolProp::AbstractState::saturated_vapor_keyed_output(parameters key)` """
 *         return self.thisptr.saturated_vapor_keyed_output(iOutput)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturated_vapor_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_37saturated_vapor_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_36saturated_vapor_keyed_output[] = " Update :cpapi:`CoolProp::AbstractState::saturated_vapor_keyed_output(parameters key)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_37saturated_vapor_keyed_output(PyObject *__pyx_v_self, PyObject *__pyx_arg_iOutput) {
  CoolProp::parameters __pyx_v_iOutput;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("saturated_vapor_keyed_output (wrapper)", 0);
  assert(__pyx_arg_iOutput); {
    __pyx_v_iOutput = ((CoolProp::parameters)PyInt_AsLong(__pyx_arg_iOutput)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturated_vapor_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_36saturated_vapor_keyed_output(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((CoolProp::parameters)__pyx_v_iOutput));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_36saturated_vapor_keyed_output(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_iOutput) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturated_vapor_keyed_output", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_vapor_keyed_output(__pyx_v_self, __pyx_v_iOutput, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturated_vapor_keyed_output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":99
 *         return self.thisptr.saturated_vapor_keyed_output(iOutput)
 * 
 *     cpdef double T(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::T(void)` """
 *         return self.thisptr.T()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_39T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_T(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("T", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_39T)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":101
 *     cpdef double T(self) except *:
 *         """ Get the temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::T(void)` """
 *         return self.thisptr.T()             # <<<<<<<<<<<<<<
 *     cpdef double p(self) except *:
 *         """ Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->T();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":99
 *         return self.thisptr.saturated_vapor_keyed_output(iOutput)
 * 
 *     cpdef double T(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::T(void)` """
 *         return self.thisptr.T()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_39T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_38T[] = " Get the temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::T(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_39T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("T (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_38T(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_38T(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("T", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_T(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":102
 *         """ Get the temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::T(void)` """
 *         return self.thisptr.T()
 *     cpdef double p(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` """
 *         return self.thisptr.p()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_41p(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_p(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("p", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_41p)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":104
 *     cpdef double p(self) except *:
 *         """ Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` """
 *         return self.thisptr.p()             # <<<<<<<<<<<<<<
 *     cpdef double Q(self) except *:
 *         """ Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->p();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":102
 *         """ Get the temperature in K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::T(void)` """
 *         return self.thisptr.T()
 *     cpdef double p(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` """
 *         return self.thisptr.p()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.p", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_41p(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_40p[] = " Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_41p(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("p (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_40p(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_40p(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("p", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_p(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.p", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":105
 *         """ Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` """
 *         return self.thisptr.p()
 *     cpdef double Q(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` """
 *         return self.thisptr.Q()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_43Q(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Q(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Q", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Q); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_43Q)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":107
 *     cpdef double Q(self) except *:
 *         """ Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` """
 *         return self.thisptr.Q()             # <<<<<<<<<<<<<<
 *     cpdef double rhomolar(self) except *:
 *         """ Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->Q();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":105
 *         """ Get the pressure in Pa - wrapper of c++ function :cpapi:`CoolProp::AbstractState::p(void)` """
 *         return self.thisptr.p()
 *     cpdef double Q(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` """
 *         return self.thisptr.Q()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Q", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_43Q(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_42Q[] = " Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_43Q(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Q (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_42Q(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_42Q(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Q", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Q(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Q", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":108
 *         """ Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` """
 *         return self.thisptr.Q()
 *     cpdef double rhomolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` """
 *         return self.thisptr.rhomolar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_45rhomolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rhomolar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rhomolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_45rhomolar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":110
 *     cpdef double rhomolar(self) except *:
 *         """ Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` """
 *         return self.thisptr.rhomolar()             # <<<<<<<<<<<<<<
 *     cpdef double rhomass(self) except *:
 *         """ Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->rhomolar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":108
 *         """ Get the vapor quality in mol/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Q(void)` """
 *         return self.thisptr.Q()
 *     cpdef double rhomolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` """
 *         return self.thisptr.rhomolar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.rhomolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_45rhomolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_44rhomolar[] = " Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_45rhomolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rhomolar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_44rhomolar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_44rhomolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rhomolar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomolar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.rhomolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":111
 *         """ Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` """
 *         return self.thisptr.rhomolar()
 *     cpdef double rhomass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` """
 *         return self.thisptr.rhomass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_47rhomass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rhomass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rhomass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_47rhomass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":113
 *     cpdef double rhomass(self) except *:
 *         """ Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` """
 *         return self.thisptr.rhomass()             # <<<<<<<<<<<<<<
 *     cpdef double hmolar(self) except *:
 *         """ Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->rhomass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":111
 *         """ Get the density in mol/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomolar(void)` """
 *         return self.thisptr.rhomolar()
 *     cpdef double rhomass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` """
 *         return self.thisptr.rhomass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.rhomass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_47rhomass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_46rhomass[] = " Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_47rhomass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rhomass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_46rhomass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_46rhomass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rhomass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.rhomass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":114
 *         """ Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` """
 *         return self.thisptr.rhomass()
 *     cpdef double hmolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` """
 *         return self.thisptr.hmolar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_49hmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hmolar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hmolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_49hmolar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":116
 *     cpdef double hmolar(self) except *:
 *         """ Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` """
 *         return self.thisptr.hmolar()             # <<<<<<<<<<<<<<
 *     cpdef double hmass(self) except *:
 *         """ Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->hmolar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":114
 *         """ Get the density in kg/m^3 - wrapper of c++ function :cpapi:`CoolProp::AbstractState::rhomass(void)` """
 *         return self.thisptr.rhomass()
 *     cpdef double hmolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` """
 *         return self.thisptr.hmolar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.hmolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_49hmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_48hmolar[] = " Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_49hmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hmolar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_48hmolar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_48hmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hmolar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmolar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.hmolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":117
 *         """ Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` """
 *         return self.thisptr.hmolar()
 *     cpdef double hmass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` """
 *         return self.thisptr.hmass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_51hmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hmass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_hmass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_51hmass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":119
 *     cpdef double hmass(self) except *:
 *         """ Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` """
 *         return self.thisptr.hmass()             # <<<<<<<<<<<<<<
 *     cpdef double umolar(self) except *:
 *         """ Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->hmass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":117
 *         """ Get the enthalpy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmolar(void)` """
 *         return self.thisptr.hmolar()
 *     cpdef double hmass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` """
 *         return self.thisptr.hmass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.hmass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_51hmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_50hmass[] = " Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_51hmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hmass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_50hmass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_50hmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hmass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.hmass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":120
 *         """ Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` """
 *         return self.thisptr.hmass()
 *     cpdef double umolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` """
 *         return self.thisptr.umolar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_53umolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("umolar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_umolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_53umolar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":122
 *     cpdef double umolar(self) except *:
 *         """ Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` """
 *         return self.thisptr.umolar()             # <<<<<<<<<<<<<<
 *     cpdef double umass(self) except *:
 *         """ Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->umolar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":120
 *         """ Get the enthalpy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::hmass(void)` """
 *         return self.thisptr.hmass()
 *     cpdef double umolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` """
 *         return self.thisptr.umolar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.umolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_53umolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_52umolar[] = " Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_53umolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("umolar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_52umolar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_52umolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("umolar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umolar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.umolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":123
 *         """ Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` """
 *         return self.thisptr.umolar()
 *     cpdef double umass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` """
 *         return self.thisptr.umass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_55umass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("umass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_umass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_55umass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":125
 *     cpdef double umass(self) except *:
 *         """ Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` """
 *         return self.thisptr.umass()             # <<<<<<<<<<<<<<
 *     cpdef double smolar(self) except *:
 *         """ Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->umass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":123
 *         """ Get the internal energy in J/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umolar(void)` """
 *         return self.thisptr.umolar()
 *     cpdef double umass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` """
 *         return self.thisptr.umass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.umass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_55umass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_54umass[] = " Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_55umass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("umass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_54umass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_54umass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("umass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.umass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":126
 *         """ Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` """
 *         return self.thisptr.umass()
 *     cpdef double smolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` """
 *         return self.thisptr.smolar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_57smolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("smolar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_smolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_57smolar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":128
 *     cpdef double smolar(self) except *:
 *         """ Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` """
 *         return self.thisptr.smolar()             # <<<<<<<<<<<<<<
 *     cpdef double smass(self) except *:
 *         """ Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->smolar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":126
 *         """ Get the internal energy in J/kg - wrapper of c++ function :cpapi:`CoolProp::AbstractState::umass(void)` """
 *         return self.thisptr.umass()
 *     cpdef double smolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` """
 *         return self.thisptr.smolar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.smolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_57smolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_56smolar[] = " Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_57smolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("smolar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_56smolar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_56smolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("smolar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smolar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.smolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":129
 *         """ Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` """
 *         return self.thisptr.smolar()
 *     cpdef double smass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` """
 *         return self.thisptr.smass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_59smass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("smass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_smass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_59smass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":131
 *     cpdef double smass(self) except *:
 *         """ Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` """
 *         return self.thisptr.smass()             # <<<<<<<<<<<<<<
 *     cpdef double cpmolar(self) except *:
 *         """ Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->smass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":129
 *         """ Get the entropy in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smolar(void)` """
 *         return self.thisptr.smolar()
 *     cpdef double smass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` """
 *         return self.thisptr.smass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.smass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_59smass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_58smass[] = " Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_59smass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("smass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_58smass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_58smass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("smass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.smass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":132
 *         """ Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` """
 *         return self.thisptr.smass()
 *     cpdef double cpmolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` """
 *         return self.thisptr.cpmolar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_61cpmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cpmolar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cpmolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_61cpmolar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":134
 *     cpdef double cpmolar(self) except *:
 *         """ Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` """
 *         return self.thisptr.cpmolar()             # <<<<<<<<<<<<<<
 *     cpdef double cpmass(self) except *:
 *         """ Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->cpmolar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":132
 *         """ Get the entropy in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::smass(void)` """
 *         return self.thisptr.smass()
 *     cpdef double cpmolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` """
 *         return self.thisptr.cpmolar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cpmolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_61cpmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_60cpmolar[] = " Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_61cpmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cpmolar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_60cpmolar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_60cpmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cpmolar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmolar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cpmolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":135
 *         """ Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` """
 *         return self.thisptr.cpmolar()
 *     cpdef double cpmass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` """
 *         return self.thisptr.cpmass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_63cpmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cpmass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cpmass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_63cpmass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":137
 *     cpdef double cpmass(self) except *:
 *         """ Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` """
 *         return self.thisptr.cpmass()             # <<<<<<<<<<<<<<
 *     cpdef double cp0molar(self) except *:
 *         """ Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->cpmass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":135
 *         """ Get the constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmolar(void)` """
 *         return self.thisptr.cpmolar()
 *     cpdef double cpmass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` """
 *         return self.thisptr.cpmass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cpmass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_63cpmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_62cpmass[] = " Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_63cpmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cpmass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_62cpmass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_62cpmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cpmass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cpmass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":138
 *         """ Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` """
 *         return self.thisptr.cpmass()
 *     cpdef double cp0molar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` """
 *         return self.thisptr.cp0molar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_65cp0molar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0molar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cp0molar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cp0molar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_65cp0molar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":140
 *     cpdef double cp0molar(self) except *:
 *         """ Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` """
 *         return self.thisptr.cp0molar()             # <<<<<<<<<<<<<<
 *     cpdef double cp0mass(self) except *:
 *         """ Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->cp0molar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":138
 *         """ Get the constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cpmass(void)` """
 *         return self.thisptr.cpmass()
 *     cpdef double cp0molar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` """
 *         return self.thisptr.cp0molar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cp0molar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_65cp0molar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_64cp0molar[] = " Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_65cp0molar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cp0molar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_64cp0molar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_64cp0molar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cp0molar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0molar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cp0molar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":141
 *         """ Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` """
 *         return self.thisptr.cp0molar()
 *     cpdef double cp0mass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` """
 *         return self.thisptr.cp0mass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_67cp0mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cp0mass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cp0mass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_67cp0mass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":143
 *     cpdef double cp0mass(self) except *:
 *         """ Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` """
 *         return self.thisptr.cp0mass()             # <<<<<<<<<<<<<<
 *     cpdef double cvmolar(self) except *:
 *         """ Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->cp0mass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":141
 *         """ Get the ideal gas constant pressure specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0molar(void)` """
 *         return self.thisptr.cp0molar()
 *     cpdef double cp0mass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` """
 *         return self.thisptr.cp0mass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cp0mass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_67cp0mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_66cp0mass[] = " Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_67cp0mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cp0mass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_66cp0mass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_66cp0mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cp0mass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0mass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cp0mass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":144
 *         """ Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` """
 *         return self.thisptr.cp0mass()
 *     cpdef double cvmolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` """
 *         return self.thisptr.cvmolar()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_69cvmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cvmolar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cvmolar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_69cvmolar)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":146
 *     cpdef double cvmolar(self) except *:
 *         """ Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` """
 *         return self.thisptr.cvmolar()             # <<<<<<<<<<<<<<
 *     cpdef double cvmass(self) except *:
 *         """ Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->cvmolar();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":144
 *         """ Get the ideal gas constant pressure specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cp0mass(void)` """
 *         return self.thisptr.cp0mass()
 *     cpdef double cvmolar(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` """
 *         return self.thisptr.cvmolar()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cvmolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_69cvmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_68cvmolar[] = " Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_69cvmolar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cvmolar (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_68cvmolar(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_68cvmolar(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cvmolar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmolar(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cvmolar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":147
 *         """ Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` """
 *         return self.thisptr.cvmolar()
 *     cpdef double cvmass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` """
 *         return self.thisptr.cvmass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_71cvmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cvmass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cvmass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_71cvmass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":149
 *     cpdef double cvmass(self) except *:
 *         """ Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` """
 *         return self.thisptr.cvmass()             # <<<<<<<<<<<<<<
 *     cpdef double tau(self) except *:
 *         """ Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->cvmass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":147
 *         """ Get the constantimport  volume specific heat in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmolar(void)` """
 *         return self.thisptr.cvmolar()
 *     cpdef double cvmass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` """
 *         return self.thisptr.cvmass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cvmass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_71cvmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_70cvmass[] = " Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_71cvmass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cvmass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_70cvmass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_70cvmass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cvmass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.cvmass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":150
 *         """ Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` """
 *         return self.thisptr.cvmass()
 *     cpdef double tau(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` """
 *         return self.thisptr.tau()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_73tau(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_tau(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tau", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_tau); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_73tau)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":152
 *     cpdef double tau(self) except *:
 *         """ Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` """
 *         return self.thisptr.tau()             # <<<<<<<<<<<<<<
 *     cpdef double delta(self) except *:
 *         """ Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->tau();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":150
 *         """ Get the constant volume specific heat in J/kg/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::cvmass(void)` """
 *         return self.thisptr.cvmass()
 *     cpdef double tau(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` """
 *         return self.thisptr.tau()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.tau", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_73tau(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_72tau[] = " Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_73tau(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tau (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_72tau(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_72tau(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tau", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_tau(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.tau", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":153
 *         """ Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` """
 *         return self.thisptr.tau()
 *     cpdef double delta(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` """
 *         return self.thisptr.delta()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_75delta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_delta(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delta", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_delta); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_75delta)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":155
 *     cpdef double delta(self) except *:
 *         """ Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` """
 *         return self.thisptr.delta()             # <<<<<<<<<<<<<<
 *     cpdef double speed_sound(self) except *:
 *         """ Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->delta();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":153
 *         """ Get the reciprocal reduced temperature - wrapper of c++ function :cpapi:`CoolProp::AbstractState::tau(void)` """
 *         return self.thisptr.tau()
 *     cpdef double delta(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` """
 *         return self.thisptr.delta()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.delta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_75delta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_74delta[] = " Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_75delta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("delta (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_74delta(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_74delta(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delta", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_delta(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.delta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":156
 *         """ Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` """
 *         return self.thisptr.delta()
 *     cpdef double speed_sound(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` """
 *         return self.thisptr.speed_sound()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_77speed_sound(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_speed_sound(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("speed_sound", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_speed_sound); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_77speed_sound)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":158
 *     cpdef double speed_sound(self) except *:
 *         """ Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` """
 *         return self.thisptr.speed_sound()             # <<<<<<<<<<<<<<
 *     cpdef double molar_mass(self) except *:
 *         """ Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->speed_sound();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":156
 *         """ Get the reduced density - wrapper of c++ function :cpapi:`CoolProp::AbstractState::delta(void)` """
 *         return self.thisptr.delta()
 *     cpdef double speed_sound(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` """
 *         return self.thisptr.speed_sound()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.speed_sound", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_77speed_sound(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_76speed_sound[] = " Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_77speed_sound(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("speed_sound (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_76speed_sound(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_76speed_sound(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("speed_sound", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_speed_sound(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.speed_sound", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":159
 *         """ Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` """
 *         return self.thisptr.speed_sound()
 *     cpdef double molar_mass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` """
 *         return self.thisptr.molar_mass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_79molar_mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_molar_mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("molar_mass", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_molar_mass); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_79molar_mass)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":161
 *     cpdef double molar_mass(self) except *:
 *         """ Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` """
 *         return self.thisptr.molar_mass()             # <<<<<<<<<<<<<<
 *     cpdef double acentric_factor(self) except *:
 *         """ Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->molar_mass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":159
 *         """ Get the speed of sound in m/s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::speed_sound(void)` """
 *         return self.thisptr.speed_sound()
 *     cpdef double molar_mass(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` """
 *         return self.thisptr.molar_mass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.molar_mass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_79molar_mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_78molar_mass[] = " Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_79molar_mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("molar_mass (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_78molar_mass(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_78molar_mass(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("molar_mass", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_molar_mass(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.molar_mass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":162
 *         """ Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` """
 *         return self.thisptr.molar_mass()
 *     cpdef double acentric_factor(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` """
 *         return self.thisptr.molar_mass()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_81acentric_factor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_acentric_factor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("acentric_factor", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_acentric_factor); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_81acentric_factor)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":164
 *     cpdef double acentric_factor(self) except *:
 *         """ Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` """
 *         return self.thisptr.molar_mass()             # <<<<<<<<<<<<<<
 *     cpdef double gas_constant(self) except *:
 *         """ Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->molar_mass();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":162
 *         """ Get the molar mass in kg/mol - wrapper of c++ function :cpapi:`CoolProp::AbstractState::molar_mass(void)` """
 *         return self.thisptr.molar_mass()
 *     cpdef double acentric_factor(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` """
 *         return self.thisptr.molar_mass()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.acentric_factor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_81acentric_factor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_80acentric_factor[] = " Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_81acentric_factor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acentric_factor (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_80acentric_factor(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_80acentric_factor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("acentric_factor", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_acentric_factor(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.acentric_factor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":165
 *         """ Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` """
 *         return self.thisptr.molar_mass()
 *     cpdef double gas_constant(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` """
 *         return self.thisptr.gas_constant()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_83gas_constant(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_gas_constant(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("gas_constant", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_gas_constant); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_83gas_constant)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":167
 *     cpdef double gas_constant(self) except *:
 *         """ Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` """
 *         return self.thisptr.gas_constant()             # <<<<<<<<<<<<<<
 *     cpdef double viscosity(self) except *:
 *         """ Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->gas_constant();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":165
 *         """ Get the acentric factor - wrapper of c++ function :cpapi:`CoolProp::AbstractState::acentric_factor(void)` """
 *         return self.thisptr.molar_mass()
 *     cpdef double gas_constant(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` """
 *         return self.thisptr.gas_constant()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.gas_constant", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_83gas_constant(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_82gas_constant[] = " Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_83gas_constant(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("gas_constant (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_82gas_constant(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_82gas_constant(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("gas_constant", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_gas_constant(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.gas_constant", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":168
 *         """ Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` """
 *         return self.thisptr.gas_constant()
 *     cpdef double viscosity(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` """
 *         return self.thisptr.viscosity()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_85viscosity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_viscosity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("viscosity", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_viscosity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_85viscosity)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":170
 *     cpdef double viscosity(self) except *:
 *         """ Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` """
 *         return self.thisptr.viscosity()             # <<<<<<<<<<<<<<
 *     cpdef double conductivity(self) except *:
 *         """ Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->viscosity();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":168
 *         """ Get the gas constant in J/mol/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::gas_constant(void)` """
 *         return self.thisptr.gas_constant()
 *     cpdef double viscosity(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` """
 *         return self.thisptr.viscosity()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.viscosity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_85viscosity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_84viscosity[] = " Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_85viscosity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("viscosity (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_84viscosity(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_84viscosity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("viscosity", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_viscosity(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.viscosity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":171
 *         """ Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` """
 *         return self.thisptr.viscosity()
 *     cpdef double conductivity(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` """
 *         return self.thisptr.conductivity()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_87conductivity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_conductivity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("conductivity", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_conductivity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_87conductivity)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":173
 *     cpdef double conductivity(self) except *:
 *         """ Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` """
 *         return self.thisptr.conductivity()             # <<<<<<<<<<<<<<
 *     cpdef double surface_tension(self) except *:
 *         """ Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->conductivity();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":171
 *         """ Get the viscosity in Pa-s - wrapper of c++ function :cpapi:`CoolProp::AbstractState::viscosity(void)` """
 *         return self.thisptr.viscosity()
 *     cpdef double conductivity(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` """
 *         return self.thisptr.conductivity()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.conductivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_87conductivity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_86conductivity[] = " Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_87conductivity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("conductivity (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_86conductivity(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_86conductivity(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("conductivity", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_conductivity(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.conductivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":174
 *         """ Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` """
 *         return self.thisptr.conductivity()
 *     cpdef double surface_tension(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` """
 *         return self.thisptr.surface_tension()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_89surface_tension(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_surface_tension(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("surface_tension", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_surface_tension); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_89surface_tension)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":176
 *     cpdef double surface_tension(self) except *:
 *         """ Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` """
 *         return self.thisptr.surface_tension()             # <<<<<<<<<<<<<<
 *     cpdef double Prandtl(self) except *:
 *         """ Get the Prandtl number - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Prandtl(void)` """
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->surface_tension();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":174
 *         """ Get the thermal conductivity in W/m/K - wrapper of c++ function :cpapi:`CoolProp::AbstractState::conductivity(void)` """
 *         return self.thisptr.conductivity()
 *     cpdef double surface_tension(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` """
 *         return self.thisptr.surface_tension()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.surface_tension", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_89surface_tension(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_88surface_tension[] = " Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_89surface_tension(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("surface_tension (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_88surface_tension(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_88surface_tension(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("surface_tension", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_surface_tension(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.surface_tension", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":177
 *         """ Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` """
 *         return self.thisptr.surface_tension()
 *     cpdef double Prandtl(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the Prandtl number - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Prandtl(void)` """
 *         return self.thisptr.Prandtl()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_91Prandtl(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Prandtl(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Prandtl", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Prandtl); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_91Prandtl)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":179
 *     cpdef double Prandtl(self) except *:
 *         """ Get the Prandtl number - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Prandtl(void)` """
 *         return self.thisptr.Prandtl()             # <<<<<<<<<<<<<<
 * 
 *     cpdef mole_fractions_liquid(self):
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->Prandtl();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_5;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":177
 *         """ Get the surface tension N/m - wrapper of c++ function :cpapi:`CoolProp::AbstractState::surface_tension(void)` """
 *         return self.thisptr.surface_tension()
 *     cpdef double Prandtl(self) except *:             # <<<<<<<<<<<<<<
 *         """ Get the Prandtl number - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Prandtl(void)` """
 *         return self.thisptr.Prandtl()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Prandtl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_91Prandtl(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_90Prandtl[] = " Get the Prandtl number - wrapper of c++ function :cpapi:`CoolProp::AbstractState::Prandtl(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_91Prandtl(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Prandtl (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_90Prandtl(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_90Prandtl(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Prandtl", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Prandtl(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.Prandtl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":181
 *         return self.thisptr.Prandtl()
 * 
 *     cpdef mole_fractions_liquid(self):             # <<<<<<<<<<<<<<
 *         """ Get the mole fractions of the liquid phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_liquid(void)` """
 *         return self.thisptr.mole_fractions_liquid()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_93mole_fractions_liquid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_liquid(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<long double>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mole_fractions_liquid", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_mole_fractions_liquid); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_93mole_fractions_liquid)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":183
 *     cpdef mole_fractions_liquid(self):
 *         """ Get the mole fractions of the liquid phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_liquid(void)` """
 *         return self.thisptr.mole_fractions_liquid()             # <<<<<<<<<<<<<<
 *     cpdef mole_fractions_vapor(self):
 *         """ Get the mole fractions of the vapor phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_vapor(void)` """
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->mole_fractions_liquid();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":181
 *         return self.thisptr.Prandtl()
 * 
 *     cpdef mole_fractions_liquid(self):             # <<<<<<<<<<<<<<
 *         """ Get the mole fractions of the liquid phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_liquid(void)` """
 *         return self.thisptr.mole_fractions_liquid()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.mole_fractions_liquid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_93mole_fractions_liquid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_92mole_fractions_liquid[] = " Get the mole fractions of the liquid phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_liquid(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_93mole_fractions_liquid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mole_fractions_liquid (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_92mole_fractions_liquid(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_92mole_fractions_liquid(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mole_fractions_liquid", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_liquid(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.mole_fractions_liquid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":184
 *         """ Get the mole fractions of the liquid phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_liquid(void)` """
 *         return self.thisptr.mole_fractions_liquid()
 *     cpdef mole_fractions_vapor(self):             # <<<<<<<<<<<<<<
 *         """ Get the mole fractions of the vapor phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_vapor(void)` """
 *         return self.thisptr.mole_fractions_vapor()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_95mole_fractions_vapor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_vapor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<long double>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mole_fractions_vapor", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_mole_fractions_vapor); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_95mole_fractions_vapor)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":186
 *     cpdef mole_fractions_vapor(self):
 *         """ Get the mole fractions of the vapor phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_vapor(void)` """
 *         return self.thisptr.mole_fractions_vapor()             # <<<<<<<<<<<<<<
 * 
 *     ## ----------------------------------------
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->mole_fractions_vapor();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":184
 *         """ Get the mole fractions of the liquid phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_liquid(void)` """
 *         return self.thisptr.mole_fractions_liquid()
 *     cpdef mole_fractions_vapor(self):             # <<<<<<<<<<<<<<
 *         """ Get the mole fractions of the vapor phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_vapor(void)` """
 *         return self.thisptr.mole_fractions_vapor()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.mole_fractions_vapor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_95mole_fractions_vapor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_94mole_fractions_vapor[] = " Get the mole fractions of the vapor phase - wrapper of c++ function :cpapi:`CoolProp::AbstractState::mole_fractions_vapor(void)` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_95mole_fractions_vapor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mole_fractions_vapor (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_94mole_fractions_vapor(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_94mole_fractions_vapor(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mole_fractions_vapor", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_vapor(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.mole_fractions_vapor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":192
 *     ## ----------------------------------------
 * 
 *     cpdef long double first_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT, constants_header.parameters CONSTANT) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_partial_deriv` """
 *         return self.thisptr.first_partial_deriv(OF, WRT, CONSTANT)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_97first_partial_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT, CoolProp::parameters __pyx_v_CONSTANT, int __pyx_skip_dispatch) {
  long double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  long double __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_partial_deriv", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_first_partial_deriv); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_97first_partial_deriv)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_OF); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_WRT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_CONSTANT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_6 = __pyx_t_1; __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_10 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_10;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":194
 *     cpdef long double first_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT, constants_header.parameters CONSTANT) except *:
 *         """ Get the first partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_partial_deriv` """
 *         return self.thisptr.first_partial_deriv(OF, WRT, CONSTANT)             # <<<<<<<<<<<<<<
 *     cpdef long double second_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT1, constants_header.parameters CONSTANT1, constants_header.parameters WRT2, constants_header.parameters CONSTANT2) except *:
 *         """ Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` """
 */
  try {
    __pyx_t_10 = __pyx_v_self->thisptr->first_partial_deriv(__pyx_v_OF, __pyx_v_WRT, __pyx_v_CONSTANT);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_10;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":192
 *     ## ----------------------------------------
 * 
 *     cpdef long double first_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT, constants_header.parameters CONSTANT) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_partial_deriv` """
 *         return self.thisptr.first_partial_deriv(OF, WRT, CONSTANT)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_partial_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_97first_partial_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_96first_partial_deriv[] = " Get the first partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_partial_deriv` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_97first_partial_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_OF;
  CoolProp::parameters __pyx_v_WRT;
  CoolProp::parameters __pyx_v_CONSTANT;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("first_partial_deriv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_OF,&__pyx_n_s_WRT,&__pyx_n_s_CONSTANT,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_OF)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_WRT)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_partial_deriv", 1, 3, 3, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_CONSTANT)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_partial_deriv", 1, 3, 3, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "first_partial_deriv") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_OF = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_WRT = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_CONSTANT = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("first_partial_deriv", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_partial_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_96first_partial_deriv(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_OF, __pyx_v_WRT, __pyx_v_CONSTANT);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_96first_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT, CoolProp::parameters __pyx_v_CONSTANT) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_partial_deriv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_partial_deriv(__pyx_v_self, __pyx_v_OF, __pyx_v_WRT, __pyx_v_CONSTANT, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_partial_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":195
 *         """ Get the first partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_partial_deriv` """
 *         return self.thisptr.first_partial_deriv(OF, WRT, CONSTANT)
 *     cpdef long double second_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT1, constants_header.parameters CONSTANT1, constants_header.parameters WRT2, constants_header.parameters CONSTANT2) except *:             # <<<<<<<<<<<<<<
 *         """ Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` """
 *         return self.thisptr.second_partial_deriv(OF, WRT1, CONSTANT1, WRT2, CONSTANT2)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_99second_partial_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_CONSTANT1, CoolProp::parameters __pyx_v_WRT2, CoolProp::parameters __pyx_v_CONSTANT2, int __pyx_skip_dispatch) {
  long double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  long double __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("second_partial_deriv", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_second_partial_deriv); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_99second_partial_deriv)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_OF); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_WRT1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_CONSTANT1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyInt_FromLong(__pyx_v_WRT2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyInt_FromLong(__pyx_v_CONSTANT2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_8 = __pyx_t_1; __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(5+__pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_10, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_11, 3+__pyx_t_10, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_11, 4+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_7 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_12 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_12;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":197
 *     cpdef long double second_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT1, constants_header.parameters CONSTANT1, constants_header.parameters WRT2, constants_header.parameters CONSTANT2) except *:
 *         """ Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` """
 *         return self.thisptr.second_partial_deriv(OF, WRT1, CONSTANT1, WRT2, CONSTANT2)             # <<<<<<<<<<<<<<
 *     cpdef long double first_saturation_deriv(self, constants_header.parameters OF , constants_header.parameters WRT) except *:
 *         """ Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` """
 */
  try {
    __pyx_t_12 = __pyx_v_self->thisptr->second_partial_deriv(__pyx_v_OF, __pyx_v_WRT1, __pyx_v_CONSTANT1, __pyx_v_WRT2, __pyx_v_CONSTANT2);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_12;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":195
 *         """ Get the first partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_partial_deriv` """
 *         return self.thisptr.first_partial_deriv(OF, WRT, CONSTANT)
 *     cpdef long double second_partial_deriv(self, constants_header.parameters OF , constants_header.parameters WRT1, constants_header.parameters CONSTANT1, constants_header.parameters WRT2, constants_header.parameters CONSTANT2) except *:             # <<<<<<<<<<<<<<
 *         """ Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` """
 *         return self.thisptr.second_partial_deriv(OF, WRT1, CONSTANT1, WRT2, CONSTANT2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_partial_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_99second_partial_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_98second_partial_deriv[] = " Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_99second_partial_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_OF;
  CoolProp::parameters __pyx_v_WRT1;
  CoolProp::parameters __pyx_v_CONSTANT1;
  CoolProp::parameters __pyx_v_WRT2;
  CoolProp::parameters __pyx_v_CONSTANT2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("second_partial_deriv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_OF,&__pyx_n_s_WRT1,&__pyx_n_s_CONSTANT1,&__pyx_n_s_WRT2,&__pyx_n_s_CONSTANT2,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_OF)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_WRT1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_partial_deriv", 1, 5, 5, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_CONSTANT1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_partial_deriv", 1, 5, 5, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_WRT2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_partial_deriv", 1, 5, 5, 3); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_CONSTANT2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_partial_deriv", 1, 5, 5, 4); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "second_partial_deriv") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_OF = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_WRT1 = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_CONSTANT1 = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_WRT2 = ((CoolProp::parameters)PyInt_AsLong(values[3])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_CONSTANT2 = ((CoolProp::parameters)PyInt_AsLong(values[4])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("second_partial_deriv", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_partial_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_98second_partial_deriv(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_OF, __pyx_v_WRT1, __pyx_v_CONSTANT1, __pyx_v_WRT2, __pyx_v_CONSTANT2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_98second_partial_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_CONSTANT1, CoolProp::parameters __pyx_v_WRT2, CoolProp::parameters __pyx_v_CONSTANT2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("second_partial_deriv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_partial_deriv(__pyx_v_self, __pyx_v_OF, __pyx_v_WRT1, __pyx_v_CONSTANT1, __pyx_v_WRT2, __pyx_v_CONSTANT2, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_partial_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":198
 *         """ Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` """
 *         return self.thisptr.second_partial_deriv(OF, WRT1, CONSTANT1, WRT2, CONSTANT2)
 *     cpdef long double first_saturation_deriv(self, constants_header.parameters OF , constants_header.parameters WRT) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` """
 *         return self.thisptr.first_saturation_deriv(OF, WRT)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_101first_saturation_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT, int __pyx_skip_dispatch) {
  long double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  long double __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_saturation_deriv", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_first_saturation_deriv); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_101first_saturation_deriv)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_OF); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_WRT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_9 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_9;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":200
 *     cpdef long double first_saturation_deriv(self, constants_header.parameters OF , constants_header.parameters WRT) except *:
 *         """ Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` """
 *         return self.thisptr.first_saturation_deriv(OF, WRT)             # <<<<<<<<<<<<<<
 *     cpdef long double second_saturation_deriv(self, constants_header.parameters OF1 , constants_header.parameters WRT1, constants_header.parameters OF2, constants_header.parameters WRT2) except *:
 *         """ Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` """
 */
  try {
    __pyx_t_9 = __pyx_v_self->thisptr->first_saturation_deriv(__pyx_v_OF, __pyx_v_WRT);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_9;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":198
 *         """ Get the second partial derivative - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_partial_deriv` """
 *         return self.thisptr.second_partial_deriv(OF, WRT1, CONSTANT1, WRT2, CONSTANT2)
 *     cpdef long double first_saturation_deriv(self, constants_header.parameters OF , constants_header.parameters WRT) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` """
 *         return self.thisptr.first_saturation_deriv(OF, WRT)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_saturation_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_101first_saturation_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_100first_saturation_deriv[] = " Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_101first_saturation_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_OF;
  CoolProp::parameters __pyx_v_WRT;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("first_saturation_deriv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_OF,&__pyx_n_s_WRT,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_OF)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_WRT)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_saturation_deriv", 1, 2, 2, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "first_saturation_deriv") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_OF = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_WRT = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("first_saturation_deriv", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_saturation_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_100first_saturation_deriv(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_OF, __pyx_v_WRT);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_100first_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF, CoolProp::parameters __pyx_v_WRT) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_saturation_deriv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_saturation_deriv(__pyx_v_self, __pyx_v_OF, __pyx_v_WRT, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_saturation_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":201
 *         """ Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` """
 *         return self.thisptr.first_saturation_deriv(OF, WRT)
 *     cpdef long double second_saturation_deriv(self, constants_header.parameters OF1 , constants_header.parameters WRT1, constants_header.parameters OF2, constants_header.parameters WRT2) except *:             # <<<<<<<<<<<<<<
 *         """ Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` """
 *         return self.thisptr.second_saturation_deriv(OF1, WRT1, OF2, WRT2)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_103second_saturation_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static long double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF1, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_OF2, CoolProp::parameters __pyx_v_WRT2, int __pyx_skip_dispatch) {
  long double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  long double __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("second_saturation_deriv", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_second_saturation_deriv); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_103second_saturation_deriv)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_OF1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_WRT1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_OF2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyInt_FromLong(__pyx_v_WRT2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_7 = __pyx_t_1; __pyx_t_8 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_9 = 1;
        }
      }
      __pyx_t_10 = PyTuple_New(4+__pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      if (__pyx_t_8) {
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_8); __Pyx_GIVEREF(__pyx_t_8); __pyx_t_8 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_9, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_9, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_9, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_10, 3+__pyx_t_9, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (long double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_11;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":203
 *     cpdef long double second_saturation_deriv(self, constants_header.parameters OF1 , constants_header.parameters WRT1, constants_header.parameters OF2, constants_header.parameters WRT2) except *:
 *         """ Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` """
 *         return self.thisptr.second_saturation_deriv(OF1, WRT1, OF2, WRT2)             # <<<<<<<<<<<<<<
 *     cpdef double first_two_phase_deriv(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant) except *:
 *         """ Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` """
 */
  try {
    __pyx_t_11 = __pyx_v_self->thisptr->second_saturation_deriv(__pyx_v_OF1, __pyx_v_WRT1, __pyx_v_OF2, __pyx_v_WRT2);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_11;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":201
 *         """ Get the first derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::first_saturation_deriv` """
 *         return self.thisptr.first_saturation_deriv(OF, WRT)
 *     cpdef long double second_saturation_deriv(self, constants_header.parameters OF1 , constants_header.parameters WRT1, constants_header.parameters OF2, constants_header.parameters WRT2) except *:             # <<<<<<<<<<<<<<
 *         """ Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` """
 *         return self.thisptr.second_saturation_deriv(OF1, WRT1, OF2, WRT2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_saturation_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_103second_saturation_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_102second_saturation_deriv[] = " Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_103second_saturation_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_OF1;
  CoolProp::parameters __pyx_v_WRT1;
  CoolProp::parameters __pyx_v_OF2;
  CoolProp::parameters __pyx_v_WRT2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("second_saturation_deriv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_OF1,&__pyx_n_s_WRT1,&__pyx_n_s_OF2,&__pyx_n_s_WRT2,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_OF1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_WRT1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_saturation_deriv", 1, 4, 4, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_OF2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_saturation_deriv", 1, 4, 4, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_WRT2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_saturation_deriv", 1, 4, 4, 3); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "second_saturation_deriv") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_OF1 = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_WRT1 = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_OF2 = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_WRT2 = ((CoolProp::parameters)PyInt_AsLong(values[3])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("second_saturation_deriv", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_saturation_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_102second_saturation_deriv(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_OF1, __pyx_v_WRT1, __pyx_v_OF2, __pyx_v_WRT2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_102second_saturation_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_OF1, CoolProp::parameters __pyx_v_WRT1, CoolProp::parameters __pyx_v_OF2, CoolProp::parameters __pyx_v_WRT2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("second_saturation_deriv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_saturation_deriv(__pyx_v_self, __pyx_v_OF1, __pyx_v_WRT1, __pyx_v_OF2, __pyx_v_WRT2, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_saturation_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":204
 *         """ Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` """
 *         return self.thisptr.second_saturation_deriv(OF1, WRT1, OF2, WRT2)
 *     cpdef double first_two_phase_deriv(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` """
 *         return self.thisptr.first_two_phase_deriv(Of, Wrt, Constant)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_105first_two_phase_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  double __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_two_phase_deriv", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_first_two_phase_deriv); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_105first_two_phase_deriv)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_Of); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_Wrt); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_Constant); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_6 = __pyx_t_1; __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_10;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":206
 *     cpdef double first_two_phase_deriv(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant) except *:
 *         """ Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` """
 *         return self.thisptr.first_two_phase_deriv(Of, Wrt, Constant)             # <<<<<<<<<<<<<<
 *     cpdef double second_two_phase_deriv(self, constants_header.parameters Of1, constants_header.parameters Wrt1, constants_header.parameters Constant1, constants_header.parameters Wrt2, constants_header.parameters Constant2) except *:
 *         """ Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` """
 */
  try {
    __pyx_t_10 = __pyx_v_self->thisptr->first_two_phase_deriv(__pyx_v_Of, __pyx_v_Wrt, __pyx_v_Constant);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_10;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":204
 *         """ Get the second derivative along the saturation curve - wrapper of c++ function :cpapi:`CoolProp::AbstractState::second_saturation_deriv` """
 *         return self.thisptr.second_saturation_deriv(OF1, WRT1, OF2, WRT2)
 *     cpdef double first_two_phase_deriv(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` """
 *         return self.thisptr.first_two_phase_deriv(Of, Wrt, Constant)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_two_phase_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_105first_two_phase_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_104first_two_phase_deriv[] = " Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_105first_two_phase_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_Of;
  CoolProp::parameters __pyx_v_Wrt;
  CoolProp::parameters __pyx_v_Constant;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("first_two_phase_deriv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_Of,&__pyx_n_s_Wrt,&__pyx_n_s_Constant,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Of)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Wrt)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv", 1, 3, 3, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Constant)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv", 1, 3, 3, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "first_two_phase_deriv") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_Of = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Wrt = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Constant = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_two_phase_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_104first_two_phase_deriv(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_Of, __pyx_v_Wrt, __pyx_v_Constant);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_104first_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_two_phase_deriv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv(__pyx_v_self, __pyx_v_Of, __pyx_v_Wrt, __pyx_v_Constant, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_two_phase_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":207
 *         """ Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` """
 *         return self.thisptr.first_two_phase_deriv(Of, Wrt, Constant)
 *     cpdef double second_two_phase_deriv(self, constants_header.parameters Of1, constants_header.parameters Wrt1, constants_header.parameters Constant1, constants_header.parameters Wrt2, constants_header.parameters Constant2) except *:             # <<<<<<<<<<<<<<
 *         """ Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` """
 *         return self.thisptr.second_two_phase_deriv(Of1, Wrt1, Constant1, Wrt2, Constant2)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_107second_two_phase_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of1, CoolProp::parameters __pyx_v_Wrt1, CoolProp::parameters __pyx_v_Constant1, CoolProp::parameters __pyx_v_Wrt2, CoolProp::parameters __pyx_v_Constant2, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  double __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("second_two_phase_deriv", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_second_two_phase_deriv); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_107second_two_phase_deriv)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_Of1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_Wrt1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_Constant1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyInt_FromLong(__pyx_v_Wrt2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyInt_FromLong(__pyx_v_Constant2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_8 = __pyx_t_1; __pyx_t_9 = NULL;
      __pyx_t_10 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
          __pyx_t_10 = 1;
        }
      }
      __pyx_t_11 = PyTuple_New(5+__pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      if (__pyx_t_9) {
        PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __Pyx_GIVEREF(__pyx_t_9); __pyx_t_9 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_11, 2+__pyx_t_10, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_11, 3+__pyx_t_10, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_11, 4+__pyx_t_10, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_7 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_12;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":209
 *     cpdef double second_two_phase_deriv(self, constants_header.parameters Of1, constants_header.parameters Wrt1, constants_header.parameters Constant1, constants_header.parameters Wrt2, constants_header.parameters Constant2) except *:
 *         """ Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` """
 *         return self.thisptr.second_two_phase_deriv(Of1, Wrt1, Constant1, Wrt2, Constant2)             # <<<<<<<<<<<<<<
 *     cpdef double first_two_phase_deriv_splined(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant, double x_end) except *:
 *         """ Get the first two-phase derivative using splines - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv_splined` """
 */
  try {
    __pyx_t_12 = __pyx_v_self->thisptr->second_two_phase_deriv(__pyx_v_Of1, __pyx_v_Wrt1, __pyx_v_Constant1, __pyx_v_Wrt2, __pyx_v_Constant2);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_12;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":207
 *         """ Get the first two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv` """
 *         return self.thisptr.first_two_phase_deriv(Of, Wrt, Constant)
 *     cpdef double second_two_phase_deriv(self, constants_header.parameters Of1, constants_header.parameters Wrt1, constants_header.parameters Constant1, constants_header.parameters Wrt2, constants_header.parameters Constant2) except *:             # <<<<<<<<<<<<<<
 *         """ Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` """
 *         return self.thisptr.second_two_phase_deriv(Of1, Wrt1, Constant1, Wrt2, Constant2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_two_phase_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_107second_two_phase_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_106second_two_phase_deriv[] = " Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_107second_two_phase_deriv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_Of1;
  CoolProp::parameters __pyx_v_Wrt1;
  CoolProp::parameters __pyx_v_Constant1;
  CoolProp::parameters __pyx_v_Wrt2;
  CoolProp::parameters __pyx_v_Constant2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("second_two_phase_deriv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_Of1,&__pyx_n_s_Wrt1,&__pyx_n_s_Constant1,&__pyx_n_s_Wrt2,&__pyx_n_s_Constant2,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Of1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Wrt1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_two_phase_deriv", 1, 5, 5, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Constant1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_two_phase_deriv", 1, 5, 5, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Wrt2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_two_phase_deriv", 1, 5, 5, 3); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Constant2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("second_two_phase_deriv", 1, 5, 5, 4); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "second_two_phase_deriv") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_Of1 = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Wrt1 = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Constant1 = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Wrt2 = ((CoolProp::parameters)PyInt_AsLong(values[3])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Constant2 = ((CoolProp::parameters)PyInt_AsLong(values[4])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("second_two_phase_deriv", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_two_phase_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_106second_two_phase_deriv(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_Of1, __pyx_v_Wrt1, __pyx_v_Constant1, __pyx_v_Wrt2, __pyx_v_Constant2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_106second_two_phase_deriv(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of1, CoolProp::parameters __pyx_v_Wrt1, CoolProp::parameters __pyx_v_Constant1, CoolProp::parameters __pyx_v_Wrt2, CoolProp::parameters __pyx_v_Constant2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("second_two_phase_deriv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_two_phase_deriv(__pyx_v_self, __pyx_v_Of1, __pyx_v_Wrt1, __pyx_v_Constant1, __pyx_v_Wrt2, __pyx_v_Constant2, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.second_two_phase_deriv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":210
 *         """ Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` """
 *         return self.thisptr.second_two_phase_deriv(Of1, Wrt1, Constant1, Wrt2, Constant2)
 *     cpdef double first_two_phase_deriv_splined(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant, double x_end) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first two-phase derivative using splines - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv_splined` """
 *         return self.thisptr.first_two_phase_deriv_splined(Of, Wrt, Constant, x_end)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_109first_two_phase_deriv_splined(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv_splined(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant, double __pyx_v_x_end, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  double __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_two_phase_deriv_splined", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_first_two_phase_deriv_splined); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_109first_two_phase_deriv_splined)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_Of); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_Wrt); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_Constant); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyFloat_FromDouble(__pyx_v_x_end); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_7 = __pyx_t_1; __pyx_t_8 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_9 = 1;
        }
      }
      __pyx_t_10 = PyTuple_New(4+__pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      if (__pyx_t_8) {
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_8); __Pyx_GIVEREF(__pyx_t_8); __pyx_t_8 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_9, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_9, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_9, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_10, 3+__pyx_t_9, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_11;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":212
 *     cpdef double first_two_phase_deriv_splined(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant, double x_end) except *:
 *         """ Get the first two-phase derivative using splines - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv_splined` """
 *         return self.thisptr.first_two_phase_deriv_splined(Of, Wrt, Constant, x_end)             # <<<<<<<<<<<<<<
 * 
 *     ## ----------------------------------------
 */
  try {
    __pyx_t_11 = __pyx_v_self->thisptr->first_two_phase_deriv_splined(__pyx_v_Of, __pyx_v_Wrt, __pyx_v_Constant, __pyx_v_x_end);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_11;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":210
 *         """ Get the second two-phase derivative - wrapper of C++ function :cpapi:`CoolProp::AbstractState::second_two_phase_deriv` """
 *         return self.thisptr.second_two_phase_deriv(Of1, Wrt1, Constant1, Wrt2, Constant2)
 *     cpdef double first_two_phase_deriv_splined(self, constants_header.parameters Of, constants_header.parameters Wrt, constants_header.parameters Constant, double x_end) except *:             # <<<<<<<<<<<<<<
 *         """ Get the first two-phase derivative using splines - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv_splined` """
 *         return self.thisptr.first_two_phase_deriv_splined(Of, Wrt, Constant, x_end)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_two_phase_deriv_splined", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_109first_two_phase_deriv_splined(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_108first_two_phase_deriv_splined[] = " Get the first two-phase derivative using splines - wrapper of C++ function :cpapi:`CoolProp::AbstractState::first_two_phase_deriv_splined` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_109first_two_phase_deriv_splined(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_Of;
  CoolProp::parameters __pyx_v_Wrt;
  CoolProp::parameters __pyx_v_Constant;
  double __pyx_v_x_end;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("first_two_phase_deriv_splined (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_Of,&__pyx_n_s_Wrt,&__pyx_n_s_Constant,&__pyx_n_s_x_end,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Of)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Wrt)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv_splined", 1, 4, 4, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Constant)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv_splined", 1, 4, 4, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x_end)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv_splined", 1, 4, 4, 3); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "first_two_phase_deriv_splined") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_Of = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Wrt = ((CoolProp::parameters)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Constant = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x_end = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_x_end == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("first_two_phase_deriv_splined", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_two_phase_deriv_splined", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_108first_two_phase_deriv_splined(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_Of, __pyx_v_Wrt, __pyx_v_Constant, __pyx_v_x_end);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_108first_two_phase_deriv_splined(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_Of, CoolProp::parameters __pyx_v_Wrt, CoolProp::parameters __pyx_v_Constant, double __pyx_v_x_end) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("first_two_phase_deriv_splined", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv_splined(__pyx_v_self, __pyx_v_Of, __pyx_v_Wrt, __pyx_v_Constant, __pyx_v_x_end, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.first_two_phase_deriv_splined", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":218
 *     ## ----------------------------------------
 * 
 *     cpdef bint has_melting_line(self) except *:             # <<<<<<<<<<<<<<
 *         """ Check if the fluid has a melting line - True if is does, False otherwise - wrapper of c++ function :cpapi:`CoolProp::AbstractState::has_melting_line` """
 *         return self.thisptr.has_melting_line()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_111has_melting_line(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_has_melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  bool __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("has_melting_line", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_has_melting_line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_111has_melting_line)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":220
 *     cpdef bint has_melting_line(self) except *:
 *         """ Check if the fluid has a melting line - True if is does, False otherwise - wrapper of c++ function :cpapi:`CoolProp::AbstractState::has_melting_line` """
 *         return self.thisptr.has_melting_line()             # <<<<<<<<<<<<<<
 *     cpdef double melting_line(self, int param, int given, double value) except *:
 *         """ Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` """
 */
  try {
    __pyx_t_6 = __pyx_v_self->thisptr->has_melting_line();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_6;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":218
 *     ## ----------------------------------------
 * 
 *     cpdef bint has_melting_line(self) except *:             # <<<<<<<<<<<<<<
 *         """ Check if the fluid has a melting line - True if is does, False otherwise - wrapper of c++ function :cpapi:`CoolProp::AbstractState::has_melting_line` """
 *         return self.thisptr.has_melting_line()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.has_melting_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_111has_melting_line(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_110has_melting_line[] = " Check if the fluid has a melting line - True if is does, False otherwise - wrapper of c++ function :cpapi:`CoolProp::AbstractState::has_melting_line` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_111has_melting_line(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("has_melting_line (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_110has_melting_line(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_110has_melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("has_melting_line", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_has_melting_line(__pyx_v_self, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.has_melting_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":221
 *         """ Check if the fluid has a melting line - True if is does, False otherwise - wrapper of c++ function :cpapi:`CoolProp::AbstractState::has_melting_line` """
 *         return self.thisptr.has_melting_line()
 *     cpdef double melting_line(self, int param, int given, double value) except *:             # <<<<<<<<<<<<<<
 *         """ Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` """
 *         return self.thisptr.melting_line(param, given, value)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_113melting_line(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_v_param, int __pyx_v_given, double __pyx_v_value, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  double __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("melting_line", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_melting_line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_113melting_line)) {
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_param); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_given); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_6 = __pyx_t_1; __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_7) {
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_10;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":223
 *     cpdef double melting_line(self, int param, int given, double value) except *:
 *         """ Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` """
 *         return self.thisptr.melting_line(param, given, value)             # <<<<<<<<<<<<<<
 *     cpdef double saturation_ancillary(self, constants_header.parameters param, int Q, constants_header.parameters given, double value) except *:
 *         """ Get values from the saturation_ancillary - wrapper of c++ function :cpapi:`CoolProp::AbstractState::saturation_ancillary` """
 */
  try {
    __pyx_t_10 = __pyx_v_self->thisptr->melting_line(__pyx_v_param, __pyx_v_given, __pyx_v_value);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_10;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":221
 *         """ Check if the fluid has a melting line - True if is does, False otherwise - wrapper of c++ function :cpapi:`CoolProp::AbstractState::has_melting_line` """
 *         return self.thisptr.has_melting_line()
 *     cpdef double melting_line(self, int param, int given, double value) except *:             # <<<<<<<<<<<<<<
 *         """ Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` """
 *         return self.thisptr.melting_line(param, given, value)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.melting_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_113melting_line(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_112melting_line[] = " Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_113melting_line(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_param;
  int __pyx_v_given;
  double __pyx_v_value;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("melting_line (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_param,&__pyx_n_s_given,&__pyx_n_s_value,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_param)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_given)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("melting_line", 1, 3, 3, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("melting_line", 1, 3, 3, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "melting_line") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_param = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_param == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_given = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_given == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_value = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("melting_line", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.melting_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_112melting_line(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_param, __pyx_v_given, __pyx_v_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_112melting_line(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_v_param, int __pyx_v_given, double __pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("melting_line", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_melting_line(__pyx_v_self, __pyx_v_param, __pyx_v_given, __pyx_v_value, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.melting_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":224
 *         """ Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` """
 *         return self.thisptr.melting_line(param, given, value)
 *     cpdef double saturation_ancillary(self, constants_header.parameters param, int Q, constants_header.parameters given, double value) except *:             # <<<<<<<<<<<<<<
 *         """ Get values from the saturation_ancillary - wrapper of c++ function :cpapi:`CoolProp::AbstractState::saturation_ancillary` """
 *         return self.thisptr.saturation_ancillary(param, Q, given, value)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_115saturation_ancillary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturation_ancillary(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_param, int __pyx_v_Q, CoolProp::parameters __pyx_v_given, double __pyx_v_value, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  double __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturation_ancillary", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_saturation_ancillary); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_115saturation_ancillary)) {
      __pyx_t_3 = PyInt_FromLong(__pyx_v_param); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Q); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_given); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_7 = __pyx_t_1; __pyx_t_8 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_9 = 1;
        }
      }
      __pyx_t_10 = PyTuple_New(4+__pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      if (__pyx_t_8) {
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_8); __Pyx_GIVEREF(__pyx_t_8); __pyx_t_8 = NULL;
      }
      PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_9, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_9, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_9, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_10, 3+__pyx_t_9, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_11;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":226
 *     cpdef double saturation_ancillary(self, constants_header.parameters param, int Q, constants_header.parameters given, double value) except *:
 *         """ Get values from the saturation_ancillary - wrapper of c++ function :cpapi:`CoolProp::AbstractState::saturation_ancillary` """
 *         return self.thisptr.saturation_ancillary(param, Q, given, value)             # <<<<<<<<<<<<<<
 * 
 *     ## ----------------------------------------
 */
  try {
    __pyx_t_11 = __pyx_v_self->thisptr->saturation_ancillary(__pyx_v_param, __pyx_v_Q, __pyx_v_given, __pyx_v_value);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = __pyx_t_11;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":224
 *         """ Get values from the melting line - wrapper of c++ function :cpapi:`CoolProp::AbstractState::melting_line` """
 *         return self.thisptr.melting_line(param, given, value)
 *     cpdef double saturation_ancillary(self, constants_header.parameters param, int Q, constants_header.parameters given, double value) except *:             # <<<<<<<<<<<<<<
 *         """ Get values from the saturation_ancillary - wrapper of c++ function :cpapi:`CoolProp::AbstractState::saturation_ancillary` """
 *         return self.thisptr.saturation_ancillary(param, Q, given, value)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturation_ancillary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_115saturation_ancillary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_114saturation_ancillary[] = " Get values from the saturation_ancillary - wrapper of c++ function :cpapi:`CoolProp::AbstractState::saturation_ancillary` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_115saturation_ancillary(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CoolProp::parameters __pyx_v_param;
  int __pyx_v_Q;
  CoolProp::parameters __pyx_v_given;
  double __pyx_v_value;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("saturation_ancillary (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_param,&__pyx_n_s_Q,&__pyx_n_s_given,&__pyx_n_s_value,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_param)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("saturation_ancillary", 1, 4, 4, 1); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_given)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("saturation_ancillary", 1, 4, 4, 2); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_value)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("saturation_ancillary", 1, 4, 4, 3); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "saturation_ancillary") < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_param = ((CoolProp::parameters)PyInt_AsLong(values[0])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_Q = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_Q == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_given = ((CoolProp::parameters)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_value = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_value == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("saturation_ancillary", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturation_ancillary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_114saturation_ancillary(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), __pyx_v_param, __pyx_v_Q, __pyx_v_given, __pyx_v_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_114saturation_ancillary(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, CoolProp::parameters __pyx_v_param, int __pyx_v_Q, CoolProp::parameters __pyx_v_given, double __pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("saturation_ancillary", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturation_ancillary(__pyx_v_self, __pyx_v_param, __pyx_v_Q, __pyx_v_given, __pyx_v_value, 1); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.saturation_ancillary", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":232
 *     ## ----------------------------------------
 * 
 *     cpdef build_phase_envelope(self, string type):             # <<<<<<<<<<<<<<
 *         """ Build the phase envelope - wrapper of c++ function :cpapi:`CoolProp::AbstractState::build_phase_envelope` """
 *         self.thisptr.build_phase_envelope(type)
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_117build_phase_envelope(PyObject *__pyx_v_self, PyObject *__pyx_arg_type); /*proto*/
static PyObject *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_build_phase_envelope(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::string __pyx_v_type, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build_phase_envelope", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_build_phase_envelope); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_117build_phase_envelope)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__string(__pyx_v_type); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":234
 *     cpdef build_phase_envelope(self, string type):
 *         """ Build the phase envelope - wrapper of c++ function :cpapi:`CoolProp::AbstractState::build_phase_envelope` """
 *         self.thisptr.build_phase_envelope(type)             # <<<<<<<<<<<<<<
 *     cpdef PyPhaseEnvelopeData get_phase_envelope_data(self):
 *         """ Get the phase envelope data - wrapper of c++ function :cpapi:`CoolProp::AbstractState::get_phase_envelope_data` """
 */
  try {
    __pyx_v_self->thisptr->build_phase_envelope(__pyx_v_type);
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":232
 *     ## ----------------------------------------
 * 
 *     cpdef build_phase_envelope(self, string type):             # <<<<<<<<<<<<<<
 *         """ Build the phase envelope - wrapper of c++ function :cpapi:`CoolProp::AbstractState::build_phase_envelope` """
 *         self.thisptr.build_phase_envelope(type)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.build_phase_envelope", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_117build_phase_envelope(PyObject *__pyx_v_self, PyObject *__pyx_arg_type); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_116build_phase_envelope[] = " Build the phase envelope - wrapper of c++ function :cpapi:`CoolProp::AbstractState::build_phase_envelope` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_117build_phase_envelope(PyObject *__pyx_v_self, PyObject *__pyx_arg_type) {
  std::string __pyx_v_type;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build_phase_envelope (wrapper)", 0);
  assert(__pyx_arg_type); {
    __pyx_v_type = __pyx_convert_string_from_py_std__string(__pyx_arg_type); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.build_phase_envelope", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_116build_phase_envelope(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self), ((std::string)__pyx_v_type));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_116build_phase_envelope(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, std::string __pyx_v_type) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("build_phase_envelope", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_build_phase_envelope(__pyx_v_self, __pyx_v_type, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.build_phase_envelope", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "smo/media/CoolProp5/AbstractState.pyx":235
 *         """ Build the phase envelope - wrapper of c++ function :cpapi:`CoolProp::AbstractState::build_phase_envelope` """
 *         self.thisptr.build_phase_envelope(type)
 *     cpdef PyPhaseEnvelopeData get_phase_envelope_data(self):             # <<<<<<<<<<<<<<
 *         """ Get the phase envelope data - wrapper of c++ function :cpapi:`CoolProp::AbstractState::get_phase_envelope_data` """
 *         cdef cAbstractState.PhaseEnvelopeData pe_data = self.thisptr.get_phase_envelope_data()
 */

static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_119get_phase_envelope_data(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_get_phase_envelope_data(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self, int __pyx_skip_dispatch) {
  CoolProp::PhaseEnvelopeData __pyx_v_pe_data;
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_v_pe_out = 0;
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  CoolProp::PhaseEnvelopeData __pyx_t_5;
  size_t __pyx_t_6;
  bool __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_phase_envelope_data", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_phase_envelope_data); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_119get_phase_envelope_data)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_r = ((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "smo/media/CoolProp5/AbstractState.pyx":237
 *     cpdef PyPhaseEnvelopeData get_phase_envelope_data(self):
 *         """ Get the phase envelope data - wrapper of c++ function :cpapi:`CoolProp::AbstractState::get_phase_envelope_data` """
 *         cdef cAbstractState.PhaseEnvelopeData pe_data = self.thisptr.get_phase_envelope_data()             # <<<<<<<<<<<<<<
 *         cdef PyPhaseEnvelopeData pe_out = PyPhaseEnvelopeData()
 *         pe_out.T = pe_data.T
 */
  try {
    __pyx_t_5 = __pyx_v_self->thisptr->get_phase_envelope_data();
  } catch(...) {
    try { throw; } catch(const std::exception& exn) { PyErr_SetString(__pyx_builtin_ValueError, exn.what()); } catch(...) { PyErr_SetNone(__pyx_builtin_ValueError); }
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_pe_data = __pyx_t_5;

  /* "smo/media/CoolProp5/AbstractState.pyx":238
 *         """ Get the phase envelope data - wrapper of c++ function :cpapi:`CoolProp::AbstractState::get_phase_envelope_data` """
 *         cdef cAbstractState.PhaseEnvelopeData pe_data = self.thisptr.get_phase_envelope_data()
 *         cdef PyPhaseEnvelopeData pe_out = PyPhaseEnvelopeData()             # <<<<<<<<<<<<<<
 *         pe_out.T = pe_data.T
 *         pe_out.p = pe_data.p
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData)), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_pe_out = ((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":239
 *         cdef cAbstractState.PhaseEnvelopeData pe_data = self.thisptr.get_phase_envelope_data()
 *         cdef PyPhaseEnvelopeData pe_out = PyPhaseEnvelopeData()
 *         pe_out.T = pe_data.T             # <<<<<<<<<<<<<<
 *         pe_out.p = pe_data.p
 *         pe_out.Q = pe_data.Q
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->T);
  __Pyx_DECREF(__pyx_v_pe_out->T);
  __pyx_v_pe_out->T = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":240
 *         cdef PyPhaseEnvelopeData pe_out = PyPhaseEnvelopeData()
 *         pe_out.T = pe_data.T
 *         pe_out.p = pe_data.p             # <<<<<<<<<<<<<<
 *         pe_out.Q = pe_data.Q
 *         pe_out.rhomolar_liq = pe_data.rhomolar_liq
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->p);
  __Pyx_DECREF(__pyx_v_pe_out->p);
  __pyx_v_pe_out->p = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":241
 *         pe_out.T = pe_data.T
 *         pe_out.p = pe_data.p
 *         pe_out.Q = pe_data.Q             # <<<<<<<<<<<<<<
 *         pe_out.rhomolar_liq = pe_data.rhomolar_liq
 *         pe_out.rhomolar_vap = pe_data.rhomolar_vap
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.Q); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->Q);
  __Pyx_DECREF(__pyx_v_pe_out->Q);
  __pyx_v_pe_out->Q = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":242
 *         pe_out.p = pe_data.p
 *         pe_out.Q = pe_data.Q
 *         pe_out.rhomolar_liq = pe_data.rhomolar_liq             # <<<<<<<<<<<<<<
 *         pe_out.rhomolar_vap = pe_data.rhomolar_vap
 *         pe_out.hmolar_liq = pe_data.hmolar_liq
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.rhomolar_liq); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->rhomolar_liq);
  __Pyx_DECREF(__pyx_v_pe_out->rhomolar_liq);
  __pyx_v_pe_out->rhomolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":243
 *         pe_out.Q = pe_data.Q
 *         pe_out.rhomolar_liq = pe_data.rhomolar_liq
 *         pe_out.rhomolar_vap = pe_data.rhomolar_vap             # <<<<<<<<<<<<<<
 *         pe_out.hmolar_liq = pe_data.hmolar_liq
 *         pe_out.hmolar_vap = pe_data.hmolar_vap
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.rhomolar_vap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->rhomolar_vap);
  __Pyx_DECREF(__pyx_v_pe_out->rhomolar_vap);
  __pyx_v_pe_out->rhomolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":244
 *         pe_out.rhomolar_liq = pe_data.rhomolar_liq
 *         pe_out.rhomolar_vap = pe_data.rhomolar_vap
 *         pe_out.hmolar_liq = pe_data.hmolar_liq             # <<<<<<<<<<<<<<
 *         pe_out.hmolar_vap = pe_data.hmolar_vap
 *         pe_out.smolar_liq = pe_data.smolar_liq
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.hmolar_liq); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->hmolar_liq);
  __Pyx_DECREF(__pyx_v_pe_out->hmolar_liq);
  __pyx_v_pe_out->hmolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":245
 *         pe_out.rhomolar_vap = pe_data.rhomolar_vap
 *         pe_out.hmolar_liq = pe_data.hmolar_liq
 *         pe_out.hmolar_vap = pe_data.hmolar_vap             # <<<<<<<<<<<<<<
 *         pe_out.smolar_liq = pe_data.smolar_liq
 *         pe_out.smolar_vap = pe_data.smolar_vap
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.hmolar_vap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->hmolar_vap);
  __Pyx_DECREF(__pyx_v_pe_out->hmolar_vap);
  __pyx_v_pe_out->hmolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":246
 *         pe_out.hmolar_liq = pe_data.hmolar_liq
 *         pe_out.hmolar_vap = pe_data.hmolar_vap
 *         pe_out.smolar_liq = pe_data.smolar_liq             # <<<<<<<<<<<<<<
 *         pe_out.smolar_vap = pe_data.smolar_vap
 *         pe_out.iTsat_max = pe_data.iTsat_max
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.smolar_liq); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->smolar_liq);
  __Pyx_DECREF(__pyx_v_pe_out->smolar_liq);
  __pyx_v_pe_out->smolar_liq = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":247
 *         pe_out.hmolar_vap = pe_data.hmolar_vap
 *         pe_out.smolar_liq = pe_data.smolar_liq
 *         pe_out.smolar_vap = pe_data.smolar_vap             # <<<<<<<<<<<<<<
 *         pe_out.iTsat_max = pe_data.iTsat_max
 *         pe_out.ipsat_max = pe_data.ipsat_max
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_long__double(__pyx_v_pe_data.smolar_vap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_pe_out->smolar_vap);
  __Pyx_DECREF(__pyx_v_pe_out->smolar_vap);
  __pyx_v_pe_out->smolar_vap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "smo/media/CoolProp5/AbstractState.pyx":248
 *         pe_out.smolar_liq = pe_data.smolar_liq
 *         pe_out.smolar_vap = pe_data.smolar_vap
 *         pe_out.iTsat_max = pe_data.iTsat_max             # <<<<<<<<<<<<<<
 *         pe_out.ipsat_max = pe_data.ipsat_max
 *         pe_out.TypeI = pe_data.TypeI
 */
  __pyx_t_6 = __pyx_v_pe_data.iTsat_max;
  __pyx_v_pe_out->iTsat_max = __pyx_t_6;

  /* "smo/media/CoolProp5/AbstractState.pyx":249
 *         pe_out.smolar_vap = pe_data.smolar_vap
 *         pe_out.iTsat_max = pe_data.iTsat_max
 *         pe_out.ipsat_max = pe_data.ipsat_max             # <<<<<<<<<<<<<<
 *         pe_out.TypeI = pe_data.TypeI
 *         return pe_out
 */
  __pyx_t_6 = __pyx_v_pe_data.ipsat_max;
  __pyx_v_pe_out->ipsat_max = __pyx_t_6;

  /* "smo/media/CoolProp5/AbstractState.pyx":250
 *         pe_out.iTsat_max = pe_data.iTsat_max
 *         pe_out.ipsat_max = pe_data.ipsat_max
 *         pe_out.TypeI = pe_data.TypeI             # <<<<<<<<<<<<<<
 *         return pe_out
 * 
 */
  __pyx_t_7 = __pyx_v_pe_data.TypeI;
  __pyx_v_pe_out->TypeI = __pyx_t_7;

  /* "smo/media/CoolProp5/AbstractState.pyx":251
 *         pe_out.ipsat_max = pe_data.ipsat_max
 *         pe_out.TypeI = pe_data.TypeI
 *         return pe_out             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_pe_out));
  __pyx_r = __pyx_v_pe_out;
  goto __pyx_L0;

  /* "smo/media/CoolProp5/AbstractState.pyx":235
 *         """ Build the phase envelope - wrapper of c++ function :cpapi:`CoolProp::AbstractState::build_phase_envelope` """
 *         self.thisptr.build_phase_envelope(type)
 *     cpdef PyPhaseEnvelopeData get_phase_envelope_data(self):             # <<<<<<<<<<<<<<
 *         """ Get the phase envelope data - wrapper of c++ function :cpapi:`CoolProp::AbstractState::get_phase_envelope_data` """
 *         cdef cAbstractState.PhaseEnvelopeData pe_data = self.thisptr.get_phase_envelope_data()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.get_phase_envelope_data", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pe_out);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_119get_phase_envelope_data(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_118get_phase_envelope_data[] = " Get the phase envelope data - wrapper of c++ function :cpapi:`CoolProp::AbstractState::get_phase_envelope_data` ";
static PyObject *__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_119get_phase_envelope_data(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_phase_envelope_data (wrapper)", 0);
  __pyx_r = __pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_118get_phase_envelope_data(((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_118get_phase_envelope_data(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_phase_envelope_data", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_get_phase_envelope_data(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("smo.media.CoolProp5.AbstractState.AbstractState.get_phase_envelope_data", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_long__double")
 * cdef object __pyx_convert_vector_to_py_long__double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_long__double(const std::vector<long double>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_long__double", 0);

  /* "vector.to_py":79
 * @cname("__pyx_convert_vector_to_py_long__double")
 * cdef object __pyx_convert_vector_to_py_long__double(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_long__double")
 * cdef object __pyx_convert_vector_to_py_long__double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_long__double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":60
 * 
 * @cname("__pyx_convert_vector_from_py_long__double")
 * cdef vector[X] __pyx_convert_vector_from_py_long__double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<long double>  __pyx_convert_vector_from_py_long__double(PyObject *__pyx_v_o) {
  std::vector<long double>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<long double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  long double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_long__double", 0);

  /* "vector.from_py":62
 * cdef vector[X] __pyx_convert_vector_from_py_long__double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[3]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":63
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely(__pyx_t_5 == -1.0 && PyErr_Occurred())) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_v.push_back(__pyx_t_5);

    /* "vector.from_py":62
 * cdef vector[X] __pyx_convert_vector_from_py_long__double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":64
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":60
 * 
 * @cname("__pyx_convert_vector_from_py_long__double")
 * cdef vector[X] __pyx_convert_vector_from_py_long__double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_long__double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__string")
 * cdef string __pyx_convert_string_from_py_std__string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[4]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__string")
 * cdef string __pyx_convert_string_from_py_std__string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":60
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *__pyx_v_o) {
  std::vector<double>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_double", 0);

  /* "vector.from_py":62
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[5]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":63
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely(__pyx_t_5 == -1.0 && PyErr_Occurred())) {__pyx_filename = __pyx_f[5]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_v.push_back(__pyx_t_5);

    /* "vector.from_py":62
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":64
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":60
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":33
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__string", 0);

  /* "string.to_py":34
 * @cname("__pyx_convert_PyObject_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":33
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":41
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__string", 0);

  /* "string.to_py":42
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":41
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":45
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__string", 0);

  /* "string.to_py":46
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[6]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":45
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_double(const std::vector<double>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 0);

  /* "vector.to_py":79
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[7]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)o);
  p->T = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->p = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->lnT = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->lnp = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->rhomolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->rhomolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->lnrhomolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->lnrhomolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->hmolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->hmolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->smolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->smolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->Q = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData(PyObject *o) {
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *p = (struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->T);
  Py_CLEAR(p->p);
  Py_CLEAR(p->lnT);
  Py_CLEAR(p->lnp);
  Py_CLEAR(p->rhomolar_liq);
  Py_CLEAR(p->rhomolar_vap);
  Py_CLEAR(p->lnrhomolar_liq);
  Py_CLEAR(p->lnrhomolar_vap);
  Py_CLEAR(p->hmolar_liq);
  Py_CLEAR(p->hmolar_vap);
  Py_CLEAR(p->smolar_liq);
  Py_CLEAR(p->smolar_vap);
  Py_CLEAR(p->Q);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *p = (struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)o;
  if (p->T) {
    e = (*v)(p->T, a); if (e) return e;
  }
  if (p->p) {
    e = (*v)(p->p, a); if (e) return e;
  }
  if (p->lnT) {
    e = (*v)(p->lnT, a); if (e) return e;
  }
  if (p->lnp) {
    e = (*v)(p->lnp, a); if (e) return e;
  }
  if (p->rhomolar_liq) {
    e = (*v)(p->rhomolar_liq, a); if (e) return e;
  }
  if (p->rhomolar_vap) {
    e = (*v)(p->rhomolar_vap, a); if (e) return e;
  }
  if (p->lnrhomolar_liq) {
    e = (*v)(p->lnrhomolar_liq, a); if (e) return e;
  }
  if (p->lnrhomolar_vap) {
    e = (*v)(p->lnrhomolar_vap, a); if (e) return e;
  }
  if (p->hmolar_liq) {
    e = (*v)(p->hmolar_liq, a); if (e) return e;
  }
  if (p->hmolar_vap) {
    e = (*v)(p->hmolar_vap, a); if (e) return e;
  }
  if (p->smolar_liq) {
    e = (*v)(p->smolar_liq, a); if (e) return e;
  }
  if (p->smolar_vap) {
    e = (*v)(p->smolar_vap, a); if (e) return e;
  }
  if (p->Q) {
    e = (*v)(p->Q, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *p = (struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *)o;
  tmp = ((PyObject*)p->T);
  p->T = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->p);
  p->p = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lnT);
  p->lnT = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lnp);
  p->lnp = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rhomolar_liq);
  p->rhomolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rhomolar_vap);
  p->rhomolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lnrhomolar_liq);
  p->lnrhomolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lnrhomolar_vap);
  p->lnrhomolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hmolar_liq);
  p->hmolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hmolar_vap);
  p->hmolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->smolar_liq);
  p->smolar_liq = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->smolar_vap);
  p->smolar_vap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->Q);
  p->Q = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_TypeI(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_TypeI(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5TypeI_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_iTsat_max(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_iTsat_max(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9iTsat_max_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_ipsat_max(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_ipsat_max(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_9ipsat_max_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_icrit(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_icrit(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_5icrit_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_T(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1T_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_p(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_p(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1p_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnT(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnT_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnp(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_3lnp_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_liq(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_liq(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_liq_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_vap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_vap(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_12rhomolar_vap_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_liq(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_liq(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_liq_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_vap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_vap(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_14lnrhomolar_vap_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_liq(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_liq(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_liq_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_vap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_vap(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10hmolar_vap_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_liq(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_liq(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_liq_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_vap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_vap(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_10smolar_vap_5__del__(o);
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_Q(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_Q(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_3__set__(o, v);
  }
  else {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_1Q_5__del__(o);
  }
}

static struct PyGetSetDef __pyx_getsets_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData[] = {
  {(char *)"TypeI", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_TypeI, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_TypeI, 0, 0},
  {(char *)"iTsat_max", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_iTsat_max, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_iTsat_max, 0, 0},
  {(char *)"ipsat_max", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_ipsat_max, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_ipsat_max, 0, 0},
  {(char *)"icrit", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_icrit, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_icrit, 0, 0},
  {(char *)"T", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_T, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_T, 0, 0},
  {(char *)"p", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_p, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_p, 0, 0},
  {(char *)"lnT", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnT, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnT, 0, 0},
  {(char *)"lnp", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnp, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnp, 0, 0},
  {(char *)"rhomolar_liq", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_liq, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_liq, 0, 0},
  {(char *)"rhomolar_vap", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_vap, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_rhomolar_vap, 0, 0},
  {(char *)"lnrhomolar_liq", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_liq, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_liq, 0, 0},
  {(char *)"lnrhomolar_vap", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_vap, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_lnrhomolar_vap, 0, 0},
  {(char *)"hmolar_liq", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_liq, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_liq, 0, 0},
  {(char *)"hmolar_vap", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_vap, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_hmolar_vap, 0, 0},
  {(char *)"smolar_liq", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_liq, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_liq, 0, 0},
  {(char *)"smolar_vap", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_vap, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_smolar_vap, 0, 0},
  {(char *)"Q", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_Q, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_19PyPhaseEnvelopeData_Q, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp5.AbstractState.PyPhaseEnvelopeData", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData, /*tp_traverse*/
  __pyx_tp_clear_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)o);
  new((void*)&(p->x)) std::vector<long double> ();
  new((void*)&(p->y)) std::vector<long double> ();
  return o;
}

static void __pyx_tp_dealloc_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure(PyObject *o) {
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *p = (struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(&p->x);
  __Pyx_call_destructor(&p->y);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_T(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1T_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_p(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_p(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1p_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_8rhomolar_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_hmolar(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_hmolar(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6hmolar_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_smolar(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_smolar(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_6smolar_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_liq(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_liq(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_liq_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_vap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_vap(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_12rhomolar_vap_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_1__get__(o);
}

static int __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_1y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static struct PyGetSetDef __pyx_getsets_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure[] = {
  {(char *)"T", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_T, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_T, 0, 0},
  {(char *)"p", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_p, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_p, 0, 0},
  {(char *)"rhomolar", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar, 0, 0},
  {(char *)"hmolar", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_hmolar, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_hmolar, 0, 0},
  {(char *)"smolar", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_smolar, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_smolar, 0, 0},
  {(char *)"rhomolar_liq", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_liq, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_liq, 0, 0},
  {(char *)"rhomolar_vap", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_vap, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_rhomolar_vap, 0, 0},
  {(char *)"x", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_x, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_x, 0, 0},
  {(char *)"y", __pyx_getprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_y, __pyx_setprop_3smo_5media_9CoolProp5_13AbstractState_18PyGuessesStructure_y, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp5.AbstractState.PyGuessesStructure", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3smo_5media_9CoolProp5_13AbstractState_AbstractState __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState;

static PyObject *__pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_AbstractState(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *)o);
  p->__pyx_vtab = __pyx_vtabptr_3smo_5media_9CoolProp5_13AbstractState_AbstractState;
  if (unlikely(__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3smo_5media_9CoolProp5_13AbstractState_AbstractState(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3smo_5media_9CoolProp5_13AbstractState_AbstractState[] = {
  {"name", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_5name, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_4name},
  {"phase", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_7phase, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_6phase},
  {"specify_phase", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_9specify_phase, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_8specify_phase},
  {"unspecify_phase", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_11unspecify_phase, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_10unspecify_phase},
  {"update", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_13update, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_12update},
  {"update_with_guesses", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_15update_with_guesses, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_14update_with_guesses},
  {"set_mole_fractions", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_17set_mole_fractions, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_16set_mole_fractions},
  {"set_mass_fractions", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_19set_mass_fractions, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_18set_mass_fractions},
  {"set_volu_fractions", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_21set_volu_fractions, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_20set_volu_fractions},
  {"Tmin", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_23Tmin, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_22Tmin},
  {"Tmax", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_25Tmax, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_24Tmax},
  {"pmax", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_27pmax, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_26pmax},
  {"Ttriple", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_29Ttriple, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_28Ttriple},
  {"keyed_output", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_31keyed_output, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_30keyed_output},
  {"trivial_keyed_output", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_33trivial_keyed_output, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_32trivial_keyed_output},
  {"saturated_liquid_keyed_output", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_35saturated_liquid_keyed_output, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_34saturated_liquid_keyed_output},
  {"saturated_vapor_keyed_output", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_37saturated_vapor_keyed_output, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_36saturated_vapor_keyed_output},
  {"T", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_39T, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_38T},
  {"p", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_41p, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_40p},
  {"Q", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_43Q, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_42Q},
  {"rhomolar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_45rhomolar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_44rhomolar},
  {"rhomass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_47rhomass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_46rhomass},
  {"hmolar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_49hmolar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_48hmolar},
  {"hmass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_51hmass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_50hmass},
  {"umolar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_53umolar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_52umolar},
  {"umass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_55umass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_54umass},
  {"smolar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_57smolar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_56smolar},
  {"smass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_59smass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_58smass},
  {"cpmolar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_61cpmolar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_60cpmolar},
  {"cpmass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_63cpmass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_62cpmass},
  {"cp0molar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_65cp0molar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_64cp0molar},
  {"cp0mass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_67cp0mass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_66cp0mass},
  {"cvmolar", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_69cvmolar, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_68cvmolar},
  {"cvmass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_71cvmass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_70cvmass},
  {"tau", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_73tau, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_72tau},
  {"delta", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_75delta, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_74delta},
  {"speed_sound", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_77speed_sound, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_76speed_sound},
  {"molar_mass", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_79molar_mass, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_78molar_mass},
  {"acentric_factor", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_81acentric_factor, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_80acentric_factor},
  {"gas_constant", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_83gas_constant, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_82gas_constant},
  {"viscosity", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_85viscosity, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_84viscosity},
  {"conductivity", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_87conductivity, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_86conductivity},
  {"surface_tension", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_89surface_tension, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_88surface_tension},
  {"Prandtl", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_91Prandtl, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_90Prandtl},
  {"mole_fractions_liquid", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_93mole_fractions_liquid, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_92mole_fractions_liquid},
  {"mole_fractions_vapor", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_95mole_fractions_vapor, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_94mole_fractions_vapor},
  {"first_partial_deriv", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_97first_partial_deriv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_96first_partial_deriv},
  {"second_partial_deriv", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_99second_partial_deriv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_98second_partial_deriv},
  {"first_saturation_deriv", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_101first_saturation_deriv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_100first_saturation_deriv},
  {"second_saturation_deriv", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_103second_saturation_deriv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_102second_saturation_deriv},
  {"first_two_phase_deriv", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_105first_two_phase_deriv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_104first_two_phase_deriv},
  {"second_two_phase_deriv", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_107second_two_phase_deriv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_106second_two_phase_deriv},
  {"first_two_phase_deriv_splined", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_109first_two_phase_deriv_splined, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_108first_two_phase_deriv_splined},
  {"has_melting_line", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_111has_melting_line, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_110has_melting_line},
  {"melting_line", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_113melting_line, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_112melting_line},
  {"saturation_ancillary", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_115saturation_ancillary, METH_VARARGS|METH_KEYWORDS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_114saturation_ancillary},
  {"build_phase_envelope", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_117build_phase_envelope, METH_O, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_116build_phase_envelope},
  {"get_phase_envelope_data", (PyCFunction)__pyx_pw_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_119get_phase_envelope_data, METH_NOARGS, __pyx_doc_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_118get_phase_envelope_data},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3smo_5media_9CoolProp5_13AbstractState_AbstractState = {
  PyVarObject_HEAD_INIT(0, 0)
  "smo.media.CoolProp5.AbstractState.AbstractState", /*tp_name*/
  sizeof(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3smo_5media_9CoolProp5_13AbstractState_AbstractState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    This class is a one-to-one python wrapper of the :cpapi:`AbstractState` class\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3smo_5media_9CoolProp5_13AbstractState_AbstractState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3smo_5media_9CoolProp5_13AbstractState_AbstractState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "AbstractState",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_CONSTANT, __pyx_k_CONSTANT, sizeof(__pyx_k_CONSTANT), 0, 0, 1, 1},
  {&__pyx_n_s_CONSTANT1, __pyx_k_CONSTANT1, sizeof(__pyx_k_CONSTANT1), 0, 0, 1, 1},
  {&__pyx_n_s_CONSTANT2, __pyx_k_CONSTANT2, sizeof(__pyx_k_CONSTANT2), 0, 0, 1, 1},
  {&__pyx_n_s_Constant, __pyx_k_Constant, sizeof(__pyx_k_Constant), 0, 0, 1, 1},
  {&__pyx_n_s_Constant1, __pyx_k_Constant1, sizeof(__pyx_k_Constant1), 0, 0, 1, 1},
  {&__pyx_n_s_Constant2, __pyx_k_Constant2, sizeof(__pyx_k_Constant2), 0, 0, 1, 1},
  {&__pyx_n_s_OF, __pyx_k_OF, sizeof(__pyx_k_OF), 0, 0, 1, 1},
  {&__pyx_n_s_OF1, __pyx_k_OF1, sizeof(__pyx_k_OF1), 0, 0, 1, 1},
  {&__pyx_n_s_OF2, __pyx_k_OF2, sizeof(__pyx_k_OF2), 0, 0, 1, 1},
  {&__pyx_n_s_Of, __pyx_k_Of, sizeof(__pyx_k_Of), 0, 0, 1, 1},
  {&__pyx_n_s_Of1, __pyx_k_Of1, sizeof(__pyx_k_Of1), 0, 0, 1, 1},
  {&__pyx_n_s_Prandtl, __pyx_k_Prandtl, sizeof(__pyx_k_Prandtl), 0, 0, 1, 1},
  {&__pyx_n_s_Q, __pyx_k_Q, sizeof(__pyx_k_Q), 0, 0, 1, 1},
  {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
  {&__pyx_n_s_Tmax, __pyx_k_Tmax, sizeof(__pyx_k_Tmax), 0, 0, 1, 1},
  {&__pyx_n_s_Tmin, __pyx_k_Tmin, sizeof(__pyx_k_Tmin), 0, 0, 1, 1},
  {&__pyx_n_s_Ttriple, __pyx_k_Ttriple, sizeof(__pyx_k_Ttriple), 0, 0, 1, 1},
  {&__pyx_n_s_Value1, __pyx_k_Value1, sizeof(__pyx_k_Value1), 0, 0, 1, 1},
  {&__pyx_n_s_Value2, __pyx_k_Value2, sizeof(__pyx_k_Value2), 0, 0, 1, 1},
  {&__pyx_n_s_WRT, __pyx_k_WRT, sizeof(__pyx_k_WRT), 0, 0, 1, 1},
  {&__pyx_n_s_WRT1, __pyx_k_WRT1, sizeof(__pyx_k_WRT1), 0, 0, 1, 1},
  {&__pyx_n_s_WRT2, __pyx_k_WRT2, sizeof(__pyx_k_WRT2), 0, 0, 1, 1},
  {&__pyx_n_s_Wrt, __pyx_k_Wrt, sizeof(__pyx_k_Wrt), 0, 0, 1, 1},
  {&__pyx_n_s_Wrt1, __pyx_k_Wrt1, sizeof(__pyx_k_Wrt1), 0, 0, 1, 1},
  {&__pyx_n_s_Wrt2, __pyx_k_Wrt2, sizeof(__pyx_k_Wrt2), 0, 0, 1, 1},
  {&__pyx_n_s_acentric_factor, __pyx_k_acentric_factor, sizeof(__pyx_k_acentric_factor), 0, 0, 1, 1},
  {&__pyx_n_s_backend, __pyx_k_backend, sizeof(__pyx_k_backend), 0, 0, 1, 1},
  {&__pyx_n_s_build_phase_envelope, __pyx_k_build_phase_envelope, sizeof(__pyx_k_build_phase_envelope), 0, 0, 1, 1},
  {&__pyx_n_s_conductivity, __pyx_k_conductivity, sizeof(__pyx_k_conductivity), 0, 0, 1, 1},
  {&__pyx_n_s_cp0mass, __pyx_k_cp0mass, sizeof(__pyx_k_cp0mass), 0, 0, 1, 1},
  {&__pyx_n_s_cp0molar, __pyx_k_cp0molar, sizeof(__pyx_k_cp0molar), 0, 0, 1, 1},
  {&__pyx_n_s_cpmass, __pyx_k_cpmass, sizeof(__pyx_k_cpmass), 0, 0, 1, 1},
  {&__pyx_n_s_cpmolar, __pyx_k_cpmolar, sizeof(__pyx_k_cpmolar), 0, 0, 1, 1},
  {&__pyx_n_s_cvmass, __pyx_k_cvmass, sizeof(__pyx_k_cvmass), 0, 0, 1, 1},
  {&__pyx_n_s_cvmolar, __pyx_k_cvmolar, sizeof(__pyx_k_cvmolar), 0, 0, 1, 1},
  {&__pyx_n_s_delta, __pyx_k_delta, sizeof(__pyx_k_delta), 0, 0, 1, 1},
  {&__pyx_n_s_first_partial_deriv, __pyx_k_first_partial_deriv, sizeof(__pyx_k_first_partial_deriv), 0, 0, 1, 1},
  {&__pyx_n_s_first_saturation_deriv, __pyx_k_first_saturation_deriv, sizeof(__pyx_k_first_saturation_deriv), 0, 0, 1, 1},
  {&__pyx_n_s_first_two_phase_deriv, __pyx_k_first_two_phase_deriv, sizeof(__pyx_k_first_two_phase_deriv), 0, 0, 1, 1},
  {&__pyx_n_s_first_two_phase_deriv_splined, __pyx_k_first_two_phase_deriv_splined, sizeof(__pyx_k_first_two_phase_deriv_splined), 0, 0, 1, 1},
  {&__pyx_n_s_fluid, __pyx_k_fluid, sizeof(__pyx_k_fluid), 0, 0, 1, 1},
  {&__pyx_n_s_gas_constant, __pyx_k_gas_constant, sizeof(__pyx_k_gas_constant), 0, 0, 1, 1},
  {&__pyx_n_s_get_phase_envelope_data, __pyx_k_get_phase_envelope_data, sizeof(__pyx_k_get_phase_envelope_data), 0, 0, 1, 1},
  {&__pyx_n_s_given, __pyx_k_given, sizeof(__pyx_k_given), 0, 0, 1, 1},
  {&__pyx_n_s_guesses, __pyx_k_guesses, sizeof(__pyx_k_guesses), 0, 0, 1, 1},
  {&__pyx_n_s_has_melting_line, __pyx_k_has_melting_line, sizeof(__pyx_k_has_melting_line), 0, 0, 1, 1},
  {&__pyx_n_s_hmass, __pyx_k_hmass, sizeof(__pyx_k_hmass), 0, 0, 1, 1},
  {&__pyx_n_s_hmolar, __pyx_k_hmolar, sizeof(__pyx_k_hmolar), 0, 0, 1, 1},
  {&__pyx_n_s_ipair, __pyx_k_ipair, sizeof(__pyx_k_ipair), 0, 0, 1, 1},
  {&__pyx_n_s_keyed_output, __pyx_k_keyed_output, sizeof(__pyx_k_keyed_output), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_melting_line, __pyx_k_melting_line, sizeof(__pyx_k_melting_line), 0, 0, 1, 1},
  {&__pyx_n_s_molar_mass, __pyx_k_molar_mass, sizeof(__pyx_k_molar_mass), 0, 0, 1, 1},
  {&__pyx_n_s_mole_fractions_liquid, __pyx_k_mole_fractions_liquid, sizeof(__pyx_k_mole_fractions_liquid), 0, 0, 1, 1},
  {&__pyx_n_s_mole_fractions_vapor, __pyx_k_mole_fractions_vapor, sizeof(__pyx_k_mole_fractions_vapor), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_param, __pyx_k_param, sizeof(__pyx_k_param), 0, 0, 1, 1},
  {&__pyx_n_s_phase, __pyx_k_phase, sizeof(__pyx_k_phase), 0, 0, 1, 1},
  {&__pyx_n_s_pmax, __pyx_k_pmax, sizeof(__pyx_k_pmax), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rhomass, __pyx_k_rhomass, sizeof(__pyx_k_rhomass), 0, 0, 1, 1},
  {&__pyx_n_s_rhomolar, __pyx_k_rhomolar, sizeof(__pyx_k_rhomolar), 0, 0, 1, 1},
  {&__pyx_n_s_saturated_liquid_keyed_output, __pyx_k_saturated_liquid_keyed_output, sizeof(__pyx_k_saturated_liquid_keyed_output), 0, 0, 1, 1},
  {&__pyx_n_s_saturated_vapor_keyed_output, __pyx_k_saturated_vapor_keyed_output, sizeof(__pyx_k_saturated_vapor_keyed_output), 0, 0, 1, 1},
  {&__pyx_n_s_saturation_ancillary, __pyx_k_saturation_ancillary, sizeof(__pyx_k_saturation_ancillary), 0, 0, 1, 1},
  {&__pyx_n_s_second_partial_deriv, __pyx_k_second_partial_deriv, sizeof(__pyx_k_second_partial_deriv), 0, 0, 1, 1},
  {&__pyx_n_s_second_saturation_deriv, __pyx_k_second_saturation_deriv, sizeof(__pyx_k_second_saturation_deriv), 0, 0, 1, 1},
  {&__pyx_n_s_second_two_phase_deriv, __pyx_k_second_two_phase_deriv, sizeof(__pyx_k_second_two_phase_deriv), 0, 0, 1, 1},
  {&__pyx_n_s_set_mass_fractions, __pyx_k_set_mass_fractions, sizeof(__pyx_k_set_mass_fractions), 0, 0, 1, 1},
  {&__pyx_n_s_set_mole_fractions, __pyx_k_set_mole_fractions, sizeof(__pyx_k_set_mole_fractions), 0, 0, 1, 1},
  {&__pyx_n_s_set_volu_fractions, __pyx_k_set_volu_fractions, sizeof(__pyx_k_set_volu_fractions), 0, 0, 1, 1},
  {&__pyx_n_s_smass, __pyx_k_smass, sizeof(__pyx_k_smass), 0, 0, 1, 1},
  {&__pyx_n_s_smolar, __pyx_k_smolar, sizeof(__pyx_k_smolar), 0, 0, 1, 1},
  {&__pyx_n_s_specify_phase, __pyx_k_specify_phase, sizeof(__pyx_k_specify_phase), 0, 0, 1, 1},
  {&__pyx_n_s_speed_sound, __pyx_k_speed_sound, sizeof(__pyx_k_speed_sound), 0, 0, 1, 1},
  {&__pyx_n_s_surface_tension, __pyx_k_surface_tension, sizeof(__pyx_k_surface_tension), 0, 0, 1, 1},
  {&__pyx_n_s_tau, __pyx_k_tau, sizeof(__pyx_k_tau), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_trivial_keyed_output, __pyx_k_trivial_keyed_output, sizeof(__pyx_k_trivial_keyed_output), 0, 0, 1, 1},
  {&__pyx_n_s_umass, __pyx_k_umass, sizeof(__pyx_k_umass), 0, 0, 1, 1},
  {&__pyx_n_s_umolar, __pyx_k_umolar, sizeof(__pyx_k_umolar), 0, 0, 1, 1},
  {&__pyx_n_s_unspecify_phase, __pyx_k_unspecify_phase, sizeof(__pyx_k_unspecify_phase), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_update_with_guesses, __pyx_k_update_with_guesses, sizeof(__pyx_k_update_with_guesses), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_viscosity, __pyx_k_viscosity, sizeof(__pyx_k_viscosity), 0, 0, 1, 1},
  {&__pyx_n_s_x_end, __pyx_k_x_end, sizeof(__pyx_k_x_end), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initAbstractState(void); /*proto*/
PyMODINIT_FUNC initAbstractState(void)
#else
PyMODINIT_FUNC PyInit_AbstractState(void); /*proto*/
PyMODINIT_FUNC PyInit_AbstractState(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_AbstractState(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("AbstractState", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_smo__media__CoolProp5__AbstractState) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "smo.media.CoolProp5.AbstractState")) {
      if (unlikely(PyDict_SetItemString(modules, "smo.media.CoolProp5.AbstractState", __pyx_m) < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PyPhaseEnvelopeData", (PyObject *)&__pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData = &__pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData;
  if (PyType_Ready(&__pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PyGuessesStructure", (PyObject *)&__pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 13; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure = &__pyx_type_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure;
  __pyx_vtabptr_3smo_5media_9CoolProp5_13AbstractState_AbstractState = &__pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.update = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::input_pairs, double, double, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.update_with_guesses = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::input_pairs, double, double, struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyGuessesStructure *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_update_with_guesses;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.set_mole_fractions = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::vector<double> , int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mole_fractions;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.set_mass_fractions = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::vector<double> , int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_mass_fractions;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.set_volu_fractions = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::vector<double> , int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_set_volu_fractions;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.name = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_name;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.phase = (CoolProp::phases (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_phase;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.specify_phase = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::phases, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_specify_phase;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.unspecify_phase = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_unspecify_phase;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.Tmin = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmin;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.Tmax = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Tmax;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.pmax = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_pmax;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.Ttriple = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Ttriple;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.T = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_T;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.p = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_p;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.Q = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Q;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.rhomolar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomolar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.hmolar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmolar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.smolar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smolar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.umolar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umolar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.cpmolar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmolar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.cp0molar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0molar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.cvmolar = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmolar;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.rhomass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_rhomass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.hmass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_hmass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.smass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_smass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.umass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_umass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.cpmass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cpmass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.cp0mass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cp0mass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.cvmass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_cvmass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.speed_sound = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_speed_sound;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.gas_constant = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_gas_constant;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.tau = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_tau;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.delta = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_delta;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.viscosity = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_viscosity;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.conductivity = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_conductivity;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.surface_tension = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_surface_tension;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.Prandtl = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_Prandtl;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.molar_mass = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_molar_mass;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.acentric_factor = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_acentric_factor;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.keyed_output = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_keyed_output;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.trivial_keyed_output = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_trivial_keyed_output;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.saturated_liquid_keyed_output = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_liquid_keyed_output;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.saturated_vapor_keyed_output = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturated_vapor_keyed_output;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.first_partial_deriv = (long double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_partial_deriv;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.second_partial_deriv = (long double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_partial_deriv;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.first_saturation_deriv = (long double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_saturation_deriv;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.second_saturation_deriv = (long double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_saturation_deriv;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.first_two_phase_deriv = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.second_two_phase_deriv = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_second_two_phase_deriv;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.first_two_phase_deriv_splined = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, CoolProp::parameters, CoolProp::parameters, double, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_first_two_phase_deriv_splined;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.melting_line = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int, int, double, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_melting_line;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.has_melting_line = (bool (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_has_melting_line;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.saturation_ancillary = (double (*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, CoolProp::parameters, int, CoolProp::parameters, double, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_saturation_ancillary;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.build_phase_envelope = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, std::string, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_build_phase_envelope;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.get_phase_envelope_data = (struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_PyPhaseEnvelopeData *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_get_phase_envelope_data;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.mole_fractions_liquid = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_liquid;
  __pyx_vtable_3smo_5media_9CoolProp5_13AbstractState_AbstractState.mole_fractions_vapor = (PyObject *(*)(struct __pyx_obj_3smo_5media_9CoolProp5_13AbstractState_AbstractState *, int __pyx_skip_dispatch))__pyx_f_3smo_5media_9CoolProp5_13AbstractState_13AbstractState_mole_fractions_vapor;
  if (PyType_Ready(&__pyx_type_3smo_5media_9CoolProp5_13AbstractState_AbstractState) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3smo_5media_9CoolProp5_13AbstractState_AbstractState.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3smo_5media_9CoolProp5_13AbstractState_AbstractState.tp_dict, __pyx_vtabptr_3smo_5media_9CoolProp5_13AbstractState_AbstractState) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "AbstractState", (PyObject *)&__pyx_type_3smo_5media_9CoolProp5_13AbstractState_AbstractState) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 16; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3smo_5media_9CoolProp5_13AbstractState_AbstractState = &__pyx_type_3smo_5media_9CoolProp5_13AbstractState_AbstractState;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "smo/media/CoolProp5/AbstractState.pyx":1
 * # This file is embedded directly in CoolProp.pyx             # <<<<<<<<<<<<<<
 * from libcpp.string cimport string
 * from libcpp.vector cimport vector
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.to_py":78
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init smo.media.CoolProp5.AbstractState", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init smo.media.CoolProp5.AbstractState");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
